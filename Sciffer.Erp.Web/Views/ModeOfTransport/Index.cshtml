@using Sciffer.Erp.Domain.Model
@{
    ViewBag.Title = "Index";
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
<br /><br /><br />
<div>
    @Html.EJ().Dialog("ErrorList").Title("ErrorList").ShowOnInit(false)
    @(Html.EJ().Grid<ref_mode_of_transport>("Grid")
        .Datasource(ds => ds.Json((IEnumerable<object>)ViewBag.Datasource).RemoveURL(Url.Action("InlineDelete", "ModeOfTransport")).InsertURL(Url.Action("InlineInsert", "ModeOfTransport")).UpdateURL(Url.Action("InlineInsert", "ModeOfTransport"))
                       .Adaptor(AdaptorType.RemoteSaveAdaptor).Offline(false))
        .EditSettings(edit => { edit.AllowAdding().AllowDeleting().AllowEditing().EditMode(EditMode.InlineFormTemplate).InlineFormTemplateID("#template").ShowDeleteConfirmDialog(true); })
        .EnableAltRow().AllowPaging()
        .PageSettings(p => { p.PageSize(10); })
        .EnableAltRow()
        .ToolbarSettings(toolbar =>
        {
            toolbar.ShowToolbar().ToolbarItems(items =>
            {
                items.AddTool(ToolBarItems.Add);
                items.AddTool(ToolBarItems.Edit);
                //items.AddTool(ToolBarItems.Delete);
                items.AddTool(ToolBarItems.Update);
                items.AddTool(ToolBarItems.Cancel);
                items.AddTool(ToolBarItems.ExcelExport);
                items.AddTool(ToolBarItems.PrintGrid);
            });
        })
        .Mappers(map => map.ExportToExcelAction(Url.Action("ExportToExcel", "Generic", new { ctrlname = "ModeOfTransport" }))
        .ExportToPdfAction(Url.Action("ExportToPdf", "Generic", new { ctrlname = "ModeOfTransport" })).ExportToWordAction(Url.Action("ExportToWord", "Generic", new { ctrlname = "ModeOfTransport" })))
        .AllowSorting()
        .AllowPaging()
        .IsResponsive()
        .AllowFiltering()
        .ShowColumnChooser()
        .AllowReordering()
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .Columns(col =>
        {
            col.Field("mode_of_transport_id").HeaderText("ID").IsPrimaryKey(true).Width(80).Visible(false).Add();
            col.Field("mode_of_transport_name").HeaderText("Country Name").ValidationRules(val => val.AddRule("required", true)).Add();           
        })
        .ClientSideEvents(eve => { eve.ActionComplete("complete").EndAdd("EndProcess").EndDelete("EndProcess").EndEdit("EndProcess"); })
    )

</div>

<script id="template" type="text/template">
    <form name="add_form">
        <div>
            <div class="row">
                <div class="col-lg-6 col-md-6 col-xs-12">
                    <input type="hidden" id="mode_of_transport_id" name="mode_of_transport_id" value="{{: mode_of_transport_id}}" class="form-control" />
                </div>
            </div>
            <div class="row">
                <div class="col-lg-2 col-md-2 col-xs-12" style="text-align: right;">
                    Mode Of Transport *
                </div>
                <div class="col-lg-6 col-md-6 col-xs-12">
                    <input type="text" id="mode_of_transport_name" name="mode_of_transport_name" value="{{: mode_of_transport_name}}" class="form-control" />
                </div>
            </div>
        </div>
    </form>
</script>



<script type="text/javascript">
    var flag = true;
    function complete(args) {
         if (args.requestType == "save")
        {
            if (args.data.text == 'duplicate') {
                sweetAlert("", "Mode Of Transport already exists", "error");
                if (args.model.dataSource.dataSource.json[0].mode_of_transport_id == null) {
                    args.model.dataSource.dataSource.json = args.model.dataSource.dataSource.json.splice(1, args.model.dataSource.dataSource.json.length);
                }
            }
            var gridObj = $("#Grid").ejGrid("instance");
            gridObj.refreshContent();
        }        
    }
    function EndProcess() {
        var gridObj = $("#Grid").ejGrid("instance");        
        gridObj.refreshContent();
    }
</script>