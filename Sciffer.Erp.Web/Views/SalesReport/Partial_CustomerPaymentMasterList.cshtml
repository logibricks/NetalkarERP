@using Sciffer.Erp.Domain.ViewModel
@using Syncfusion.JavaScript.Models
@{(Html.EJ().Grid<sales_order_report_vm>("Editing")
                                                        .Datasource(ds => ds.URL(Url.Action("GetSalesOrderData", "SalesReport") + "?entity=" + ViewBag.entity + "&customer_category_id=" + ViewBag.customer_category_id + "&customer_priority_id=" + ViewBag.customer_priority_id ).Adaptor(AdaptorType.UrlAdaptor))
                                                     
                                                        .AllowPaging().PageSettings(a => a.PageSize(20))
                                                        .AllowFiltering()
                                                            .FilterSettings(X => X.FilterType(FilterType.Excel))
                                                        .ShowColumnChooser()
                                                        .AllowSorting()
                                                        .AllowScrolling()
                                                       .Mappers(map => map.ExportToExcelAction(Url.Action("ExportToExcel", "SalesReport", new { ctrlname = "CustomerPayment" })))
                                                                                                                                      .ScrollSettings(scroll => { scroll.Width("100%"); })

                                                    .ToolbarSettings(toolbar =>
                                                    {
                                                        toolbar.ShowToolbar().ToolbarItems(items =>
                                                        {
                                                            items.AddTool(ToolBarItems.Search);
                                                            items.AddTool(ToolBarItems.ExcelExport);
                                                            items.AddTool(ToolBarItems.PrintGrid);
                                                        });
                                                    })
                                            .Columns(col =>
                                            {
                                                col.Field("customer_code").Width("10%").HeaderText("Customer Code").Add();
                                                col.Field("customer_name").Width("10%").HeaderText("Customer Name").Add();
                                                col.Field("payment_terms_code").Width("10%").HeaderText("Payment Terms Code").Add();
                                                col.Field("payment_terms_description").Width("10%").HeaderText("Payment Terms Description").Visible(true).Add();
                                                //col.Field("due_date_based").Width("10%").HeaderText("Due Date Based On").Visible(true).Add();
                                                col.Field("payment_cycle_type_name").Width("10%").HeaderText("Payment Cycle Type").Visible(true).Add();
                                                col.Field("payment_cycle_name").Width("10%").HeaderText("Payment Cycle").Visible(true).Add();
                                            })
                                            .ClientSideEvents(eve => { eve.ToolbarClick("OnToolbarClick1"); })
                                                                                                                                        ).Render();}
@Html.EJ().ScriptManager()


