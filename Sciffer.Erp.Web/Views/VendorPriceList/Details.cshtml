@model Sciffer.Erp.Domain.Model.price_list_vm1
@using Newtonsoft.Json
@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm("Edit", "PriceList"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ref_price_list</h4>
        <hr />

        @Html.HiddenFor(model => model.price_list_id)

        <div class="modal-body">
            <div class="row">
                <div class="form-group">
                    <label class="control-label col-md-3">
                        Vendor Code <span class="required">*</span>
                    </label>
                    <div class="col-md-7">
                        @{
                            Html.EJ()
                                .Autocomplete("Id")
                                .Width("100%")
                                 .ClientSideEvents(e => e.Select("onSelect2"))
                                 .WatermarkText("Select Item")
                                .Datasource((IEnumerable<object>)ViewBag.Vendor)
                                 .HighlightSearch(true)
                                 .ShowPopupButton(true)
                                 .Enabled(false)
                                .MultiColumnSettings(obj => obj.Enable(true).Columns(obj1 =>
                                {
                                    obj1.Field("VENDOR_NAME").HeaderText("Vendor Name").Add();
                                    obj1.Field("VENDOR_CODE").HeaderText("Vendor Code").Add();
                                    obj1.Field("VENDOR_ID").HeaderText("ID").Add();
                                }).ShowHeader(true).StringFormat("{1} ({0}) ({2}) "))
                                .Render();
                        }
                    </div>
                </div>
            </div>
            <br />
            <input type="hidden" id="productdetail" name="productdetail" />
            <input type="hidden" id="deleteids" name="deleteids" />
            @Html.HiddenFor(model => model.vendor_id)
            @Html.HiddenFor(model => model.vendor_name)
            @Html.HiddenFor(model => model.vendor_code)

           

            <div class="row">
                <div class="table-responsive">
                    <table class="table table-responsive table-bordered table-striped" id="ContactGrid">
                        <thead>
                            <tr>
                                <th hidden><label>ID</label></th>
                                <th><label>SR No.</label></th>
                                <th hidden><label>Item Id</label></th>
                                <th><label>Item Code</label></th>
                                <th><label>Item Name</label></th>
                                <th><label>Price</label></th>
                                <th><label>Discount</label></th>
                                <th><label>Price After Discount</label></th>
                                <th hidden><label>UOM Id</label></th>
                                <th><label>UOM name</label></th>

                            </tr>
                        </thead>

                    </table>
                </div>
            </div>
           
        </div>
    </div>
                            }




    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")

        <script type="text/javascript" src="~/Scripts/jquery.dataTables1.10.9.min.js"></script>
        <script type="text/javascript" src="~/Scripts/1.9.4.jquery.dataTables.min.js"></script>

        <script type="text/javascript">
        function codeAddress() {
            var t = $('#ContactGrid').DataTable();
            var sr_no = t.fnGetData().length+1;
            var pl_detail = @Html.Raw(JsonConvert.SerializeObject(this.Model.ref_price_list_alternate));
            console.log(pl_detail);
            var i=1;
            $.each(pl_detail, function(key, value) {

                t.fnAddData([value.price_list_alt_id,sr_no,value.item_id,value.REF_ITEM.ITEM_CODE,value.REF_ITEM.ITEM_NAME,value.price,value.discount,value.price_after_discount,value.uom_id,value.REF_UOM.UOM_NAME,''
                ]);
                i=i+1;
                sr_no++;
            });
        }
            window.onload = codeAddress;

        var x = $("#vendor_id").val();
        var y = $("#vendor_name").val();
        var z = $("#vendor_code").val();


        $("#Id").val(z + " (" + y + ") (" + x + ")");
        //$("#vendor_id").val(t.fnGetData(cc)[3] + " (" + t.fnGetData(cc)[4] + ") (" + t.fnGetData(cc)[2] + ")");
        $('#open_modal').click(function () {
            clearmodel();
        });

        function onSelect2(args) {
            var id = "";
            var matches = args.value.match(/\([^)]*\)/g);
            id = matches[1].replace(/[{()}]/g, '')
            $("#vendor_id").val('');
            $("#vendor_id").val(id);

        }

        $(".add").on("click", function (event) {
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            var vendor = $("#vendor_id").val();
            var matche = vendor.match(/\([^)]*\)/g);
            var vendor_id = matche[1].replace(/[{()}]/g, '')
            $("#Id").val(vendor_id);
            var item = $("#item_id").val();
            var matches = item.match(/\([^)]*\)/g);
            var item_id = matches[1].replace(/[{()}]/g, '');
            var item_name = matches[0].replace(/[{()}]/g, '');
            var item_code = item.replace("(" + item_name + ") (" + item_id + ")", "").trim();

            var price = $("#price").val();
            var discount = $("#discount").val();
            var price_after_discount = $("#price_after_discount").val();

            var uom = $("#uom_id").val();
            var matches = uom.match(/\([^)]*\)/g);

            var uom_id = uom[0];
            var uom_name = matches[0].replace(/[{()}]/g, '');
            // console.log(uom_name);
            //var uom_name = uom.replace("(" + uom_name + ") (" + uom_id + ")", "").trim();

            if (item_id == '') {
                swal("", "Please Select Item Name.", "error");
                return false;
            }
            if (uom_id == '') {
                swal("", "Please Select UOM Name.", "error");
                return false;
            }
            if (price == '') {
                swal("", "Please Enter Price.", "error");
                return false;
            }
            if (discount == 0) {
                swal("", "Please Enter Discount.", "error");
                return false;
            }
            if (price_after_discount == '') {
                swal("", "Please select Price After Discount.", "error");
                return false;
            }
            if ($("#srno").val() == "") {
                t.fnAddData(['', rowCount + 1, item_id, item_code, item_name, price, discount, price_after_discount,uom_id,uom_name, ''
                ]);
            }
            else {
                var cc = $("#srno").val();
                cc = parseInt(cc) - 1;
                t.fnUpdate(['', cc + 1, item_id, item_code, item_name, price, discount, price_after_discount,uom_id, uom_name, ''], cc)
            }

            clearmodel();
            return true;
        });
        function clearmodel() {
            $("#item_id").val('');
            $("#price").val('');
            $("#discount").val('');
            $("#price_after_discount").val('');
            $("#uom_id").val('');

        }

        $('#ContactGrid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            aoColumns: [
                     { sname: "a", bVisible: false },
                     { sname: "b" },
                     { sname: "c", bVisible: false },
                     { sname: "d"},
                     { sname: "e"},
                     { sname: "f"},
                     { sname: "g" },
                     { sname: "h" },
                     { sname: "i", bVisible: false },
                     { sname: "j" },
                     //{
                     //    sname: "l", sWidth: "8%",
                     //    bSortable: false,
                     //    mRender: function (data, type, full) {
                     //        return '<img class="edit" src="../../images/writing_file.png" height="20px" width="25px" alt="Edit" onclick="editRow(' + full[1] + ');" /><img class="delete" src="../../images/remove.png" height="20px" width="25px" alt="Delete" onclick="deleteRow(' + full[1] + ');" />';
                     //    }
                     //}

            ]

        });




        function editRow() {
            $('#myModal').modal('show');
            var t = $('#ContactGrid').DataTable()
            var cc = parseInt(arguments[0]) - 1;
            var s = t.fnGetData(cc)[1];
            var m = t.fnGetData(cc)[0];
            $("#srno").val(t.fnGetData(cc)[1]);
            $("#Item_Id").val(t.fnGetData(cc)[3]).trigger("change");
            $("#item_id").val(t.fnGetData(cc)[3] + " (" + t.fnGetData(cc)[4] + ") (" + t.fnGetData(cc)[2] + ")");
            $('#price').val(t.fnGetData(cc)[5]);
            $('#discount').val(t.fnGetData(cc)[6]);
            $('#price_after_discount').val(t.fnGetData(cc)[7]);
            $("#uom_id").val(t.fnGetData(cc)[8] + " (" + t.fnGetData(cc)[9] + ")");

        }

        $('#ContactGrid').on('click', '.delete', function () {

            var t = $('#ContactGrid').DataTable();
            var id = $(this).parent('td').parent('tr').index();


            var deleteids = t.fnGetData(id)[0];
            swal({
                title: "Are you sure?",

                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: true
            },
            function (isConfirm) {
            if (isConfirm) {

             $("#deleteids").val(deleteids + "~");
             t.fnDeleteRow(id);

            }
        });
        });

        function calculate() {
            var price = $("#price").val();
            var discount = $("#discount").val();
            var y = (price * discount) / 100;
            var result = (price-y)
            $("#price_after_discount").val(result);
            console.log(result);
        }

        //function TabletoJeson() {
        //    var t = $('#ContactGrid').DataTable()
        //    var rowCount = t.fnGetData().length;
        //    var str;
        //    var str1;
        //    for (i = 0; i < rowCount; i++) {

        //        str1 = t.fnGetData(i)[0] + ",";
        //        str1 = str1 + t.fnGetData(i)[1] + ",";
        //        str1 = str1 + t.fnGetData(i)[2] + ",";
        //        str1 = str1+ t.fnGetData(i)[3] + ",";
        //        str1 = str1 +  t.fnGetData(i)[4] + ",";
        //        str1 = str1 + t.fnGetData(i)[5] + ",";
        //        str1 = str1 + t.fnGetData(i)[6] + ",";
        //        str1 = str1 + t.fnGetData(i)[7] + ",";
        //        str1 = str1 + t.fnGetData(i)[8] + ",";


        //        if (i == 0) {
        //            str = str1 + "~"
        //        }
        //        else {
        //            str = str + str1 + "~";
        //        }
        //    }


        //    document.getElementsByName("productdetail")[0].value = str;
        //}

        function TabletoJeson() {
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            var str;
            var str1;
            for (i = 0; i < rowCount; i++) {

                str1 = t.fnGetData(i)[0] + ",";
                str1 = str1 + t.fnGetData(i)[1] + ",";
                str1 = str1 + t.fnGetData(i)[2] + ",";
                str1 = str1+ t.fnGetData(i)[3] + ",";
                str1 = str1 +  t.fnGetData(i)[4] + ",";
                str1 = str1 + t.fnGetData(i)[5] + ",";
                str1 = str1 + t.fnGetData(i)[6] + ",";
                str1 = str1 + t.fnGetData(i)[7] + ",";
                str1 = str1 + t.fnGetData(i)[8] + ",";
                str1 = str1 + t.fnGetData(i)[9] + ",";

                if (i == 0) {
                    str = str1 + "~"
                }
                else {
                    str = str + str1 + "~";
                }
            }


            document.getElementsByName("productdetail")[0].value = str;
        }



        //CHECK DUPLICATE NUMBER
        $("#create").click(function (e) {
            e.preventDefault();
            var PlantTransferNumber = $('#pla_transfer_number').val();

            if (PlantTransferNumber == "") {
                sweetAlert("", "plant transfer number is required!", "error");
            }
            else {
                $.ajax({
                    url: '@Url.Action("CheckDuplicate", "PlantTransfer")',
                    type: "GET",
                    dataType: "JSON",
                    asynch: true,
                    data: { st: PlantTransferNumber, id: 0 },
                    success: function (output) {
                        if (output != 0) {
                            sweetAlert("", PlantTransferNumber + " is already present in databse!", "error");
                        }
                        else {
                            document.forms[0].submit();
                        }
                    }
                });
            }
        });
        $('.form-horizontal').find('input, textarea, button, select').attr('disabled','disabled');
        </script>
    }


