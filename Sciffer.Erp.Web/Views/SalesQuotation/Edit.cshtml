@model Sciffer.Erp.Domain.ViewModel.SAL_QUOTATION_VM
@using Newtonsoft.Json
@{
    ViewBag.Title = "Create";
}
@using (Html.BeginForm("Edit", "SalesQuotation", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="margin-top:10px;">
        <div id="quotationdetail" hidden></div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(a => a.QUOTATION_ID)
        <div class="form-group">
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SALES_CATEGORY_ID, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-4 col-sm-4 col-xs-12">
                            @Html.DropDownList("SALES_CATEGORY_ID", (System.Web.Mvc.SelectList)ViewBag.categorylist, "---Select---", new { @class = "form-control removedisabled category validinput", @required = true, @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.SALES_CATEGORY_ID, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.QUOTATION_NUMBER, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12 hidden" })
                        <div class="col-md-4 col-sm-4 col-xs-12">
                            @Html.EditorFor(model => model.QUOTATION_NUMBER, new { htmlAttributes = new { @class = "form-control validinput removedisabled num removedisabled", @disabled = "disabled", @required = true } })
                            @Html.ValidationMessageFor(model => model.QUOTATION_NUMBER, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.QUOTATION_DATE, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.QUOTATION_DATE, new { htmlAttributes = new { @class = "form-control postingdocumentdate  validinput removedisabled", @disabled = "disabled", @required = true } })
                            @Html.ValidationMessageFor(model => model.QUOTATION_DATE, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.BUYER_ID, "Bill to party *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("BUYER_ID", (System.Web.Mvc.SelectList)ViewBag.customerlist, "", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true })
                            @Html.ValidationMessageFor(model => model.BUYER_ID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CONSIGNEE_ID, "Ship to Party *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("CONSIGNEE_ID", (System.Web.Mvc.SelectList)ViewBag.customerlist, "", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true })
                            @Html.ValidationMessageFor(model => model.CONSIGNEE_ID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.supply_state_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("supply_state_id", (System.Web.Mvc.SelectList)ViewBag.billingstatelist, "", new { @class = "form-control validinput removedisabled", @required = true })
                            @Html.ValidationMessageFor(model => model.supply_state_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.delivery_state_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("delivery_state_id", (System.Web.Mvc.SelectList)ViewBag.billingstatelist, "", new { @class = "form-control validinput removedisabled", @required = true })
                            @Html.ValidationMessageFor(model => model.delivery_state_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SAL_NET_VALUE, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-5 col-sm-5 col-xs-12">
                            @Html.EditorFor(model => model.SAL_NET_VALUE, new { htmlAttributes = new { @class = "form-control right removedisabled", @required = true, @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.SAL_NET_VALUE, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3 col-sm-3 col-xs-12">
                            @Html.DropDownList("NET_VALUE_CURRENCY_ID", (System.Web.Mvc.SelectList)ViewBag.Currencylist, new { @class = "form-control removedisabled", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.NET_VALUE_CURRENCY_ID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SAL_GROSS_VALUE, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-5 col-sm-5 col-xs-12">
                            @Html.EditorFor(model => model.SAL_GROSS_VALUE, new { htmlAttributes = new { @class = "form-control right removedisabled", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.SAL_GROSS_VALUE, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3 col-sm-3 col-xs-12">
                            @Html.DropDownList("GROSS_VALUE_CURRENCY_ID", (System.Web.Mvc.SelectList)ViewBag.Currencylist, new { @class = "form-control removedisabled", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.GROSS_VALUE_CURRENCY_ID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-body" role="tabpanel" data-example-id="togglable-tabs">
            <ul id="myTab" class="nav nav-tabs bar_tabs" role="tablist">
                <li class="active"><a data-toggle="tab" href="#sectionA">Sales</a></li>
                <li><a data-toggle="tab" href="#sectionB">Line Item</a></li>
                <li><a data-toggle="tab" href="#sectionC">Customer</a></li>
                <li><a data-toggle="tab" href="#sectionD">Accounting</a></li>
                <li><a data-toggle="tab" href="#sectionE">Information</a></li>
            </ul>
            <div class="tab-content">
                <div id="sectionA" class="tab-pane fade in active" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.BUSINESS_UNIT_ID, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">

                                    @Html.DropDownList("BUSINESS_UNIT_ID", (System.Web.Mvc.SelectList)ViewBag.businesslist, "---Select---", new { @class = "form-control validinput", @required = true })
                                    @Html.ValidationMessageFor(model => model.BUSINESS_UNIT_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.PLANT_ID, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("PLANT_ID", (System.Web.Mvc.SelectList)ViewBag.plantlist, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true, @onchange = "GetStorageLocation(this.value)" })
                                    @Html.ValidationMessageFor(model => model.PLANT_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.FREIGHT_TERMS_ID, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("FREIGHT_TERMS_ID", (System.Web.Mvc.SelectList)ViewBag.freightlist, "---Select---", new { @class = "form-control validinput", @required = true })
                                    @Html.ValidationMessageFor(model => model.FREIGHT_TERMS_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.TERRITORY_ID, "Territory", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("TERRITORY_ID", (System.Web.Mvc.SelectList)ViewBag.territorylist, "---Select---", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.TERRITORY_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SALES_RM_ID, "Sales RM", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("SALES_RM_ID", (System.Web.Mvc.SelectList)ViewBag.salesexlist, "---Select---", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SALES_RM_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.DELIVERY_DATE, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.DELIVERY_DATE, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.DELIVERY_DATE, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.CUSTOMER_RFQ_NO, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.CUSTOMER_RFQ_NO, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CUSTOMER_RFQ_NO, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.CUSTOMER_RFQ_DATE, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.CUSTOMER_RFQ_DATE, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CUSTOMER_RFQ_DATE, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.doc_currency_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("doc_currency_id", (System.Web.Mvc.SelectList)ViewBag.Currencylist, new { @class = "form-control validinput removedisabled", @disabled = "disable" })
                                    @Html.ValidationMessageFor(model => model.doc_currency_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.QUOTATION_EXPIRY_DATE, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.QUOTATION_EXPIRY_DATE, new { htmlAttributes = new { @class = "form-control ddlform" } })
                                    @Html.ValidationMessageFor(model => model.QUOTATION_EXPIRY_DATE, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.FORM_ID, "Sale against Form", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("FORM_ID", (System.Web.Mvc.SelectList)ViewBag.formlist, "---Select---", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.FORM_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sectionB" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">

                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    <button type="button" class="btn btn-primary" style="float:right" data-toggle="modal" data-target="#myModal"><span class="glyphicon glyphicon-plus"></span>Add Item</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="table-responsive">
                            <table class="table table-responsive table-bordered table-striped" id="ContactGrid">
                                <thead>
                                    <tr>
                                        <th hidden><label>ID</label></th>
                                        <th><label>Sr. No.</label></th>
                                        <th hidden><label>Item ID</label></th>
                                        <th hidden><label>Item Code</label></th>
                                        <th><label>Item</label></th>
                                        <th hidden><label>SAC/HSN ID</label></th>
                                        <th><label>SAC/HSN Code</label></th>
                                        <th><label>Delivery Date</label></th>
                                        <th><label>Quantity</label></th>
                                        <th hidden><label>UOM ID</label></th>
                                        <th><label>UoM</label></th>
                                        <th><label>Unit Price</label></th>
                                        <th><label>Discount</label></th>
                                        <th><label>Eff. Price</label></th>
                                        <th><label>Sales Value</label></th>
                                        <th hidden><label>Taxable Rate</label></th>
                                        <th hidden><label>Taxable Value</label></th>
                                        <th hidden><label>Tax Code</label></th>
                                        <th hidden><label>Sloc</label></th>
                                        <th hidden><label>Tax Name</label></th>
                                        <th hidden><label>Drawing No</label></th>
                                        <th hidden><label>Material Cost Per Unit</label></th>
                                        <th><label>Action</label></th>

                                    </tr>
                                </thead>

                            </table>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">

                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="table-responsive">
                                <table class="table table-responsive table-bordered table-striped" id="TaxGrid"></table>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sectionC" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.BILLING_ADDRESS, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.BILLING_ADDRESS, new { htmlAttributes = new { @class = "form-control ddlform validinput removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.BILLING_ADDRESS, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SHIPPING_ADDRESS, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.SHIPPING_ADDRESS, new { htmlAttributes = new { @class = "form-control ddlform removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.SHIPPING_ADDRESS, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.BILLING_CITY, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.BILLING_CITY, new { htmlAttributes = new { @class = "form-control ddlform removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.BILLING_CITY, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SHIPPING_CITY, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.SHIPPING_CITY, new { htmlAttributes = new { @class = "form-control ddlform removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.SHIPPING_CITY, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.BILLING_PINCODE, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.BILLING_PINCODE, new { htmlAttributes = new { @class = "form-control ddlform pincode removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.BILLING_PINCODE, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SHIPPING_PINCODE, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.SHIPPING_PINCODE, new { htmlAttributes = new { @class = "form-control ddlform validinput removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.SHIPPING_PINCODE, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.BILLING_COUNTRY_ID, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("BILLING_COUNTRY_ID", (System.Web.Mvc.SelectList)ViewBag.corlist, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.BILLING_COUNTRY_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SHIPPING_COUNTRY_ID, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("SHIPPING_COUNTRY_ID", (System.Web.Mvc.SelectList)ViewBag.corlist, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.SHIPPING_COUNTRY_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.BILLING_STATE_ID, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("BILLING_STATE_ID", (System.Web.Mvc.SelectList)ViewBag.billingstatelist, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.BILLING_STATE_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SHIPPING_STATE_ID, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("SHIPPING_STATE_ID", (System.Web.Mvc.SelectList)ViewBag.corrstatelist, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.SHIPPING_STATE_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.BILLING_EMAIL_ID, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.BILLING_EMAIL_ID, new { htmlAttributes = new { @class = "form-control ddlform removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.BILLING_EMAIL_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SHIPPING_EMAIL_ID, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.SHIPPING_EMAIL_ID, new { htmlAttributes = new { @class = "form-control ddlform removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.SHIPPING_EMAIL_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.pan_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.pan_no, new { htmlAttributes = new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true } })
                                    @Html.ValidationMessageFor(model => model.pan_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.shipping_pan_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.shipping_pan_no, new { htmlAttributes = new { @class = "form-control validinput removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.shipping_pan_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.gst_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.gst_no, new { htmlAttributes = new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true } })
                                    @Html.ValidationMessageFor(model => model.gst_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.shipping_gst_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.shipping_gst_no, new { htmlAttributes = new { @class = "form-control validinput removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.shipping_gst_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sectionD" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.PAYMENT_CYCLE_TYPE_ID, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("PAYMENT_CYCLE_TYPE_ID", (System.Web.Mvc.SelectList)ViewBag.paymentcycletype, "---Select---", new { @class = "form-control validinput", @required = true, @onchange = "FillPaymentCycle()" })
                                    @Html.ValidationMessageFor(model => model.PAYMENT_CYCLE_TYPE_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.PAYMENT_CYCLE_ID, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("PAYMENT_CYCLE_ID", (System.Web.Mvc.SelectList)ViewBag.paymentcyclelist, "---Select---", new { @class = "form-control validinput", @required = true })
                                    @Html.ValidationMessageFor(model => model.PAYMENT_CYCLE_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.PAYMENT_TERMS_ID, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("PAYMENT_TERMS_ID", (System.Web.Mvc.SelectList)ViewBag.paymenttermslist, "", new { @class = "form-control validinput removedisabled", @required = true })
                                    @Html.ValidationMessageFor(model => model.PAYMENT_TERMS_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div id="sectionE" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.INTERNAL_REMARKS, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.INTERNAL_REMARKS, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.INTERNAL_REMARKS, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.REMARKS, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.REMARKS, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.REMARKS, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.attachment, "Attachment", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    <input type="file" class="form-control" id="FileUpload" name="FileUpload" accept="application/pdf, image/*" />
                                    @Html.ValidationMessageFor(model => model.attachment, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">

                        </div>
                        <input type="hidden" id="productdetail" name="productdetail" />
                        <input type="hidden" id="attributedetail" name="attributedetail" />
                        <input type="hidden" id="formdetail" name="formdetail" />
                        <input type="hidden" id="deleteids" name="deleteids" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg12 col-sm-12">
            <div class="form-group">
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <input type="submit" value="Update" id="create" class="btn btn-success" data-id="@Model.QUOTATION_ID" data-controller="SalesQuotation" onclick="TabletoJeson();" style="float:right" />
                </div>
            </div>
        </div>
    </div>
        <!-- Modal -->
    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" onclick="clearmodel();">&times;</button>
                    <h4 class="modal-title">Items Detail</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3">
                                Item <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                @Html.DropDownList("ITEM_ID", (System.Web.Mvc.SelectList)ViewBag.itemlist, "", new { @class = "form-control", @onchange = "GetUnit(this.value);" })
                            </div>

                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                SAC/HSN Code <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                @Html.DropDownList("sac_hsn_id", Enumerable.Empty<SelectListItem>(), "---Select---", new { @class = "form-control col-md-7 col-xs-12", @disabled = "disabled" })
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Sloc <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                @Html.DropDownList("storage_location_id", Enumerable.Empty<SelectListItem>(), "---Select---", new { @class = "form-control col-md-7 col-xs-12" })
                            </div>
                        </div>
                    </div>
                    <br />

                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3">
                                Delivery Date <span class="required">*</span>
                            </label>
                            <div class="col-md-7">

                                <input type="date" class="form-control col-md-7 col-xs-12" id="dte">
                            </div>
                        </div>
                    </div>
                    <br />

                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Quantity <span class="required">*</span>
                            </label>
                            <div class="col-md-4">
                                <input type="number" class="form-control col-md-7 col-xs-12" id="quantity" onchange="calculation()">
                            </div>
                            <div class="col-md-3">
                                @Html.DropDownList("UOM", (System.Web.Mvc.SelectList)ViewBag.unitlist, "---Select---", new { @class = "form-control col-md-7 col-xs-12", @disabled = "disabled" })
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Unit Price <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <input type="number" class="form-control col-md-7 col-xs-12" id="unitprice" onchange="calculation()">
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Discount (%) <span class="required"></span>
                            </label>
                            <div class="col-md-7">
                                <input type="number" class="form-control col-md-7 col-xs-12" id="discount" onchange="calculation()">
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Effective Unit Price <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <input type="number" class="form-control col-md-7 col-xs-12" id="effectiveprice" readonly="readonly">
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Sales Value <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <input type="number" class="form-control col-md-7 col-xs-12" id="salesvalue" readonly="readonly">
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Taxable Rate <span class="required"></span>
                            </label>
                            <div class="col-md-7">
                                <input type="number" class="form-control col-md-7 col-xs-12" id="assessablerate" onchange="asscalculation()">
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Taxable Value <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <input type="number" class="form-control col-md-7 col-xs-12" id="assessablevalue" readonly="readonly">
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Tax Code <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                @Html.DropDownList("taxcode", (System.Web.Mvc.SelectList)ViewBag.taxlist, "", new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Drawing No <span class="required"></span>
                            </label>
                            <div class="col-md-7">
                                <input type="text" class="form-control col-md-7 col-xs-12" id="drawing_no">
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Material Cost Per Unit <span class="required"></span>
                            </label>
                            <div class="col-md-7">
                                <input type="number" class="form-control col-md-7 col-xs-12" id="material_cost_per_unit">
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="modal-footer">
                    <input type="hidden" id="srno" />
                    <input type="hidden" id="detailid" />
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="clearmodel();">Close</button>
                    <button type="button" class="add btn btn-primary" id="additem" name="additem">Add Item</button>
                </div>
            </div>

        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
</div>
<script src="~/Scripts/requirevalidation.js"></script>
<script src="~/Scripts/RemoveUnexpectedFile.js"></script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            $( "#quotationdetail" ).empty();
            var error=@Html.Raw(Json.Encode(ViewBag.error));
            if(error !="")
            {
                sweetAlert("",error,"error");
            }
            $("#BUYER_ID").select2({
                placeholder: "Select Bill to party",
                allowClear: true
            });
            $("#CONSIGNEE_ID").select2({
                placeholder: "Select Ship to party",
                allowClear: true
            });
            $("#BUSINESS_UNIT_ID").select2({
                placeholder: "Select Business Unit",
                allowClear: true
            });
            $("#PLANT_ID").select2({
                placeholder: "Select Plant",
                allowClear: true
            });
            $("#taxcode").select2({
                placeholder: "Select Tax",
                allowClear: true
            });
            $("#ITEM_ID").select2({
                placeholder: "Select Item",
                allowClear: true
            });
            $("#PAYMENT_TERMS_ID").select2({
                placeholder: "Select Payment Terms",
                allowClear: true
            });
            $("#supply_state_id").select2({
                placeholder: "Select Place of Supply",
                allowClear: true
            });
            $("#delivery_state_id").select2({
                placeholder: "Select Place of Delivery",
                allowClear: true
            });
            $("#storage_location_id").select2({
                placeholder: "Select SLoc",
                allowClear: true
            });
            var t = $('#ContactGrid').DataTable();
            var t1=$('#AttributeGrid').DataTable();
            var quotation_detail = @Html.Raw(JsonConvert.SerializeObject(this.Model));
            var str="";
            var str1="";
            var tot = 0;
            var count=1;
            console.log(quotation_detail);
            $("#SAL_NET_VALUE").val(parseFloat(quotation_detail.SAL_NET_VALUE).toFixed(2));
            $.each(quotation_detail.sal_quotation_detail_vm, function(key, value) {
                var input = value.delivery_date;
                var output = input.substring(0, 10);
                t.fnAddData([value.quotation_detail_id, count,value.item_id,value.item_code,value.item_code + "/" + value.item_name,value.sac_hsn_id,value.sac_hsn_name, output, parseFloat(value.quantity).toFixed(2),value.uom_id, value.uom_name, parseFloat(value.unit_price).toFixed(2), parseFloat(value.discount).toFixed(2), parseFloat(value.effective_unit_price).toFixed(2), parseFloat(value.sales_value).toFixed(2), parseFloat(value.assessable_rate).toFixed(2), parseFloat(value.assessable_value).toFixed(2), value.tax_id,value.sloc_id,value.tax_code + '/' + value.tax_name,value.drawing_no,parseFloat(value.material_cost_per_unit).toFixed(2),''
                ]);
                str1 = value.tax_id + "~";
                str1 = str1 + value.assessable_value + "~";
                str1 = str1 + value.sales_value;
                if (str == "") {
                    str = str1 + ","
                }
                else {
                    str = str + str1 + ",";
                }
                tot = tot + parseFloat(value.sales_value);
                count=count+1;
            });
            GetTaxDetail(str.slice(0, -1), tot, $("#QUOTATION_DATE").val());
            $.each(quotation_detail.SAL_QUOTATION_FORM, function(key, value) {
                $("#FORM_ID").val(value.FORM_ID);
            });
            GetStorageLocation($("#PLANT_ID").val());
        document.getElementById('QUOTATION_DATE').valueAsDate = new Date();

      //  $("ITEM_ID1").Value("45612375 (RM 1) (2)");
    });
    $("#additem").on("click", function (event) {
        var detail_id= $("#detailid").val();
        var t = $('#ContactGrid').DataTable();
        var rowCount = t.fnGetData().length;
        var item_id = $("#ITEM_ID").val();
        var item_code = $("#ITEM_ID").find("option:selected").text();
        var item_name = $("#ITEM_ID").find("option:selected").text();
        var delevery_date = $("#dte").val();
        var qty = $("#quantity").val();
        var unit_id = $("#UOM").val();
        var unit_name = $("#UOM").find("option:selected").text();
        var unit_price = $("#unitprice").val();
        var discount = $("#discount").val();
        var effectiveprice = $("#effectiveprice").val();
        var salesvalue = $("#salesvalue").val();
        var assessablerate = $("#assessablerate").val();
        var assessablevalue = $("#assessablevalue").val();
        var tax_name = $("#taxcode").find("option:selected").text();
        var tax_code = $("#taxcode").val();
        var sloc = $("#storage_location_id").val();
        var drawing_no = $("#drawing_no").val();
        var material_cost_per_unit = $("#material_cost_per_unit").val();
        var hsn_id =$("#sac_hsn_id").val();
        var hsn_code =$("#sac_hsn_id").find("option:selected").text();
        if (item_id == '')
        {
            swal("","Please Select Item Name.","error");
            return false;
        }
        if(hsn_id=='')
        {
            swal("", "Please Select SAC/HSN Code.", "error");
            return false;
        }
        if(hsn_id==0)
        {
            swal("", "Please Select SAC/HSN Code.", "error");
            return false;
        }
        if (sloc == '') {
            swal("", "Please Select Storage Location.", "error");
            return false;
        }
        if (delevery_date == '')
        {
            swal("", "Please Select Delivery Date.", "error");
            return false;
        }
        if (qty == '') {
            swal("", "Please Enter Quantity.", "error");
            return false;
        }
        if (qty == 0) {
            swal("", "Quantity should be greater than zero.", "error");
            return false;
        }
        if (unit_id == '') {
            swal("", "Please select Unit.", "error");
            return false;
        }
        if (unit_price == '') {
            swal("", "Please enter unit price.", "error");
            return false;
        }
        if (assessablerate == '')
        {
            swal("", "Taxable rate is required.", "error");
            return false;
        }
        if (assessablerate == 0) {
            swal("", "Taxable rate is required.", "error");
            return false;
        }
        if (tax_code == '') {
            swal("", "Please select tax code.", "error");
            return false;
        }
        if (discount == '')
        {
            discount = 0;
        }
        if(material_cost_per_unit=="")
        {
            material_cost_per_unit=0;
        }
        if ($("#srno").val() == "")
        {
            t.fnAddData([detail_id, rowCount + 1, item_id,item_code, item_name,hsn_id,hsn_code, delevery_date, parseFloat(qty).toFixed(2), unit_id, unit_name, parseFloat(unit_price).toFixed(2), parseFloat(discount).toFixed(2), parseFloat(effectiveprice).toFixed(2), parseFloat(salesvalue).toFixed(2), parseFloat(assessablerate).toFixed(2), parseFloat(assessablevalue).toFixed(2), tax_code, sloc, tax_name,drawing_no,parseFloat(material_cost_per_unit).toFixed(2), ''
            ]);
        }
        else
        {
            var cc = $("#srno").val();
            cc = parseInt(cc)-1;
            t.fnUpdate([detail_id, cc + 1, item_id,item_code, item_name,hsn_id,hsn_code, delevery_date, parseFloat(qty).toFixed(2), unit_id, unit_name, parseFloat(unit_price).toFixed(2), parseFloat(discount).toFixed(2), parseFloat(effectiveprice).toFixed(2), parseFloat(salesvalue).toFixed(2), parseFloat(assessablerate).toFixed(2), parseFloat(assessablevalue).toFixed(2), tax_code, sloc, tax_name,drawing_no,parseFloat(material_cost_per_unit).toFixed(2), ''], cc)
        }

        clearmodel();
        getnetTotal();
        var rowCount = t.fnGetData().length;
        var str;
        var str1;
        var tot = 0;
        for (i = 0; i < rowCount; i++) {
            str1 = t.fnGetData(i)[17] + "~";
            str1 = str1 + t.fnGetData(i)[16] + "~";
            str1 = str1 + t.fnGetData(i)[14];
            if (i == 0) {
                str = str1 + ","
            }
            else {
                str = str + str1 + ",";
            }
            tot = tot + parseFloat(t.fnGetData(i)[14]);
        }
        GetTaxDetail(str.slice(0, -1), tot, $("#QUOTATION_DATE").val());
        return true;
    });
    function clearmodel()
    {
        $("#ITEM_ID").select2("val", "");
        document.getElementById("ITEM_ID").disabled = false;
        $("#quantity").val('');
        $("#UOM").val('');
        $("#unitprice").val('');
        $("#discount").val('');
        $("#effectiveprice").val('');
        $("#salesvalue").val('');
        $("#assessablerate").val('');
        $("#assessablevalue").val('');
        $("#taxcode").select2("val", "");
        $("#srno").val('');
        $("#sac_hsn_id").html("");
        $("#sac_hsn_id").append($('<option></option>').val(0).html("---Select---"));
        $("#storage_location_id").select2("val", "");
        $("#detailid").val("");
        $("#drawing_no").val('');
        $("#material_cost_per_unit").val('');
    }
    function calculation() {
        var quantity = $("#quantity").val();
        var unitprice = $("#unitprice").val();
        var discount = $("#discount").val();
        var assessable = $("#assessablerate").val();
       // alert(discount);
        var effectiveprice = 0;
        if (quantity=="")
        {
            quantity = 0;
        }
        if (unitprice=="")
        {
            unitprice = 0;
        }
        if (discount=="")
        {
            effectiveprice = unitprice;
        }
        else
        {
            effectiveprice = unitprice - (unitprice * discount / 100);
        }
        $("#effectiveprice").val(effectiveprice);
        $("#assessablerate").val(effectiveprice);
        $("#salesvalue").val(effectiveprice * quantity);
        //if (assessable=="")
        //{
        //    $("#assessablerate").val(effectiveprice);
        //}
        var assessable1=$("#assessablerate").val();
        $("#assessablevalue").val(assessable1 * quantity);
    }
    function asscalculation()
    {
        var quantity = $("#quantity").val();
        var assessable1 = $("#assessablerate").val();
        $("#assessablevalue").val(assessable1 * quantity);
    }
    function GetTaxDetail(taxdetail, amount,dt) {
        $.ajax({
            url: '@Url.Action("GetTaxCalculation", "Generic")',
            type: "GET",
            dataType: "JSON",
            data: {entity:"calculatetax", st: taxdetail, amt:amount,dt:dt,tds_code_id:0 },
            success: function (Payment_Cycle) {
                $('#TaxGrid tbody').html('');
                $.each(Payment_Cycle, function (i, cycle) {
                    $('#TaxGrid').append('<tbody>');
                    $('#TaxGrid').append('<tr><td>' + cycle.tax_name + '</td><td align="right">' +parseFloat(cycle.tax_value).toFixed(2) + '</td></tr>')
                    $('#TaxGrid').append('</tbody>');
                    $("#SAL_GROSS_VALUE").val(parseFloat(cycle.tax_value).toFixed(2));
                });
            }
        });
    }
    $('#ContactGrid').DataTable({
        "bPaginate": false,
        "ordering": false,
        "bfooter": false,
        "info": false,
        "bLengthChange": false,
        "bAutoWidth": false,
        "bFilter": false,
        "bSort": false,
        aoColumns: [
                 { sname: "a", bVisible: false },
                 { sname: "b", sWidth: "6%" },
                 { sname: "c", bVisible: false },
                 { sname: "d", bVisible: false  },
                 { sname: "e" },
                 { sname: "f", bVisible: false  },
                 { sname: "g" },
                 { sname: "h", sWidth: "8%" },
                 { sname: "i", sWidth: "8%","sClass": "right"  },
                 { sname: "j", bVisible: false },
                 { sname: "k", sWidth: "8%" },
                 { sname: "l", sWidth: "8%","sClass": "right"  },
                 { sname: "m","sClass": "right"  },
                 { sname: "n","sClass": "right" , sWidth: "10%"},
                 { sname: "o", sWidth: "10%","sClass": "right"  },
                 { sname: "p", bVisible: false,"sClass": "right"  },
                 { sname: "q", sWidth: "8%", bVisible: false,"sClass": "right"  },
                 { sname: "r", bVisible: false },
                 { sname: "s", bVisible: false },
                 { sname: "t", sWidth: "8%", bVisible: false},
                 { sname: "u", sWidth: "8%", bVisible: false},
                 { sname: "v", sWidth: "8%","sClass": "right", bVisible: false },
                 {
                     sname: "w", sWidth: "8%",
                     bSortable: false,
                     mRender: function (data, type, full) {
                         return '<img class="edit" src="../images/writing_file.png" height="20px" width="25px" alt="Edit" /><img class="delete" src="../images/remove.png" height="20px" width="25px" alt="Delete" />';
                     }
                 },
        ]


    });

    $('#ContactGrid').on('click', '.edit', function () {
        var t = $('#ContactGrid').DataTable();
        var id = $(this).parent('td').parent('tr').index();
        $('#myModal').modal('show');
        $("#srno").val(t.fnGetData(id)[1]);
        $("#ITEM_ID").select2("val", t.fnGetData(id)[2]);
        $('#dte').val(t.fnGetData(id)[7]);
        $('#quantity').val(t.fnGetData(id)[8]);
        $('#UOM').val(t.fnGetData(id)[9]);
        $('#unitprice').val(t.fnGetData(id)[11]);
        $('#discount').val(t.fnGetData(id)[12]);
        $('#effectiveprice').val(t.fnGetData(id)[13]);
        $('#salesvalue').val(t.fnGetData(id)[14]);
        $('#assessablerate').val(t.fnGetData(id)[15]);
        $('#assessablevalue').val(t.fnGetData(id)[16]);
        $("#taxcode").select2("val", t.fnGetData(id)[17]);
        $("#storage_location_id").select2("val", t.fnGetData(id)[18]);
        $("#drawing_no").val(t.fnGetData(id)[19]);
        $("#material_cost_per_unit").val(t.fnGetData(id)[20]);
        $("#detailid").val(t.fnGetData(id)[0]);
        document.getElementById("ITEM_ID").disabled = true;
    });
    $('#ContactGrid').on('click', '.delete', function () {
        var t = $('#ContactGrid').DataTable();
        var id = $(this).parent('td').parent('tr').index();
        var deleteids = t.fnGetData(id)[0];
        var del = $("#deleteids").val();
        swal({
            title: "Are you sure?",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Yes, delete it!",
            closeOnConfirm: true
        },
 function (isConfirm) {
     if (isConfirm) {
         if (del != '') {
             $("#deleteids").val(del + "" + deleteids + "~");
         }
         else {
             $("#deleteids").val(deleteids + "~");
         }

         t.fnDeleteRow(id);
         getnetTotal();
         var rowCount = t.fnGetData().length;
         var str;
         var str1;
         var tot = 0;
         for (i = 0; i < rowCount; i++) {
             str1 = t.fnGetData(i)[17] + "~";
             str1 = str1 + t.fnGetData(i)[16] + "~";
             str1 = str1 + t.fnGetData(i)[14];
             if (i == 0) {
                 str = str1 + ","
             }
             else {
                 str = str + str1 + ",";
             }
             tot = tot + parseFloat(t.fnGetData(i)[14]);
         }
         GetTaxDetail(str.slice(0, -1), tot, $("#QUOTATION_DATE").val());
         var len = t.fnGetData().length;
         var i = 1;
         var row = 0;
         if (len > 0) {
             $('#ContactGrid tbody tr').each(function () {
                 t.fnUpdate(i, row, 1);
                 i++;
                 row++;
             });
         }
     }
 });
    });
    function GetUnit(id)
    {
       // var id = $("#ITEM_ID").val();
        if (id != '')
        {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetUserDescriptionForItem", "Generic")',
                data: { id: id },
                success: function (ITEM) {
                    console.log(ITEM);
                    $('#UOM').val(ITEM.UOM_ID);
                    $("#sac_hsn_id").html(""); // clear before appending new list
                    if(ITEM.sac_id!=0)
                    {
                        $("#sac_hsn_id").append($('<option></option>').val(ITEM.sac_id).html(ITEM.sac_name));
                    }
                    else
                    {
                        $("#sac_hsn_id").append($('<option></option>').val(0).html("---Select---"));
                    }
                },
                error: function (emp) {
                    $('#UOM').val('');
                    $("#sac_hsn_id").html(""); // clear before appending new list
                    $("#sac_hsn_id").append($('<option></option>').val(0).html("---Select---"));
                }
            });
        }
        else
        {
            $('#UOM').val('');
            $("#sac_hsn_id").html(""); // clear before appending new list
            $("#sac_hsn_id").append($('<option></option>').val(0).html("---Select---"));
        }

    }
    function getnetTotal()
    {
        var t = $('#ContactGrid').DataTable();
        var rowCount = t.fnGetData().length;
        var total = 0;
        for (i = 0; i < rowCount; i++) {
            total = total + parseFloat(t.fnGetData(i)[14]);
        }
        $("#SAL_NET_VALUE").val(parseFloat(total).toFixed(2));
        $("#SAL_GROSS_VALUE").val(parseFloat(total).toFixed(2));
    }
    function FillPaymentCycle() {
        var Payment_Cycle = $('#PAYMENT_CYCLE_TYPE_ID').val();
        if (Payment_Cycle == "") {
            Payment_Cycle = 0;
        }
        $.ajax({
            url:'@Url.Action("FillPaymentCycle", "Generic")',
            type: "GET",
            dataType: "JSON",
            data: { Payment_Type_id: Payment_Cycle },
            success: function (Payment_Cycle) {
                $("#PAYMENT_CYCLE_ID").html(""); // clear before appending new list
                $("#PAYMENT_CYCLE_ID").append($('<option></option>').val(0).html("---Select---"));
                $.each(Payment_Cycle, function (i, cycle) {
                    $("#PAYMENT_CYCLE_ID").append(
                        $('<option></option>').val(cycle.PAYMENT_CYCLE_ID).html(cycle.PAYMENT_CYCLE_NAME));
                });
            }
        });
    }

        function TabletoJeson()
        {
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            var str;
            var str1;
            $( "#quotationdetail" ).empty();
            for (i = 0; i < rowCount; i++) {
                $("#quotationdetail").append('<input type="hidden" id="quotation_detail_id1' + i + '" name="quotation_detail_id1" value=' + t.fnGetData(i)[0] + ' >');
                $("#quotationdetail").append('<input type="hidden" id="sr_no1' + i + '" name="sr_no1" value=' + t.fnGetData(i)[1] + ' >');
                $("#quotationdetail").append('<input type="hidden" id="item_id1' + i + '" name="item_id1" value=' + t.fnGetData(i)[2] + ' >');
                $("#quotationdetail").append('<input type="hidden" id="sac_hsn_id1' + i + '" name="sac_hsn_id1" value=' + t.fnGetData(i)[5] + ' >');
                $("#quotationdetail").append('<input type="hidden" id="delivery_date1' + i + '" name="delivery_date1" value=' + t.fnGetData(i)[7] + ' >');
                $("#quotationdetail").append('<input type="hidden" id="quantity1' + i + '" name="quantity1" value=' + t.fnGetData(i)[8] + ' >');
                $("#quotationdetail").append('<input type="hidden" id="uom_id1' + i + '" name="uom_id1" value=' + t.fnGetData(i)[9] + ' >');
                $("#quotationdetail").append('<input type="hidden" id="unit_price1' + i + '" name="unit_price1" value=' + t.fnGetData(i)[11] + ' >');
                $("#quotationdetail").append('<input type="hidden" id="discount1' + i + '" name="discount1" value=' + t.fnGetData(i)[12] + ' >');
                $("#quotationdetail").append('<input type="hidden" id="effective_unit_price1' + i + '" name="effective_unit_price1" value=' + t.fnGetData(i)[13] + ' >');
                $("#quotationdetail").append('<input type="hidden" id="sales_value1' + i + '" name="sales_value1" value=' + t.fnGetData(i)[14] + ' >');
                $("#quotationdetail").append('<input type="hidden" id="assessable_rate1' + i + '" name="assessable_rate1" value=' + t.fnGetData(i)[15] + ' >');
                $("#quotationdetail").append('<input type="hidden" id="assessable_value1' + i + '" name="assessable_value1" value=' + t.fnGetData(i)[16] + ' >');
                $("#quotationdetail").append('<input type="hidden" id="tax_id1' + i + '" name="tax_id1" value=' + t.fnGetData(i)[17] + ' >');
                $("#quotationdetail").append('<input type="hidden" id="sloc_id1' + i + '" name="sloc_id1" value=' + t.fnGetData(i)[18] + ' >');
                $("#quotationdetail").append('<input type="hidden" id="drawing_no1' + i + '" name="drawing_no1" value=' + t.fnGetData(i)[19] + ' >');
                $("#quotationdetail").append('<input type="hidden" id="material_cost_per_unit1' + i + '" name="material_cost_per_unit1" value=' + t.fnGetData(i)[21] + ' >');
            }
        }

    </script>
    <script type="text/javascript">
        $("#doc_currency_id").change(function () {
            $("#NET_VALUE_CURRENCY_ID").val(this.value);
            $("#GROSS_VALUE_CURRENCY_ID").val(this.value);
        })
        function GetStorageLocation(id) {
            if (id == "") {
                id = 0;
            }
            $.ajax({
                url: '@Url.Action("GetStorageLocation", "Generic")',
                type: "GET",
                dataType: "JSON",
                data: { id: id },
                success: function (id) {
                    $("#storage_location_id").html(""); // clear before appending new list
                    $("#storage_location_id").append($('<option></option>').val("").html("---Select---"));
                    $.each(id, function (i, cycle) {
                        $("#storage_location_id").append(
                            $('<option></option>').val(cycle.storage_location_id).html(cycle.storage_location_name));
                    });
                }
            });
        }
    </script>
}



