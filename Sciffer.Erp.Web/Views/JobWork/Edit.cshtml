@model Sciffer.Erp.Domain.ViewModel.in_jobwork_in_VM
@using Newtonsoft.Json
@{
    ViewBag.Title = "Edit";
}
@using (Html.BeginForm("Edit", "JobWork", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal" style="margin-top:10px;">
        <div id="CustomerBalanceHidden"></div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(x => x.job_work_in_id)
        <div class="form-group">
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.category_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-4 col-sm-4 col-xs-12">
                            @Html.DropDownList("category_id", (System.Web.Mvc.SelectList)ViewBag.categorylist, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true })
                            @Html.ValidationMessageFor(model => model.category_id, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-4 col-sm-4 col-xs-12">
                            @Html.EditorFor(model => model.document_no, new { htmlAttributes = new { @class = "form-control num removedisabled", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.document_no, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.posting_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.posting_date, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.posting_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.customer_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("customer_id", (System.Web.Mvc.SelectList)ViewBag.Customerlist, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.customer_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.status_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("status_id", (System.Web.Mvc.SelectList)ViewBag.Statuslist, "---Select---", new { @class = "form-control  removedisabled", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.status_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-body" role="tabpanel" data-example-id="togglable-tabs">
            <ul id="myTab" class="nav nav-tabs bar_tabs" role="tablist">
                <li class="active"><a data-toggle="tab" href="#sectionA">General</a></li>
                <li><a data-toggle="tab" href="#sectionB">Line Item</a></li>
                <li><a data-toggle="tab" href="#sectionC">Customer</a></li>
            </ul>
            <div class="tab-content">
                <div id="sectionA" class="tab-pane fade in active" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.business_unit_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("business_unit_id", (System.Web.Mvc.SelectList)ViewBag.bussunitlist, "---Select---", new { @class = "form-control  removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.business_unit_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.plant_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("plant_id", (System.Web.Mvc.SelectList)ViewBag.plantlist, "---Select---", new { @class = "form-control  validinput removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.plant_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.customer_chalan_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.customer_chalan_no, new { htmlAttributes = new { @class = "form-control validinput removedisabled", oninput = "myFunction()" } })
                                    @Html.ValidationMessageFor(model => model.customer_chalan_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.customer_chalan_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.customer_chalan_date, new { htmlAttributes = new { @class = "form-control validinput removedisabled" } })
                                    @Html.ValidationMessageFor(model => model.customer_chalan_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.gate_entry_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.gate_entry_no, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.gate_entry_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.gate_entry_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.gate_entry_date, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.gate_entry_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sectionB" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    <button type="button" class="btn btn-primary" id="open_modal" style="float:right" data-toggle="modal" data-target="#myModal"><span class="glyphicon glyphicon-plus"></span>Add Details</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="table-responsive">
                            <table class="table table-responsive table-bordered table-striped" id="ContactGrid">
                                <thead>
                                    <tr>
                                        <th><label>ID</label></th> <!--0-->
                                        <th><label>SR No.</label></th> <!--1-->
                                        <th><label>Item ID</label></th> <!--2-->
                                        <th><label>Item Code</label></th> <!--3-->
                                        <!--<th><label>Item Description</label></th>--> <!--4-->
                                        <th><label>Qty</label></th> <!-5-->
                                        <th><label>Rate</label></th> <!--6-->
                                        <th><label>UOM ID</label></th>
                                        <th><label>UOM</label></th>
                                        <th><label>Batch</label></th>
                                        <th><label>Sloc ID</label></th>
                                        <th><label>Sloc</label></th>
                                        <th><label>Bucket ID</label></th>
                                        <th><label>Bucket</label></th>
                                        <th><label>Bal Qty</label></th>
                                        <th><label>Action</label></th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="table-responsive">
                                <table class="table table-responsive table-bordered table-striped" id="TaxGrid"></table>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sectionC" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_address, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.billing_address, new { htmlAttributes = new { @class = "form-control ddlform  validinput" } })
                                    @Html.ValidationMessageFor(model => model.billing_address, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_city, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.billing_city, new { htmlAttributes = new { @class = "form-control ddlform  validinput" } })
                                    @Html.ValidationMessageFor(model => model.billing_city, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.pin_code, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.pin_code, new { htmlAttributes = new { @class = "form-control validinput" } })
                                    @Html.ValidationMessageFor(model => model.pin_code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Country_id, "Country *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("Country_id", (System.Web.Mvc.SelectList)ViewBag.countrylist, "---Select---", new { @class = "form-control  validinput", })
                                    @Html.ValidationMessageFor(model => model.Country_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.state_id, "State *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("state_id", (System.Web.Mvc.SelectList)ViewBag.satelist, "---Select---", new { @class = "form-control  validinput", })
                                    @Html.ValidationMessageFor(model => model.state_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row ">
            <div class="col-lg12 col-sm-12">
                <div class="form-group">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <input type="submit" value="Update" data-controller="JobWork" id="create" class="btn btn-success" onclick="TabletoJeson();" style="float:right" />
                    </div>
                </div>
            </div>
        </div>
    </div>

}
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Job Work Details</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control col-md-7 col-xs-12" id="job_Work_detail_in_id" readonly />
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Item <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("ITEM_ID", (System.Web.Mvc.SelectList)ViewBag.Item, "---Select---", new { @class = "form-control col-md-7 col-xs-12 removedisabled", @disabled = "disabled" })
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Quantity <span class="required">*</span>
                        </label>
                        <div class="col-md-4">
                            <input type="number" class="form-control col-md-7 col-xs-12" id="Quantity" readonly />
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownList("UOM_ID", (System.Web.Mvc.SelectList)ViewBag.UOMList, "---Select---", new { @class = "form-control col-md-7 col-xs-12 removedisabled", @disabled = "disabled" })
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Batch
                        </label>
                        <div class="col-md-7">
                            <input type="text" class="form-control" name="Batch" id="Batch" readonly />
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Sloc
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("storage_location_id", (System.Web.Mvc.SelectList)ViewBag.Sloclist, "---Select---", new { @class = "form-control col-md-7 col-xs-12 removedisabled", @disabled = "disabled" })
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Bucket
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("bucket_id", (System.Web.Mvc.SelectList)ViewBag.BucketList, "---Select---", new { @class = "form-control col-md-7 col-xs-12 removedisabled", @disabled = "disabled" })
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Rate <span class="required"></span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control col-md-7 col-xs-12" id="rate" />
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Balance Qty <span class="required"></span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control col-md-7 col-xs-12" id="bal_quantity" readonly />
                        </div>
                    </div>
                </div>
                <br />
            </div>
            <div class="modal-footer">
                <input type="hidden" id="srno" />
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="clearmodel();">Close</button>
                <button type="button" class="add btn btn-primary">Add </button>
            </div>
        </div>
    </div>
</div>
<div>
    <div class="col-md-6 col-sm-6 col-xs-2">
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })

        <input type="button" value="Cancel Job Work" class="btn btn-danger pull-right" data-toggle="modal" data-target="#myModal1" style="float:right" id="cancel_pi" onclick="canclearmodel();" />
    </div>
</div>
<div class="modal fade" id="myModal1" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="canclearmodel();">&times;</button>
                <h3 class="modal-title" style="text-align:center"><span style="color:red">Are you sure you want to cancel this Job Work? You will not be able to reverse this action. </span></h3>
            </div>
            <div class="modal-body">
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Cancellation Reason <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("reason_id", (System.Web.Mvc.SelectList)ViewBag.cancellationreasonlist, "---Select---", new { @class = "form-control col-md-7 col-xs-12" })
                            @*@Html.EditorFor(model => model.cancellation_remarks, new { htmlAttributes = new { @class = "form-control" } })*@
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Remarks
                        </label>
                        <div class="col-md-7">
                            <textarea id="cancel_remarks" class="form-control"></textarea>
                        </div>
                    </div>
                </div>
                <br />
            </div>
            <br />
            <div class="modal-footer">
                <input type="hidden" id="srno" />
                <button type="button" class="btn btn-danger" data-dismiss="modal" onclick="canclearmodel();">No</button>
                <button type="button" class="btn btn-success" id="Cancelled" name="Cancelled" onclick="Cancel_Receipt();">Yes</button>
            </div>
        </div>

    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/RemoveUnexpectedFile.js"></script>
    <script src="~/Scripts/requirevalidation.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {

            //document.getElementById('posting_date').valueAsDate = new Date();
            //document.getElementById('customer_chalan_date').valueAsDate = new Date();
            //document.getElementById('gate_entry_date').valueAsDate = new Date();

            var t = $('#ContactGrid').DataTable();
            var sr_no = t.fnGetData().length+1;
            var pl_detail = @Html.Raw(JsonConvert.SerializeObject(this.Model));
            var status=  @Html.Raw(JsonConvert.SerializeObject(ViewBag.Statuslist));
            var cans=status.filter(x=>x.Value==pl_detail.status_id);
            console.log(pl_detail.posting_date);
            if (cans.length>0) {

                if(cans[0].Text!=null)
                {
                    if(cans[0].Text =='Cancelled' )
                    {
                        // $("#status_id").hide();
                        $("#cancel_pi").hide();
                        $("#create").hide();
                        $("#form :input").prop("disabled", true);
                        $("#status").show();
                    }
                    else if( cans[0].Text =='Closed' )
                    {
                        // $("#status_id").hide();
                        $("#cancel_pi").hide();
                        $("#create").hide();
                        $("#form :input").prop("disabled", true);
                        $("#closed").show();
                    }
                    else if( cans[0].Text =='Open' )
                    {
                        // $("#status_id").hide();
                        $("#open").show();
                        $("#cancel_pi").show();
                    }
                    else
                    {
                        $("#cancel_pi").hide();
                        $("#status_id").hide();
                       
                    }
                }
            }
            else {
                $("#cancel_pi").hide();
            }
            //if(cans[0].Text!=null)
            //{
            //    if(cans[0].Text =='Cancelled' )
            //    {
            //       // $("#status_id").hide();
            //        $("#cancel_pi").hide();
            //       // $("#create").hide();
            //        $("#form :input").prop("disabled", true);
            //        $("#status").show();
            //    }
            //    else if( cans[0].Text =='Closed' )
            //    {
            //       // $("#status_id").hide();
            //        $("#cancel_pi").hide();
            //       // $("#create").hide();
            //        $("#form :input").prop("disabled", true);
            //        $("#closed").show();
            //    }
            //    else if( cans[0].Text =='Open' )
            //    {
            //       // $("#status_id").hide();
            //        $("#open").show();
            //    }
            //    else
            //    {
            //        $("#status_id").hide();
            //        $("#Partially_Open").show();
            //    }
            //}

            var i=1;
            console.log(pl_detail.in_jobwork_detail);
            $.each(pl_detail.in_jobwork_detail, function(key, value) {

                //0, rowCount + 1, ITEM_ID, ITEM_NAME, Quantity, UOM_ID, UOM_NAME,Batch, storage_location_id, storage_location_name, bucket_id, bucket_name, ''

                t.fnAddData([value.job_work_detail_in_id,
                    sr_no,
                    value.REF_ITEM.ITEM_ID,
                   // value.REF_ITEM.ITEM_CODE,
                    value.REF_ITEM.ITEM_NAME,
                    value.quantity,
                    value.rate,
                    value.REF_UOM.UOM_ID,
                    value.REF_UOM.UOM_NAME,
                    value.batch,
                    value.REF_STORAGE_LOCATION.storage_location_id,
                    value.REF_STORAGE_LOCATION.storage_location_name,
                    value.ref_bucket.bucket_id,
                    value.ref_bucket.bucket_name,
                    value.bal_quantity,'']);
                i=i+1;
                sr_no++;
            });

        })



        $('#ContactGrid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            aoColumns: [
                     { sname: "a", bVisible: false },
                     { sname: "b", sWidth: "5%" },
                     { sname: "c", bVisible: false},
                     { sname: "d", bVisible: true },
                     //{ sname: "e", sWidth: "10%" },
                     { sname: "f", bVisible: true },
                     { sname: "g", bVisible: true },
                     { sname: "h", bVisible: false },
                     { sname: "i", bVisible: true },
                     { sname: "j", bVisible: true },
                     { sname: "k", bVisible: false },
                     { sname: "l", bVisible: true  },
                     { sname: "m", bVisible: false },
                     { sname: "n", bVisible: true  },
                     { sname: "p", bVisible: true  },
                     {
                         sname: "o", sWidth: "8%",
                         bSortable: false,
                         mRender: function (data, type, full) {
                             return '<img class="edit" src="../images/writing_file.png" height="20px" width="25px" alt="Edit" onclick="editRow(' + full[1] + ');" />';
                         }
                     }]

        });

        $('#open_modal').click(function () {
            clearmodel();
        });

        $(".add").on("click", function (event) {
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            var job_Work_detail_in_id = $("#job_Work_detail_in_id").val();
            var ITEM_ID = $("#ITEM_ID").val();
            var ITEM_NAME = $("#ITEM_ID option:selected").text();

            var Quantity = $("#Quantity").val();

            var UOM_ID = $("#UOM_ID").val();
            var UOM_NAME = $("#UOM_ID option:selected").text();

            var Batch = $("#Batch").val();

            var storage_location_id = $("#storage_location_id").val();
            var storage_location_name = $("#storage_location_id option:selected").text();

            var bucket_id = $("#bucket_id").val();
            var bucket_name = $("#bucket_id option:selected").text();
            var rate = $("#rate").val();
            var bal_quantity = $("#bal_quantity").val();
            if ($("#srno").val() == "") {
                t.fnAddData([job_Work_detail_in_id, rowCount + 1, ITEM_ID, ITEM_NAME, Quantity,rate, UOM_ID, UOM_NAME,Batch, storage_location_id, storage_location_name, bucket_id, bucket_name,bal_quantity, ''
                ]);
            }
            else {
                var cc = $("#srno").val();
                cc = parseInt(cc) - 1;
                t.fnUpdate([job_Work_detail_in_id, cc + 1,  ITEM_ID, ITEM_NAME, Quantity,rate, UOM_ID, UOM_NAME,Batch, storage_location_id, storage_location_name, bucket_id, bucket_name,bal_quantity, ''], cc)
            }

            clearmodel();
            return true;
        });

        function clearmodel() {
            $("#ITEM_ID").val('');
            $("#Quantity").val('');
            $("#UOM_ID").val('');
            $("#Batch").val('');
            $("#storage_location_id").val('');
            $("#bucket_id").val('');
        }



        function editRow() {
            $('#myModal').modal('show');
            var t = $('#ContactGrid').DataTable()
            var cc = parseInt(arguments[0]) - 1;
            $("#srno").val(t.fnGetData(cc)[1]);
            $("#job_Work_detail_in_id").val(t.fnGetData(cc)[0]);
            $("#ITEM_ID").val(t.fnGetData(cc)[2]);
            $('#Quantity').val(t.fnGetData(cc)[4]);
            $('#rate').val(t.fnGetData(cc)[5]);
            $("#UOM_ID").val(t.fnGetData(cc)[6]);
            $("#Batch").val(t.fnGetData(cc)[8]);
            $("#storage_location_id").val(t.fnGetData(cc)[9]);
            $("#bucket_id").val(t.fnGetData(cc)[11]);
            if($('#rate').val() =="" ||$('#rate').val() == 0){
                document.getElementById('rate').readOnly=false;
            }
            else{
                document.getElementById('rate').readOnly=true;
            }
            $("#bal_quantity").val(t.fnGetData(cc)[13]);
        }

        $('#ContactGrid').on('click', '.delete', function () {

            var t = $('#ContactGrid').DataTable();
            var id = $(this).parent('td').parent('tr').index();


            var deleteids = t.fnGetData(id)[1];
            swal({
                title: "Are you sure?",

                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: true
            },
        function (isConfirm) {
            if (isConfirm) {

                $("#deleteids").val(deleteids + "~");
                t.fnDeleteRow(id);
            }
        });
        });

        function GetUnit() {
            var id = $("#ITEM_ID").val();
            if (id != '') {
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetUnitofItem", "Generic")',
                    data: { id: id },
                    success: function (ITEM) {
                        $('#UOM_ID').val(ITEM.item);
                    },
                    error: function (emp) {
                        $('#UOM_ID').val('');
                    }
                });
            }
            else {
                $('#UOM_ID').val('');
            }
        }

        function GetStorageLocation(id) {
            if (id == "") {
                id = 0;
            }
            $.ajax({
                url: '@Url.Action("GetStorageLocation", "Generic")',
                type: "GET",
                dataType: "JSON",
                data: { id: id },
                success: function (id) {
                    $("#storage_location_id").html(""); // clear before appending new list
                    $("#storage_location_id").append($('<option></option>').val("").html("---Select---"));
                    $.each(id, function (i, cycle) {
                        $("#storage_location_id").append(
                            $('<option></option>').val(cycle.storage_location_id).html(cycle.storage_location_name));
                    });
                }
            });
        }

        function buyerchange(id) {
            if (id != "") {
                GetBuyerDetails(id);
                GetConsigneeDetails(id);
            }
        };

        function Cancel_Receipt()
        {
            if($("#reason_id").val()=="")
            {
                swal("Error!", "Please select the reason for cancellation", "error")
                return false;
            }
            else{
                $.ajax({
                    url: '@Url.Action("DeleteConfirmed", "JobWork")',
                    type: "POST",
                    dataType: "JSON",
                    async:false,
                    data: { id: $("#job_work_in_id").val(),cancellation_remarks: $("#cancel_remarks").val(),cancellation_reason_id:$("#reason_id").val()},
                    success: function (id) {
                        if(id=="Cancelled")
                        {

                            swal({
                                title: "Cancelled",
                                text: "Your Jobwork " + $("#document_no").val() + " has been cancelled.",
                                type: "success",
                                showCancelButton: false,
                                closeOnConfirm: false,
                                showLoaderOnConfirm: false
                            }, function () {
                                location.href = '@Url.Action("Index", "JobWork")'
                            });
                        }
                        else
                        {
                            swal("Error", id, "error");
                        }

                    }
                });
            }
        }

        function GetBuyerDetails(id) {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetBuyerDetails", "Generic")',
                data: { id: id },
                success: function (emp) {
                    $('#billing_address').val(emp.billing.BILLING_ADDRESS);
                    $('#billing_city').val(emp.billing.BILLING_CITY);
                    $('#Country_id').val(emp.billing.BILLING_COUNTRY_ID);
                    $('#state_id').val(emp.billing.BILLING_STATE_ID);
                    $('#pin_code').val(emp.billing.BILLING_PINCODE);
                    $('#email').val(emp.billing.EMAIL_ID_PRIMARY);
                },
                error: function (emp) {
                    $('#billing_address').val('');
                    $('#billing_city').val('');
                    $('#Country_id').val('');
                    $('#state_id').val('');
                    $('#pin_code').val('');
                    $('#email').val('');
                }
            });
        }


        //function TabletoJeson() {
        //    var t = $('#ContactGrid').DataTable()
        //    var rowCount = t.fnGetData().length;
        //    var str;
        //    var str1;
        //    $("#CustomerBalanceHidden").empty();
        //    for (i = 0; i < rowCount; i++) {

        //        $("#CustomerBalanceHidden").append('<input type="hidden" id="ITEM_ID' + i + '" name="Item_id">');
        //        $("#CustomerBalanceHidden").append('<input type="hidden" id="Quantity' + i + '" name="Quantity">');
        //        $("#CustomerBalanceHidden").append('<input type="hidden" id="rate' + i + '" name="rate">');
        //        $("#CustomerBalanceHidden").append('<input type="hidden" id="UOM_ID' + i + '" name="uom_id">');
        //        $("#CustomerBalanceHidden").append('<input type="hidden" id="Batch' + i + '" name="batch">');
        //        $("#CustomerBalanceHidden").append('<input type="hidden" id="storage_location_id' + i + '" name="sloc_id">');
        //        $("#CustomerBalanceHidden").append('<input type="hidden" id="bucket_id' + i + '" name="bucketid">');
        //        $("#CustomerBalanceHidden").append('<input type="hidden" id="rate' + i + '" name="rate">');

        //        //$("#job_Work_detail_in_id" + i).val(t.fnGetData(i)[0]);
        //        //$("#srno"+I).val(t.fnGetData(cc)[1]);
        //        $("#ITEM_ID" + i).val(t.fnGetData(i)[2]);
        //        $('#Quantity' + i).val(t.fnGetData(i)[3]);
        //        $('#Quantity' + i).val(t.fnGetData(i)[4]);
        //        $("#UOM_ID" + i).val(t.fnGetData(i)[5]);
        //        $("#Batch" + i).val(t.fnGetData(i)[7]);
        //        $("#storage_location_id" + i).val(t.fnGetData(i)[8]);
        //        $("#bucket_id" + i).val(t.fnGetData(i)[10]);
        //        $('#rate' + i).val(t.fnGetData(i)[5]);
        //    }
        //}
        function TabletoJeson() {
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            var str;
            var str1;
            $("#CustomerBalanceHidden").empty();
            for (i = 0; i < rowCount; i++) {
                $("#CustomerBalanceHidden").append('<input type="hidden" id="job_Work_detail_in_id' + i + '" name="job_Work_detail_in_id">');
                $("#CustomerBalanceHidden").append('<input type="hidden" id="Item_id' + i + '" name="Item_id">');
                $("#CustomerBalanceHidden").append('<input type="hidden" id="Quantity' + i + '" name="Quantity">');
                $("#CustomerBalanceHidden").append('<input type="hidden" id="rate' + i + '" name="rate">');
                $("#CustomerBalanceHidden").append('<input type="hidden" id="uom_id' + i + '" name="uom_id">');
                $("#CustomerBalanceHidden").append('<input type="hidden" id="batch' + i + '" name="batch">');
                $("#CustomerBalanceHidden").append('<input type="hidden" id="sloc_id' + i + '" name="sloc_id">');
                $("#CustomerBalanceHidden").append('<input type="hidden" id="bucket_id' + i + '" name="bucket_id">');

                $("#job_Work_detail_in_id" + i).val(t.fnGetData(i)[0]);
                $("#Item_id" + i).val(t.fnGetData(i)[2]);
                $('#Quantity' + i).val(t.fnGetData(i)[4]);
                $('#rate' + i).val(t.fnGetData(i)[5]);
                $("#uom_id" + i).val(t.fnGetData(i)[6]);
                $("#batch" + i).val(t.fnGetData(i)[8]);
                $("#sloc_id" + i).val(t.fnGetData(i)[9]);
                $("#bucket_id" + i).val(t.fnGetData(i)[11]);
            }
        }
        function myFunction() {
            var batc ="";
            editRow1(1);
            function editRow1() {
                var t = $('#ContactGrid').DataTable()
                var cc = parseInt(arguments[0]) - 1;
                $("#bal_quantity").val(t.fnGetData(cc)[13]);
                $("#Batch").val(t.fnGetData(cc)[8]);
                $('#Quantity').val(t.fnGetData(cc)[4]);
                batc=$("#Batch").val()
            }
            if($("#bal_quantity").val() !=$("#Quantity").val()){
                swal({
                    title: "Are you sure?",
                    text: "Few items have been used and sold under this batch with the old Batch Number.!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonClass: "btn-danger",
                    confirmButtonText: "OK",
                    cancelButtonText: "Cancel",
                    closeOnConfirm: false,
                    closeOnCancel: false
                },
                function(isConfirm) {
                    if (isConfirm) {
                        swal( "Got Your Confirmation.", "success");
                    } else {
                        $("#customer_chalan_no").val(batc);
                        swal("Cancelled", "Cancelled", "error");
                    }
                });
            }
            else{
            }
        }
    </script>
}


