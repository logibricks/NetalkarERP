@model Sciffer.Erp.Domain.ViewModel.in_jobwork_in_VM

@{
    ViewBag.Title = "Create";
}
@using (Html.BeginForm("Create", "JobWork", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal" style="margin-top:10px;">
        <div id="CustomerBalanceHidden"></div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.category_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("category_id", (System.Web.Mvc.SelectList)ViewBag.categorylist, new { @class = "form-control category validinput setPlant", @required = true, @onchange = "getcustomer(this.value);" })
                            @Html.ValidationMessageFor(model => model.category_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.posting_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.posting_date, new { htmlAttributes = new { @class = "form-control postingdocumentdate postingdate " } })
                            @Html.ValidationMessageFor(model => model.posting_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.customer_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @*@Html.DropDownList("customer_id", (System.Web.Mvc.SelectList)ViewBag.Customerlist, "", new { @class = "form-control validinput ", @required = true, @onchange = "buyerchange(this.value);" })*@
                            @Html.DropDownList("customer_id", Enumerable.Empty<SelectListItem>(), "---Select---", new { @class = "form-control ", @onchange = "buyerchange(this.value);", @required = true, })
                            @Html.ValidationMessageFor(model => model.customer_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

        </div>

        <div class="panel panel-body" role="tabpanel" data-example-id="togglable-tabs">
            <ul id="myTab" class="nav nav-tabs bar_tabs" role="tablist">
                <li class="active"><a data-toggle="tab" href="#sectionA">General</a></li>
                <li><a data-toggle="tab" href="#sectionB">Line Item</a></li>
                <li><a data-toggle="tab" href="#sectionC">Customer</a></li>
            </ul>
            <div class="tab-content">
                <div id="sectionA" class="tab-pane fade in active" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.business_unit_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("business_unit_id", (System.Web.Mvc.SelectList)ViewBag.bussunitlist, "", new { @class = "form-control  validinput", })
                                    @Html.ValidationMessageFor(model => model.business_unit_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.plant_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("plant_id", (System.Web.Mvc.SelectList)ViewBag.plantlist, "", new { @class = "form-control  validinput removedisabled selectedbycategory", @onchange = "GetStorageLocation(this.value)", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.plant_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.customer_chalan_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.customer_chalan_no, new { htmlAttributes = new { @class = "form-control validinput " } })
                                    @Html.ValidationMessageFor(model => model.customer_chalan_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.customer_chalan_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.customer_chalan_date, new { htmlAttributes = new { @class = "form-control validinput" } })
                                    @Html.ValidationMessageFor(model => model.customer_chalan_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.gate_entry_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.gate_entry_no, new { htmlAttributes = new { @class = "form-control " } })
                                    @Html.ValidationMessageFor(model => model.gate_entry_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.gate_entry_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.gate_entry_date, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.gate_entry_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div id="sectionB" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">

                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    <button type="button" class="btn btn-primary" id="open_modal" style="float:right" data-toggle="modal" data-target="#myModal"><span class="glyphicon glyphicon-plus"></span>Add Details</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="table-responsive">
                            <table class="table table-responsive table-bordered table-striped clearGridbyCategory" id="ContactGrid">
                                <thead>
                                    <tr>
                                        <th><label>ID</label></th>  <!--1-->
                                        <th><label>SR No.</label></th> <!--2-->
                                        <th><label>Item ID</label></th> <!-3--->
                                        <th><label>Item </label></th> <!--4-->
                                        <th><label>Qty</label></th> <!--5-->
                                        <th><label>Rate</label></th> <!--6-->
                                        <th><label>UOM ID</label></th> <!--7-->
                                        <th><label>UOM</label></th> <!--8-->
                                        <th><label>Batch</label></th> <!--9-->
                                        <th><label>Sloc ID</label></th> <!--10-->
                                        <th><label>Sloc</label></th> <!--11-->
                                        <th><label>Bucket ID</label></th> <!--12-->
                                        <th><label>Bucket</label></th> <!--13-->
                                        <th><label>Action</label></th> <!--14-->
                                    </tr>
                                </thead>

                            </table>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">

                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="table-responsive">
                                <table class="table table-responsive table-bordered table-striped" id="TaxGrid"></table>
                            </div>
                        </div>
                    </div>
                </div>

                <div id="sectionC" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_address, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.billing_address, new { htmlAttributes = new { @class = "form-control ddlform  validinput removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.billing_address, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_city, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.billing_city, new { htmlAttributes = new { @class = "form-control ddlform  validinput removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.billing_city, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.pin_code, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.pin_code, new { htmlAttributes = new { @class = "form-control validinput removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.pin_code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Country_id, "Country *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("Country_id", (System.Web.Mvc.SelectList)ViewBag.countrylist, "---Select---", new { @class = "form-control  validinput removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.Country_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.state_id, "State *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("state_id", (System.Web.Mvc.SelectList)ViewBag.satelist, "---Select---", new { @class = "form-control  validinput removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.state_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg12 col-sm-12">
            <div class="form-group">
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <input type="submit" value="Create" class="btn btn-success" data-controller="JobWork" id="create" onclick="TabletoJeson();" style="float:right" />
                </div>
            </div>
        </div>
    </div>
}

<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Job Work Details</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Item <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("ITEM_ID", (System.Web.Mvc.SelectList)ViewBag.Item, "", new { @class = "form-control col-md-7 col-xs-12", @onchange = "GetUnit()" })
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Quantity <span class="required">*</span>
                        </label>
                        <div class="col-md-4">
                            <input type="number" class="form-control col-md-7 col-xs-12" id="Quantity" />
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownList("UOM_ID", (System.Web.Mvc.SelectList)ViewBag.UOMList, "---Select---", new { @class = "form-control col-md-7 col-xs-12", @disabled = "disabled" })
                        </div>
                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Batch <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <input type="text" class="form-control" name="Batch" id="Batch" />
                        </div>
                    </div>

                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Sloc <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("storage_location_id", (System.Web.Mvc.SelectList)ViewBag.Sloclist, "", new { @class = "form-control col-md-7 col-xs-12 removedisabled", @disabled = "disabled" })
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Bucket <span class="required">*</span>
                        </label>

                        <div class="col-md-7">
                            @Html.DropDownList("bucket_id", (System.Web.Mvc.SelectList)ViewBag.BucketList, "---Select---", new { @class = "form-control col-md-7 col-xs-12", })
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Rate <span class="required"></span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control col-md-7 col-xs-12" id="rate" />
                        </div>
                    </div>
                </div>
                <br />
            </div>
            <div class="modal-footer">
                <input type="hidden" id="srno" />
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="clearmodel();">Close</button>
                <button type="button" class="add btn btn-primary">Add </button>
            </div>
        </div>
    </div>
</div>



<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/RemoveUnexpectedFile.js"></script>
    <script src="~/Scripts/requirevalidation.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {
            var error=@Html.Raw(Json.Encode(ViewBag.error));
            if(error !="")
            {
                sweetAlert("",error,"error");
            }
            getcustomer($("#category_id").val());
            document.getElementById('posting_date').valueAsDate = new Date();
            $("#customer_id").select2({
                placeholder: "Select Customer",
                allowClear: true
            });
            $("#business_unit_id").select2({
                placeholder: "Select Business Unit",
                allowClear: true
            });
            $("#plant_id").select2({
                placeholder: "Select Plant",
                allowClear: true
            });
            $("#ITEM_ID").select2({
                placeholder: "Select Item",
                allowClear: true
            });
            //$("#storage_location_id").select2({
            //    placeholder: "Select SLoc",
            //    allowClear: true
            //});
        })



        $('#ContactGrid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            aoColumns: [
                     { sname: "a", bVisible: false },
                     { sname: "b", sWidth: "5%" },
                     { sname: "c", bVisible: false },
                     { sname: "d", bVisible: true },
                     { sname: "e", sWidth: "10%" },
                     { sname: "f", sWidth: "10%" },
                     { sname: "g", bVisible: false },
                     { sname: "h", bVisible: true },
                     { sname: "i", bVisible: true },
                     { sname: "j", bVisible: false },
                     { sname: "k", bVisible: true },
                     { sname: "l", bVisible: false },
                     { sname: "m", sWidth: "10%", sClass: "alignRight" },

                     {
                         sname: "n", sWidth: "8%",
                         bSortable: false,
                         mRender: function (data, type, full) {
                             return '<img class="edit" src="../images/writing_file.png" height="20px" width="25px" alt="Edit" onclick="editRow(' + full[1] + ');" /><img class="delete" src="../images/remove.png" height="20px" width="25px" alt="Delete" onclick="deleteRow(' + full[1] + ');" />';
                         }
                     }]

        });

        $('#open_modal').click(function () {
            clearmodel();
        });

        $(".add").on("click", function (event) {
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;

            var ITEM_ID = $("#ITEM_ID").val();
            var ITEM_NAME = $("#ITEM_ID option:selected").text();

            var Quantity = $("#Quantity").val();

            var UOM_ID = $("#UOM_ID").val();
            var UOM_NAME = $("#UOM_ID option:selected").text();

            var Batch = $("#Batch").val();

            var storage_location_id = $("#storage_location_id").val();
            var storage_location_name = $("#storage_location_id option:selected").text();

            var bucket_id = $("#bucket_id").val();
            var bucket_name = $("#bucket_id option:selected").text();
            var rate =$("#rate").val();

            if (ITEM_ID == '') {
                swal("", "Please Select Item.", "error");
                return false;
            }

            if (ITEM_NAME == '') {
                swal("", "Please Select Item Name.", "error");
                return false;
            }
            if (Quantity == '') {
                swal("", "Please enter Quantity.", "error");
                return false;
            }
            if (UOM_ID == '') {
                swal("", "Please select UOM.", "error");
                return false;
            }
            if (UOM_NAME == '') {
                swal("", "Please select UOM NAME.", "error");
                return false;
            }
            if (Batch == '') {
                swal("", "Please enter Batch.", "error");
                return false;
            }
            if (storage_location_id == '') {
                swal("", "Please select storage location.", "error");
                return false;
            }
            if (storage_location_name == '') {
                swal("", "Please select storage location name.", "error");
                return false;
            }
            if (bucket_id == '') {
                swal("", "Please select Bucket.", "error");
                return false;
            }
            if (bucket_name == '') {
                swal("", "Please select bucket name.", "error");
                return false;
            }

            if ($("#srno").val() == "") {
                t.fnAddData([0, rowCount + 1, ITEM_ID, ITEM_NAME, Quantity,rate, UOM_ID, UOM_NAME, Batch, storage_location_id, storage_location_name, bucket_id, bucket_name, ''
                ]);
            }
            else {
                var cc = $("#srno").val();
                cc = parseInt(cc) - 1;
                t.fnUpdate([0, cc + 1, ITEM_ID, ITEM_NAME, Quantity,rate, UOM_ID, UOM_NAME, Batch, storage_location_id, storage_location_name, bucket_id, bucket_name, ''], cc)
            }

            clearmodel();
            return true;
        });

        function clearmodel() {
            $("#ITEM_ID").val('').trigger("change");;
            $("#Quantity").val('');
            $("#UOM_ID").val('');
            $("#Batch").val('');
         //   $("#storage_location_id").val('');
            $("#bucket_id").val('');
            $("#srno").val('');
        }



        function editRow() {
            $('#myModal').modal('show');
            var t = $('#ContactGrid').DataTable()
            var cc = parseInt(arguments[0]) - 1;
            $("#srno").val(t.fnGetData(cc)[1]);
            $("#ITEM_ID").val(t.fnGetData(cc)[2]).trigger("change");
            $('#Quantity').val(t.fnGetData(cc)[4]);
            $("#rate").val(t.fnGetData(cc)[5]);
            $("#UOM_ID").val(t.fnGetData(cc)[6]);
            $("#Batch").val(t.fnGetData(cc)[8]);
            $("#storage_location_id").val(t.fnGetData(cc)[9]);
            $("#bucket_id").val(t.fnGetData(cc)[11]);

        }

        $('#ContactGrid').on('click', '.delete', function () {

            var t = $('#ContactGrid').DataTable();
            var id = $(this).parent('td').parent('tr').index();


            var deleteids = t.fnGetData(id)[1];
            swal({
                title: "Are you sure?",

                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: true
            },
        function (isConfirm) {
            if (isConfirm) {

                $("#deleteids").val(deleteids + "~");
                t.fnDeleteRow(id);
            }
        });
        });

        function GetUnit() {
            var id = $("#ITEM_ID").val();
            if (id != '') {
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetUomOrQualityManage", "Generic")',
                    data: { id: id },
                    async:false,
                    success: function (ITEM) {
                        //console.log(ITEM);
                        $('#UOM_ID').val(ITEM.item.UOM_ID);
                        if(ITEM.item.QUALITY_MANAGED==false)
                        {
                            $('#bucket_id').val("")
                            $("#bucket_id option[value=1]").hide();
                            $('#bucket_id').prop("disabled", false)
                        }
                        else
                        {
                            $('#bucket_id').val("1")
                            $("#bucket_id option[value=1]").show();
                            $('#bucket_id').prop("disabled","disabled")

                        }
                    },
                    error: function (emp) {
                        $('#UOM_ID').val('');
                    }
                });
            }
            else {
                $('#UOM_ID').val('');
            }
        }

        function GetStorageLocation(id) {
            if (id == "") {
                id = 0;
            }
            $.ajax({
                url: '@Url.Action("GetStorageLocation", "Generic")',
                type: "GET",
                dataType: "JSON",
                data: { id: id },
                success: function (id) {
                    $("#storage_location_id").html(""); // clear before appending new list
                   // $("#storage_location_id").append($('<option></option>').val("").html("---Select---"));
                    $.each(id, function (i, cycle) {
                        if(i==0)
                        {
                            $("#storage_location_id").append(
                      $('<option></option>').val(cycle.storage_location_id).html(cycle.storage_location_name));
                        }

                    });
                }
            });
        }

        function buyerchange(id) {
            if (id != "") {
                GetBuyerDetails(id);
              //  GetConsigneeDetails(id);
            }
        };

        function GetBuyerDetails(id) {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetBuyerDetails", "Generic")',
                data: { id: id },
                success: function (emp) {
                    $('#billing_address').val(emp.billing.BILLING_ADDRESS);
                    $('#billing_city').val(emp.billing.BILLING_CITY);
                    $('#Country_id').val(emp.billing.BILLING_COUNTRY_ID);
                    $('#state_id').val(emp.billing.BILLING_STATE_ID);
                    $('#pin_code').val(emp.billing.BILLING_PINCODE);
                    $('#email').val(emp.billing.EMAIL_ID_PRIMARY);
                },
                error: function (emp) {
                    $('#billing_address').val('');
                    $('#billing_city').val('');
                    $('#Country_id').val('');
                    $('#state_id').val('');
                    $('#pin_code').val('');
                    $('#email').val('');
                }
            });
        }



        function TabletoJeson() {
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            var str;
            var str1;
            $("#CustomerBalanceHidden").empty();
            for (i = 0; i < rowCount; i++) {
                $("#CustomerBalanceHidden").append('<input type="hidden" id="job_Work_detail_in_id' + i + '" name="job_Work_detail_in_id">');
                $("#CustomerBalanceHidden").append('<input type="hidden" id="Item_id' + i + '" name="Item_id">');
                $("#CustomerBalanceHidden").append('<input type="hidden" id="Quantity' + i + '" name="Quantity">');
                $("#CustomerBalanceHidden").append('<input type="hidden" id="rate' + i + '" name="rate">');
                $("#CustomerBalanceHidden").append('<input type="hidden" id="uom_id' + i + '" name="uom_id">');
                $("#CustomerBalanceHidden").append('<input type="hidden" id="batch' + i + '" name="batch">');
                $("#CustomerBalanceHidden").append('<input type="hidden" id="sloc_id' + i + '" name="sloc_id">');
                $("#CustomerBalanceHidden").append('<input type="hidden" id="bucket_id' + i + '" name="bucket_id">');

                $("#job_Work_detail_in_id" + i).val(t.fnGetData(i)[0]);
                $("#Item_id" + i).val(t.fnGetData(i)[2]);
                $('#Quantity' + i).val(t.fnGetData(i)[4]);
                $('#rate' + i).val(t.fnGetData(i)[5]);
                $("#uom_id" + i).val(t.fnGetData(i)[6]);
                $("#batch" + i).val(t.fnGetData(i)[8]);
                $("#sloc_id" + i).val(t.fnGetData(i)[9]);
                $("#bucket_id" + i).val(t.fnGetData(i)[11]);
            }
        }

        function getcustomer(id) {
            if (id == "") {
                id = 0;
            }
            $.ajax({
                url: '@Url.Action("GetCustomerList", "JobWork")',
                type: "GET",
                dataType: "JSON",
                data: { id: id },
                success: function (id) {
                    $("#customer_id").html(""); // clear before appending new list
                    $.each(id, function (i, cycle) {
                        $("#customer_id").append(
                            $('<option></option>').val(cycle.customer_id).html(cycle.CUSTOMER_NAME));
                    });
                }
            });
        }
    </script>
}



