@model Sciffer.Erp.Domain.ViewModel.sal_si_vm
@using Newtonsoft.Json
@{
    ViewBag.Title = "Edit";
}


@using (Html.BeginForm("Edit", "SalesInvoice", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="margin-top:10px;">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(a => a.si_id)
        @Html.HiddenFor(a => a.buyer_id)
        <div class="form-group">
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.so_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("so_id", (System.Web.Mvc.SelectList)ViewBag.solist, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.so_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">

                        <label id="status_id" hidden style="color: #d43f3a; margin-top: -6px; margin-left :200px;"><h4>C A N C E L L E D</h4></label>
                        <label id="open" hidden style="color: #5cb85c; margin-top: -6px; margin-left: 200px;"><h4>O P E N</h4></label>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.sales_category_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-4 col-sm-4 col-xs-12">
                            @Html.DropDownList("sales_category_id", (System.Web.Mvc.SelectList)ViewBag.categorylist, new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true, @onchange = "GetDocumentNumber(this.value);" })
                            @Html.ValidationMessageFor(model => model.sales_category_id, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-4 col-sm-4 col-xs-12">
                            @Html.EditorFor(model => model.si_number, new { htmlAttributes = new { @class = "form-control num removedisabled", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.si_number, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.si_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.si_date, new { htmlAttributes = new { @class = "form-control validinput removedisabled", @onchange = "ChangeDate()", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.si_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.buyer_id, "Bill to party *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("buyer_id", (System.Web.Mvc.SelectList)ViewBag.customerlist, "", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true })
                            @Html.ValidationMessageFor(model => model.buyer_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.consignee_id, "Ship to Party *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("consignee_id", (System.Web.Mvc.SelectList)ViewBag.customerlist, "", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true })
                            @Html.ValidationMessageFor(model => model.consignee_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.sal_net_value, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-5 col-sm-5 col-xs-12">
                            @Html.EditorFor(model => model.sal_net_value, new { htmlAttributes = new { @class = "form-control right removedisabled validinput", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.sal_net_value, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3 col-sm-3 col-xs-12">
                            @Html.DropDownList("net_value_currency_id", (System.Web.Mvc.SelectList)ViewBag.Currencylist, new { @class = "form-control validinput removedisabled", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.net_value_currency_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.sal_gross_value, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-5 col-sm-5 col-xs-12">
                            @Html.EditorFor(model => model.sal_gross_value, new { htmlAttributes = new { @class = "form-control right removedisabled", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.sal_gross_value, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3 col-sm-3 col-xs-12">
                            @Html.DropDownList("gross_value_currency_id", (System.Web.Mvc.SelectList)ViewBag.Currencylist, new { @class = "form-control removedisabled", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.gross_value_currency_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-body" role="tabpanel" data-example-id="togglable-tabs">
            <ul id="myTab" class="nav nav-tabs bar_tabs" role="tablist">
                <li class="active"><a data-toggle="tab" href="#sectionA">Sales</a></li>
                <li><a data-toggle="tab" href="#sectionB">Line Item</a></li>
                <li><a data-toggle="tab" href="#challan">Challan/Batch</a></li>
                <li><a data-toggle="tab" href="#tag">Tag</a></li>
                <li><a data-toggle="tab" href="#sectionF">Transport Details</a></li>
                <li><a data-toggle="tab" href="#sectionC">Customer</a></li>
                <li><a data-toggle="tab" href="#sectionD">Accounting</a></li>
                <li><a data-toggle="tab" href="#sectionE">Information</a></li>
            </ul>
            <div class="tab-content">
                <div id="sectionA" class="tab-pane fade in active" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.business_unit_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("business_unit_id", (System.Web.Mvc.SelectList)ViewBag.businesslist, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true })
                                    @Html.ValidationMessageFor(model => model.business_unit_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.plant_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("plant_id", (System.Web.Mvc.SelectList)ViewBag.plantlist, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true, @onchange = "GetStorageLocation(this.value)" })
                                    @Html.ValidationMessageFor(model => model.plant_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.freight_terms_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("freight_terms_id", (System.Web.Mvc.SelectList)ViewBag.freightlist, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.freight_terms_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.territory_id, "Territory", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("territory_id", (System.Web.Mvc.SelectList)ViewBag.territorylist, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.territory_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.sales_rm_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("sales_rm_id", (System.Web.Mvc.SelectList)ViewBag.salesexlist, "---Select---", new { @class = "form-control   removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.sales_rm_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.customer_po_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.customer_po_date, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.customer_po_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.customer_po_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.customer_po_no, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.customer_po_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.removal_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.removal_date, new { htmlAttributes = new { @class = "form-control validinput removedisabled" } })
                                    @Html.ValidationMessageFor(model => model.removal_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.removal_time, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.removal_time, new { htmlAttributes = new { @class = "form-control validinput removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.removal_time, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.form_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("form_id", (System.Web.Mvc.SelectList)ViewBag.formlist, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.form_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.out_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.out_date, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.out_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.out_time, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.out_time, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.out_time, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sectionB" class="tab-pane fade" style="margin-top:10px;">

                    <div class="row">
                        <div class="table-responsive">
                            <table class="table table-responsive table-bordered table-striped" id="ContactGrid">
                                <thead>
                                    <tr>
                                        <th hidden><label>ID</label></th>
                                        <th><label>SR No.</label></th>
                                        <th><label>Item Code</label></th>
                                        <th><label>Item</label></th>
                                        <th><label>SAC/HSN Code</label></th>
                                        <th><label>Quantity</label></th>
                                        <th hidden><label>UOM ID</label></th>
                                        <th><label>UOM</label></th>
                                        <th hidden><label>Unit Price</label></th>
                                        <th hidden><label>Discount</label></th>
                                        <th><label>Eff. Price</label></th>
                                        <th><label>Sales Value</label></th>
                                        <th><label>Taxable Rate</label></th>
                                        <th><label>Taxable Value</label></th>
                                        <th hidden><label>Tax ID</label></th>
                                        <th><label>Tax Code</label></th>
                                        <th hidden><label>storage location id</label></th>
                                        <th hidden><label>Storage Location</label></th>
                                        <th hidden><label>SO Detail ID</label></th>
                                        <th hidden><label>Balance Quantity</label></th>
                                        <th hidden><label>Drawing No</label></th>
                                        <th hidden><label>Material Cost</label></th>
                                        <th><label>Action</label></th>
                                    </tr>
                                </thead>

                            </table>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">

                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="table-responsive">
                                <table class="table table-responsive table-bordered table-striped" id="TaxGrid"></table>
                            </div>
                        </div>
                    </div>
                </div>

                <div id="challan" class="tab-pane fade" style="margin-top:10px;">

                    <div class="row">
                        <div class="table-responsive" style="max-height: calc(100vh - 250px); overflow-y: auto;">
                            <table class="table table-responsive table-bordered table-striped" id="ChallanGrid">
                                <thead>
                                </thead>
                            </table>
                        </div>
                    </div>

                    <div class="row">
                        <div class="table-responsive" style="max-height: calc(100vh - 250px); overflow-y: auto;">
                            <table class="table table-responsive table-bordered table-striped" id="BatchGrid">
                                <thead>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
                <div id="tag" class="tab-pane fade" style="margin-top:10px;">

                    <div class="row">
                        <div class="table-responsive" style="max-height: calc(100vh - 250px); overflow-y: auto;">
                            <table class="table table-responsive table-bordered table-striped" id="TagGrid">
                                <thead>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
                <div id="sectionC" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_address, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.billing_address, new { htmlAttributes = new { @class = "form-control ddlform  removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.billing_address, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.shipping_address, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.shipping_address, new { htmlAttributes = new { @class = "form-control ddlform  removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.shipping_address, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_city, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.billing_city, new { htmlAttributes = new { @class = "form-control ddlform  removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.billing_city, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.shipping_city, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.shipping_city, new { htmlAttributes = new { @class = "form-control ddlform  removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.shipping_city, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_pincode, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.billing_pincode, new { htmlAttributes = new { @class = "form-control ddlform  removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.billing_pincode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.shipping_pincode, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.shipping_pincode, new { htmlAttributes = new { @class = "form-control ddlform  removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.shipping_pincode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_country_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("billing_country_id", (System.Web.Mvc.SelectList)ViewBag.corlist, "---Select---", new { @class = "form-control  removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.billing_country_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.shipping_country_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("shipping_country_id", (System.Web.Mvc.SelectList)ViewBag.corlist, "---Select---", new { @class = "form-control  removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.shipping_country_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_state_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("billing_state_id", (System.Web.Mvc.SelectList)ViewBag.billingstatelist, "---Select---", new { @class = "form-control  removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.billing_state_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.shipping_state_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("shipping_state_id", (System.Web.Mvc.SelectList)ViewBag.corrstatelist, "---Select---", new { @class = "form-control  removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.shipping_state_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_email_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.billing_email_id, new { htmlAttributes = new { @class = "form-control  removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.billing_email_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.shipping_email_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.shipping_email_id, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.shipping_email_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.pan_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.pan_no, new { htmlAttributes = new { @class = "form-control validinput removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.pan_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.shipping_pan_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.shipping_pan_no, new { htmlAttributes = new { @class = "form-control validinput removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.shipping_pan_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.gst_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.gst_no, new { htmlAttributes = new { @class = "form-control validinput removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.gst_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.shipping_gst_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.shipping_gst_no, new { htmlAttributes = new { @class = "form-control validinput removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.shipping_gst_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sectionF" class="tab-pane fade">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.transporter, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.transporter, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.transporter, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.vehicle_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.vehicle_no, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.vehicle_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.lr_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.lr_no, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.lr_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.lr_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.lr_date, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.lr_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.mode_of_transport, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("mode_of_transport", (System.Web.Mvc.SelectList)ViewBag.TransportModelist, new { @class = "form-control removedisabled" })
                                    @Html.ValidationMessageFor(model => model.mode_of_transport, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.asn_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.asn_no, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.asn_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.e_way_bill, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.e_way_bill, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.e_way_bill, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.e_way_bill_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.e_way_bill_date, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.e_way_bill_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sectionD" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.payment_cycle_type_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("payment_cycle_type_id", (System.Web.Mvc.SelectList)ViewBag.paymentcycletype, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled", @onchange = "FillPaymentCycle()" })
                                    @Html.ValidationMessageFor(model => model.payment_cycle_type_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.payment_cycle_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("payment_cycle_id", (System.Web.Mvc.SelectList)ViewBag.paymentcyclelist, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.payment_cycle_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">

                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.payment_terms_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("payment_terms_id", (System.Web.Mvc.SelectList)ViewBag.paymenttermslist, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.payment_terms_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.credit_avail_after_invoice, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.credit_avail_after_invoice, new { htmlAttributes = new { @class = "form-control ddlform removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.credit_avail_after_invoice, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.tds_code_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("tds_code_id", (System.Web.Mvc.SelectList)ViewBag.tdslist, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.tds_code_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.gst_tds_code_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("gst_tds_code_id", (System.Web.Mvc.SelectList)ViewBag.GST_TDS_Code, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.gst_tds_code_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.available_credit_limit, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.available_credit_limit, new { htmlAttributes = new { @class = "form-control ddlform removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.available_credit_limit, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="col-sm-4">General Ledger</div>
                            <div class="col-md-8 col-sm-8 col-xs-12">
                                <button type="button" id="toggle" title="General Ledger" class="btn btn-primary" onclick="CreditDebit();"><span class="glyphicon glyphicon-plus"></span></button>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sectionE" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.internal_remarks, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.internal_remarks, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.internal_remarks, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.remarks, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.remarks, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.remarks, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <input type="hidden" id="productdetail" name="productdetail" />
                        <input type="hidden" id="formdetail" name="formdetail" />
                        <input type="hidden" id="deleteids" name="deleteids" />
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.attachment, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    <input type="file" class="form-control" id="FileUpload" name="FileUpload" accept="application/pdf, image/*" />
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
        @*<div class="row">
                <div class="col-lg12 col-sm-12">
                    <div class="form-group">
                        <div class="col-md-12 col-sm-12 col-xs-12">

                        </div>
                    </div>
                </div>
            </div>*@

        <div class="row">
            <div class="col-lg12 col-sm-12">
                <div class="form-group">
                    <div class="col-md-5 col-sm-5 col-xs-5">
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
                    </div>
                    <div class="col-md-2 col-sm-2 col-xs-2">
                        <input type="button" value="Cancel Sales Invoice" class="btn btn-danger" data-toggle="modal" data-target="#CancelModal" style="float:right" id="cancel_si" />
                    </div>
                    <div class="col-md-5 col-sm-5 col-xs-5">
                        <input type="submit" value="Update" data-controller="SalesInvoice" id="create" class="btn btn-success" style="float:right" />
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal -->
        <div class="modal fade" id="CancelModal" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h3 class="modal-title" style="text-align:center"><span style="color:red">Are you sure you want to cancel this Sales Invoice? You will not be able to reverse this action. </span></h3>
                    </div>
                    <div class="modal-body">
                        <br />
                        <div class="row">
                            <div class="form-group">
                                <label class="control-label col-md-3" for="first-name">
                                    Cancellation Reason <span class="required">*</span>
                                </label>
                                <div class="col-md-7">
                                    @Html.DropDownList("reason_id", (System.Web.Mvc.SelectList)ViewBag.cancellationreasonlist, "---Select---", new { @class = "form-control col-md-7 col-xs-12" })
                                    @*@Html.EditorFor(model => model.cancellation_remarks, new { htmlAttributes = new { @class = "form-control" } })*@
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="form-group">
                                <label class="control-label col-md-3" for="first-name">
                                    Remarks
                                </label>
                                <div class="col-md-7">
                                    <textarea id="cancel_remarks" class="form-control"></textarea>
                                </div>
                            </div>
                        </div>
                        <br />
                    </div>
                    <br />
                    <div class="modal-footer">
                        <input type="hidden" id="srno" />
                        <button type="button" class="btn btn-danger" data-dismiss="modal" onclick="canclearmodel();">No</button>
                        <button type="button" class="btn btn-success" id="Cancelled" name="Cancelled" onclick="Cancel_Sales();">Yes</button>
                    </div>
                </div>

            </div>
        </div>

        <!-- Modal -->
        <div class="modal fade" id="myModal" role="dialog">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Items Detail</h4>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="form-group">
                                <label class="control-label col-md-3">
                                    Item <span class="required">*</span>
                                </label>
                                <div class="col-md-7">
                                    @Html.DropDownList("ITEM_ID", (System.Web.Mvc.SelectList)ViewBag.itemlist, "", new { @class = "form-control", @disabled = "disabled" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group">
                                <label class="control-label col-md-3" for="first-name">
                                    SAC/HSN Code <span class="required">*</span>
                                </label>
                                <div class="col-md-7">
                                    @Html.DropDownList("sac_hsn_id", Enumerable.Empty<SelectListItem>(), "---Select---", new { @class = "form-control col-md-7 col-xs-12", @disabled = "disabled" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group">
                                <label class="control-label col-md-3" for="first-name">
                                    Storage Location <span class="required">*</span>
                                </label>
                                <div class="col-md-7">
                                    @Html.DropDownList("storage_location_id", Enumerable.Empty<SelectListItem>(), "---Select---", new { @class = "form-control col-md-7 col-xs-12", @disabled = "disabled" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group">
                                <label class="control-label col-md-3" for="first-name">
                                    Quantity <span class="required">*</span>
                                </label>
                                <div class="col-md-4">
                                    <input type="number" class="form-control col-md-7 col-xs-12" id="quantity" onchange="calculation()" disabled>
                                </div>
                                <div class="col-md-3">
                                    @Html.DropDownList("UOM", (System.Web.Mvc.SelectList)ViewBag.unitlist, "---Select---", new { @class = "form-control col-md-7 col-xs-12", @disabled = "disabled" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group">
                                <label class="control-label col-md-3" for="first-name">
                                    Unit Price <span class="required">*</span>
                                </label>
                                <div class="col-md-7">
                                    <input type="number" class="form-control col-md-7 col-xs-12" id="unitprice" readonly onchange="calculation()">
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group">
                                <label class="control-label col-md-3" for="first-name">
                                    Discount (%) <span class="required"></span>
                                </label>
                                <div class="col-md-7">
                                    <input type="number" class="form-control col-md-7 col-xs-12" id="discount" readonly onchange="calculation()">
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group">
                                <label class="control-label col-md-3" for="first-name">
                                    Effective Unit Price <span class="required">*</span>
                                </label>
                                <div class="col-md-7">
                                    <input type="number" class="form-control col-md-7 col-xs-12" id="effectiveprice" readonly="readonly">
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group">
                                <label class="control-label col-md-3" for="first-name">
                                    Sales Value <span class="required">*</span>
                                </label>
                                <div class="col-md-7">
                                    <input type="number" class="form-control col-md-7 col-xs-12" id="salesvalue" readonly="readonly">
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group">
                                <label class="control-label col-md-3" for="first-name">
                                    Taxable Rate <span class="required">*</span>
                                </label>
                                <div class="col-md-7">
                                    <input type="number" class="form-control col-md-7 col-xs-12" id="assessablerate" readonly onchange="asscalculation()">
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group">
                                <label class="control-label col-md-3" for="first-name">
                                    Taxable Value <span class="required">*</span>
                                </label>
                                <div class="col-md-7">
                                    <input type="number" class="form-control col-md-7 col-xs-12" id="assessablevalue" readonly="readonly">
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group">
                                <label class="control-label col-md-3" for="first-name">
                                    Tax Code <span class="required">*</span>
                                </label>
                                <div class="col-md-7">
                                    @Html.DropDownList("taxcode", (System.Web.Mvc.SelectList)ViewBag.taxlist, "", new { @class = "form-control", @disabled = "disabled" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group">
                                <label class="control-label col-md-3" for="first-name">
                                    Drawing No <span class="required"></span>
                                </label>
                                <div class="col-md-7">
                                    <input type="text" class="form-control col-md-7 col-xs-12" id="drawing_no" disabled>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group">
                                <label class="control-label col-md-3" for="first-name">
                                    Material Cost Per Unit <span class="required"></span>
                                </label>
                                <div class="col-md-7">
                                    <input type="number" class="form-control col-md-7 col-xs-12" id="material_cost_per_unit" disabled>
                                </div>
                            </div>
                        </div>

                    </div>
                    <br />
                    <div class="modal-footer">
                        <input type="hidden" id="srno" />
                        <input type="hidden" id="sodetailid" />
                        <input type="hidden" id="si_detail_id" />
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
}
<div class="modal fade" id="myModalTDS" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">General Ledger Detail</h4>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <table class="table table-responsive table-bordered table-striped" id="CreditDebitGrid">
                        <thead>
                            <tr>
                                <th><label>Gl Name</label></th>
                                <th><label>Debit</label></th>
                                <th><label>Credit</label></th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/Scripts/requirevalidation.js"></script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            var userId = @Html.Raw(Json.Encode(Session["User_Id"].ToString()));
            $("#cancel_si").hide();            

            $("#customer_id").select2({
                placeholder: "Select Customer",
                allowClear: true
            });
            $("#soquotation_id").select2({
                placeholder: "Select Quotation number",
                allowClear: true
            });
            var t = $('#ContactGrid').DataTable();
            var batch = $('#BatchGrid').DataTable();
            var challan = $('#ChallanGrid').DataTable();
            var tag = $('#TagGrid').DataTable();
            $("#status_id").hide();
            $("#open").hide();
            var si_detail = @Html.Raw(JsonConvert.SerializeObject(this.Model));

            if (userId == '1') { //on live check with '1273'
                if (si_detail.cancellation_reason_id != null) {
                    $("#status_id").show();
                    $("#cancel_si").hide();

                    $("#create").hide();
                } else {
                    $("#open").show();
                    $("#cancel_si").show();
                }
            }
            if (si_detail.cancellation_reason_id == null) {
                $("#open").show();
            }

            $("#removal_time").val(si_detail.removal_time.split('T')[1]);
            $("#sal_net_value").val(parseFloat(si_detail.sal_net_value).toFixed(2));
            $("#sal_gross_value").val(parseFloat(si_detail.sal_gross_value).toFixed(2));
            var i=1;
            var str="";
            var str1="";
            var tot = 0;
            var str2="";
            var str3="";
            //console.log(si_detail);

            $.each(si_detail.SAL_SI_DETAIL, function(key, value) {
                $.each(value.sal_si_detail_batch, function(key, value1) {
                    batch.fnAddData(value1);
                    console.log(value1);
                });
                $.each(value.sal_si_detail_batch_tag, function(key, value2) {
                    tag.fnAddData(value2);
                });
                $.each(value.sal_si_detail_challan, function(key, value3) {
                    challan.fnAddData(value3);
                    console.log(value3);

                });
            });

            $.each(si_detail.sal_si_detail_report_vm, function(key, value) {

                t.fnAddData([value.si_detail_id, i,value.item_id, value.item_name,value.sac_hsn_code, parseFloat(value.quantity).toFixed(2),value.uom_id, value.uom_name, parseFloat(value.unit_price).toFixed(2), parseFloat(value.discount).toFixed(2), parseFloat(value.effective_unit_price).toFixed(2), parseFloat(value.sales_value).toFixed(2), parseFloat(value.assessable_rate).toFixed(2), parseFloat(value.assessable_value).toFixed(2), value.tax_id,value.tax_name,value.storage_location_id,value.storage_location_name,0,value.quantity,value.drawing_no,parseFloat(value.material_cost_per_unit).toFixed(2),''
                ]);

                str2 = value.item_id + "~";
                str2 = str2 + value.tax_id + "~";
                str2 = str2 + value.assessable_value + "~";
                str2 = str2 + value.sales_value+ "~";
                str2 = str2 + $("#plant_id").val() + "~";
                str2 = str2 +  value.quantity;
                str1 = value.tax_id + "~";
                str1 = str1 + value.assessable_value + "~";
                str1 = str1 + value.sales_value + "~";
                str1 = str1 + si_detail.round_off;
                if (str == "") {
                    str = str1 + ",";
                }
                else {
                    str = str + str1 + ",";
                }
                if(str3=="")
                {
                    str3 = str2 + ",";
                }
                else
                {
                    str3 = str3 + str2 + ",";
                }
                tot = tot + value.sales_value;
                i=i+1;
            });
            $.each(si_detail.SAL_SI_FORM, function(key, value) {
                $("#form_id").val(value.form_id);
            });
            var tds_code_id = 0;
            if ($("#tds_code_id").val() != "")
            {
                tds_code_id = $("#tds_code_id").val();
            }
            GetTaxDetail(str.slice(0, -1), tot, $("#si_date").val(), tds_code_id);
            GetCreditDebit($("#buyer_id").val(), $("#sal_gross_value").val(), tot, str3.slice(0, -1), tds_code_id, $("#si_date").val(),si_detail.round_off)
        });


        GetStorageLocation($("#plant_id").val());
        $('#toggle').tooltip();

        $('#ChallanGrid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            "columns": [
                  { name :"rowIndex", "data": "rowIndex", sWidth: "5%","title": "Sr No.", "defaultContent": "", "bSortable": false },
                  { name :"si_detail_challan_id","data": "si_detail_challan_id", bVisible: false,"title": "ID","bSortable": false },
                  { name :"si_detail_id","data": "si_detail_id", "title": "SI detail ID","bSortable": false, bVisible: false },
                  { name :"job_work_detail_in_id","data": "job_work_detail_in_id", bVisible: false, "title": "Jobwork ID","bSortable": false},
                  { name :"document_no","data": "in_jobwork_in_detail.batch", bVisible: true, "title": "Challan No","bSortable": false},
                  { name :"quantity","data": "quantity", bVisible: true,sClass:"right", "defaultContent": "","title": "Quantity", "bSortable": false },
                  { name :"bal_quantity","data": "bal_quantity",sClass:"right", bVisible: true, "defaultContent": "","title": "Balance Quantity", "bSortable": false },
            ],
            "fnRowCallback" : function(nRow, aData, iDisplayIndex){
                $("td:first", nRow).html(iDisplayIndex +1);
                return nRow;
            },
        });

        $('#BatchGrid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            "columns": [
                  { name :"rowIndex", "data": "rowIndex", sWidth: "5%","title": "Sr No.", "defaultContent": "", "bSortable": false },
                  { name :"si_detail_batch_id","data": "si_detail_batch_id",bVisible: false, "title": "ID","bSortable": false },
                  { name :"si_detail_id","data": "si_detail_id", "title": "SI detail ID","bSortable": false, bVisible: false },
                  { name :"item_batch_detail_id","data": "item_batch_detail_id", bVisible: false, "title": "Batch Detail ID","bSortable": false},
                  { name :"batch_number","data": "inv_item_batch.batch_number", bVisible: true, "title": "Batch","bSortable": false},
                  { name :"quantity","data": "quantity", bVisible: true, "defaultContent": "","title": "Quantity",sClass:"right", "bSortable": false },
                  { name :"balance_quantity","data": "balance_quantity", bVisible: true, "defaultContent": "", sClass:"right","title": "Balance Quantity","bSortable": false, "defaultContent": ""},

            ],
            "fnRowCallback" : function(nRow, aData, iDisplayIndex){
                $("td:first", nRow).html(iDisplayIndex +1);
                return nRow;
            },
        });

        $('#TagGrid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            "columns": [
                  { name :"rowIndex", "data": "rowIndex", sWidth: "5%","title": "Sr No.", "defaultContent": "", "bSortable": false },
                  { name :"si_detail_batch_tag_id","data": "si_detail_batch_tag_id", bVisible: false,"title": "ID","bSortable": false },
                  { name :"si_detail_id","data": "si_detail_id", "title": "SI detail ID","bSortable": false, bVisible: false },
                  { name :"item_tag_id","data": "item_tag_id", bVisible: false, "title": "Tag ID","bSortable": false},
                  { name :"tag_no","data": "inv_item_batch_detail_tag.tag_no", bVisible: true, "title": "Tag","bSortable": false},
                  { name :"quantity","data": "quantity", bVisible: true, "defaultContent": "","title": "Quantity", sClass:"right","bSortable": false },
            ],
            "fnRowCallback" : function(nRow, aData, iDisplayIndex){
                $("td:first", nRow).html(iDisplayIndex +1);
                return nRow;
            },
        });

        $('#ContactGrid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            aoColumns: [
                     { sname: "a", bVisible: false },
                     { sname: "b", sWidth: "7%" },
                     { sname: "c", bVisible: false},
                     { sname: "d" },
                     { sname: "e" },
                     { sname: "f", sWidth: "8%","sClass": "right" },
                     { sname: "g", bVisible: false },
                     { sname: "h", sWidth: "8%" },
                     { sname: "i", sWidth: "8%","sClass": "right", bVisible: false },
                     { sname: "j","sClass": "right" , bVisible: false},
                     { sname: "k", sWidth: "8%","sClass": "right" },
                     { sname: "l", sWidth: "8%","sClass": "right" },
                     { sname: "m", bVisible: true,"sClass": "right" },
                     { sname: "n", bVisible: true,"sClass": "right" },
                     { sname: "o", bVisible: false },
                     { sname: "p", bVisible: true },
                     { sname: "q", bVisible: false },
                     { sname: "r", bVisible: false },
                     { sname: "s", bVisible: false },
                     { sname: "t", bVisible: false },
                     { sname: "u", bVisible: false , sWidth: "8%"},
                     { sname: "v", bVisible: false ,"sClass": "right", sWidth: "8%"},
                     {
                         sname: "w", sWidth: "8%",
                         bSortable: false,
                         mRender: function (data, type, full) {
                             return '<img class="edit" src="../images/writing_file.png" height="20px" width="25px" alt="Edit" />';
                         }
                     }]

        });

        $('#ContactGrid').on('click', '.edit', function () {
            var t = $('#ContactGrid').DataTable();
            var id = $(this).parent('td').parent('tr').index();
            $('#myModal').modal('show');
            $("#srno").val(t.fnGetData(id)[1]);
            $("#ITEM_ID").val(t.fnGetData(id)[2]);
            $('#quantity').val(t.fnGetData(id)[5]);
            $('#UOM').val(t.fnGetData(id)[6]);
            $('#unitprice').val(t.fnGetData(id)[8]);
            $('#discount').val(t.fnGetData(id)[9]);
            $('#effectiveprice').val(t.fnGetData(id)[10]);
            $('#salesvalue').val(t.fnGetData(id)[11]);
            $('#assessablerate').val(t.fnGetData(id)[12]);
            $('#assessablevalue').val(t.fnGetData(id)[13]);
            $('#taxcode').val(t.fnGetData(id)[14]);
            $('#storage_location_id').val(t.fnGetData(id)[16]);
            $('#sodetailid').val(t.fnGetData(id)[18]);
            $('#si_detail_id').val(t.fnGetData(id)[0]);
            $('#drawing_no').val(t.fnGetData(id)[20]);
            $('#material_cost_per_unit').val(t.fnGetData(id)[21]);
            $("#sac_hsn_id").html("");
            $("#sac_hsn_id").append($('<option></option>').val(0).html(t.fnGetData(id)[4]));
        });



        function GetStorageLocation(id) {
            if (id == "") {
                id = 0;
            }
            $.ajax({
                url: '@Url.Action("GetStorageLocation", "Generic")',
                type: "GET",
                dataType: "JSON",
                data: { id: id },
                success: function (id) {
                    $("#storage_location_id").html(""); // clear before appending new list
                    $("#storage_location_id").append($('<option></option>').val("").html("---Select---"));
                    $.each(id, function (i, cycle) {
                        $("#storage_location_id").append(
                            $('<option></option>').val(cycle.storage_location_id).html(cycle.storage_location_name));
                    });
                }
            });
        }
        function ToJavaScriptDate(value) {
            if (value != undefined) {
                var pattern = /Date\(([^)]+)\)/;
                var results = pattern.exec(value);
                var dt = new Date(parseFloat(results[1]));
                return (dt.getFullYear()) + "-" + (dt.getMonth() + 1) + "-" + dt.getDate();
            }
            //return Date.parse(value);
        }
        // Handle click on "Select all" control
        function formatDate(date) {
            var d = new Date(date),
                month = '' + (d.getMonth() + 1),
                day = '' + d.getDate(),
                year = d.getFullYear();

            if (month.length < 2) month = '0' + month;
            if (day.length < 2) day = '0' + day;

            return [year, month, day].join('-');
        }
        function CreditDebit()
        {
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            var str2="";
            var str3="";
            var tot=0;
            var tds_code_id = 0;
            var round_off=$("#round_off").val();
            if(round_off=="")
            {
                round_off=0;
            }
            if ($("#tds_code_id").val() != "") {
                tds_code_id = $("#tds_code_id").val();
            }
            for (j = 0; j < rowCount; j++) {
                str2 = t.fnGetData(j)[2] + "~";
                str2 = str2 + t.fnGetData(j)[14] + "~";
                str2 = str2 + t.fnGetData(j)[13] + "~";
                str2 = str2 + t.fnGetData(j)[11]+ "~";
                str2 = str2 + $("#plant_id").val() + "~";
                str2 = str2 + t.fnGetData(j)[5];
                if (j == 0) {
                    str3 = str2 + ",";
                }
                else {
                    str3 = str3 + str2 + ",";
                }
                tot = tot + parseFloat(t.fnGetData(j)[11]);
            }
            if(str3!="")
            {
                GetCreditDebit($("#buyer_id").val(), $("#sal_gross_value").val(), tot, str3.slice(0, -1), tds_code_id, $("#si_date").val(),round_off)
            }
            $('#myModalTDS').modal('show');
        }
        function GetCreditDebit(customer_id,total_value,basic_value,item_sales_gl,tds_code_id,posting_date,round_off) {
            var c = $('#CreditDebitGrid').DataTable();
            $.ajax({
                url: '@Url.Action("GetCreditDebit", "Generic")',
                type: "GET",
                dataType: "JSON",
                async:false,
                data: {entity: 'calculate', customer_id: customer_id, total_value: total_value, basic_value: basic_value, item_sales_gl: item_sales_gl, tds_code_id: tds_code_id, posting_date: posting_date,round_off:round_off },
                success: function (value) {
                    c.fnClearTable();
                    $.each(value, function (i, cycle) {
                        c.fnAddData([cycle.gl_ledger_name, cycle.debit==null?"":parseFloat(cycle.debit).toFixed(2), cycle.credit==null?"":parseFloat(cycle.credit).toFixed(2)]);
                    });
                }
            });
        }
        $('#TaxGrid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            aoColumns: [
                     { sname: "a" },
                     { sname: "b","sClass": "right" },
            ]

        });
        function GetTaxDetail(taxdetail, amount, dt,tds_code_id) {
            var tds_amount = 0;
            var t=$('#TaxGrid').DataTable();
            t.fnClearTable();
            $.ajax({
                url: '@Url.Action("GetTaxCalculation", "Generic")',
                type: "GET",
                dataType: "JSON",
                data: {entity:"calculatetaxforsalesedit", st: taxdetail, amt: amount, dt: dt,tds_code_id:tds_code_id },
                success: function (Payment_Cycle) {
                    // $('#TaxGrid tbody').html('');
                    $.each(Payment_Cycle, function (i, cycle) {
                        if(cycle.tax_name.includes("Round"))
                        {
                            t.fnAddData([cycle.tax_name,'<input type="number" id="round_off" name="round_off" onchange="CalculateNetTotal();" class="form-control right" disabled />']);
                            $("#round_off").val(parseFloat(cycle.tax_value).toFixed(2));
                        }
                        else
                        {
                            t.fnAddData([cycle.tax_name,parseFloat(cycle.tax_value).toFixed(2)]);
                        }
                    });
                }
            });
        }
        $('#CreditDebitGrid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            aoColumns: [
                     { sname: "a"},
                     { sname: "b","sClass": "right"},
                     { sname: "c","sClass": "right"}
            ]

        });

        function Cancel_Sales()
        {
            if($("#reason_id").val()=="")
            {
                swal("Error!", "Please select the reason for cancellation", "error")
                return false;
            }
            if($("#reason_id").val()==6)
            {
                if($("#cancel_remarks").val()=="")
                {
                    swal("Error!", "Please enter the Remarks for cancellation", "error")
                    return false;

                }

            }
            else{
                $.ajax({
                    url: '@Url.Action("DeleteConfirmed", "SalesInvoice")',
                    type: "POST",
                    dataType: "JSON",
                    async:false,
                    data: { id: $("#si_id").val(),cancellation_remarks: $("#cancel_remarks").val(),reason_id:$("#reason_id").val()},
                    success: function (id) {
                        if(id=="Cancelled")
                        {

                            swal({
                                title: "Cancelled",
                                text: "Your sales invoice " + $("#so_id :selected").text() + " has been cancelled.",
                                type: "success",
                                showCancelButton: false,
                                closeOnConfirm: false,
                                showLoaderOnConfirm: false
                            }, function () {
                                location.href = '@Url.Action("Index", "SalesInvoice")'
                            });
                        }
                        else
                        {
                            swal("Error", id, "error");
                        }

                    }
                });
            }
        }
    </script>
}

