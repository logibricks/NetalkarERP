@model Sciffer.Erp.Domain.ViewModel.GOODS_RECEIPT_VM
@using Newtonsoft.Json
@{ ViewBag.Title = "Edit"; }

@using (Html.BeginForm("Edit", "GoodsReceipt", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
@Html.AntiForgeryToken()
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.HiddenFor(a => a.goods_receipt_id)
                        <div class="row">
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.category_id, "Category *", htmlAttributes: new { Class = "control-label col-md-4 " })
                                    <div class="col-md-5 col-sm-5 col-xs-12">
                                        @Html.DropDownList("category_id", (System.Web.Mvc.SelectList)ViewBag.categorylist, htmlAttributes: new { Class = "form-control", @onchange = "GetDocumentNumber(this.value)", @disabled = "disabled" })
                                        @Html.ValidationMessageFor(model => model.category_id, "", new { Class = "text-danger" })
                                    </div>
                                    <div class="col-md-3 col-sm-3 col-xs-12">
                                        @Html.LabelFor(model => model.goods_receipt_number, new { @class = "control-label col-md-4 hidden" })
                                        @Html.EditorFor(model => model.goods_receipt_number, new { htmlAttributes = new { @class = "form-control num validinput removedisabled", @disabled = "disabled" } })
                                        @Html.ValidationMessageFor(model => model.goods_receipt_number, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6 col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.plant_id, "Plant *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                        <div class="col-md-8 col-sm-8 col-xs-12">
                                            @Html.DropDownList("plant_id", (System.Web.Mvc.SelectList)ViewBag.plantlist, "--Select--", htmlAttributes: new { @class = "form-control validinput", @onchange = "GetStorageLocation(this.value);", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model.plant_id, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.posting_date, "Posting Date *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.EditorFor(model => model.posting_date, new { htmlAttributes = new { @class = "form-control validinput", @disabled = "disabled" } })
                                        @Html.ValidationMessageFor(model => model.posting_date, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6 col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.document_date, "Document Date *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                        <div class="col-md-8 col-sm-8 col-xs-12">
                                            @Html.EditorFor(model => model.document_date, new { htmlAttributes = new { @class = "form-control validinput", @disabled = "disabled" } })
                                            @Html.ValidationMessageFor(model => model.document_date, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ref1, "Header Remarks", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.EditorFor(model => model.ref1, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                        @Html.ValidationMessageFor(model => model.ref1, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.status_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.DropDownList("status_id", (System.Web.Mvc.SelectList)ViewBag.status_list, new { @class = "form-control validinput removedisabled parent ", @disabled = "disabled", @required = true })
                                        @Html.ValidationMessageFor(model => model.status_id, "", new { @class = "text-danger" })
                                        <label id="status" hidden style="color:#d43f3a;margin-top:-6px"><h4>C A N C E L L E D</h4></label>
                                        <label id="closed" hidden style="color:#5cb85c;margin-top:-6px"><h4>C L O S E D</h4></label>
                                        <label id="open" hidden style="color:#5cb85c;margin-top:-6px"><h4>O P E N</h4></label>
                                        @*<label id="Partially_Open" hidden style="color:orange;margin-top:-6px"><h4>P A R T I A L L Y   &nbsp O P E N</h4></label>*@
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="panel panel-body" role="tabpanel" data-example-id="togglable-tabs">
                        <ul id="myTab" class="nav nav-tabs bar_tabs" role="tablist">
                            <li class="active"><a data-toggle="tab" href="#sectionA">Item Details</a></li>
                            <li><a data-toggle="tab" href="#sectionB">Information</a></li>
                        </ul>
                        <div class="tab-content">

                            <div id="sectionA" class="tab-pane fade in active">
                                <div class="row">
                                    <div class="table-responsive">
                                        <table class="table table-responsive table-bordered table-striped" id="ContactGrid">
                                        </table>
                                    </div>
                                </div>
                            </div>
                            <div id="sectionB" class="tab-pane fade ">
                                <div class="row">
                                    <div class="col-lg-6 col-sm-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.remarks, "Additional information", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                            <div class="col-md-8 col-sm-8 col-xs-12">
                                                @Html.EditorFor(model => model.remarks, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                                @Html.ValidationMessageFor(model => model.remarks, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-sm-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.attachment, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                            <div class="col-md-8 col-sm-8 col-xs-12">
                                                <input type="file" class="form-control" id="FileUpload" name="FileUpload" accept="application/pdf, image/*" , disabled="disabled" />
                                                @* @Html.EditorFor(model => model.Attachment, new { htmlAttributes = new { @class = "form-control" } })*@
                                                @Html.ValidationMessageFor(model => model.attachment, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">

                                    <div class="col-lg-6 col-sm-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.cancellation_remarks, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                            <div class="col-md-8 col-sm-8 col-xs-12">
                                                @Html.EditorFor(model => model.cancellation_remarks, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                                @Html.ValidationMessageFor(model => model.cancellation_remarks, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-lg-6 col-sm-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.cancelled_by, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                            <div class="col-md-8 col-sm-8 col-xs-12">
                                                @Html.DropDownList("cancelled_by", (System.Web.Mvc.SelectList)ViewBag.user_list, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                                @Html.ValidationMessageFor(model => model.cancelled_by, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                </div>

                                <div class="row">
                                    <div class="col-lg-6 col-sm-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.cancelled_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                            <div class="col-md-8 col-sm-8 col-xs-12">
                                                @Html.EditorFor(model => model.cancelled_date, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                                @Html.ValidationMessageFor(model => model.cancelled_date, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-sm-6">
                                        <div class="form-group">
                                            <label class="control-label col-md-4" for="first-name">
                                                Cancelled Reason Determination
                                            </label>
                                            <div class="col-md-8">
                                                @Html.DropDownList("cancellation_reason_id", (System.Web.Mvc.SelectList)ViewBag.cancellationreasonlist, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                                @*@Html.EditorFor(model => model.cancellation_remarks, new { htmlAttributes = new { @class = "form-control" } })*@
                                            </div>
                                        </div>
                                    </div>

                                </div>

                            </div>
                        </div>
                    </div>
                </div>
                                <div class="modal fade" id="myModal" role="dialog">
                                    <div class="modal-dialog">

                                        <!-- Modal content-->
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                                <h3 class="modal-title" style="text-align:center"><span style="color:red">Are you sure you want to cancel this Goods Receipt? You will not be able to reverse this action. </span></h3>
                                            </div>
                                            <div class="modal-body">
                                                <br />
                                                <div class="row">
                                                    <div class="form-group">
                                                        <label class="control-label col-md-3" for="first-name">
                                                            Cancellation Reason <span class="required">*</span>
                                                        </label>
                                                        <div class="col-md-7">
                                                            @Html.DropDownList("reason_id", (System.Web.Mvc.SelectList)ViewBag.cancellationreasonlist, "---Select---", new { @class = "form-control col-md-7 col-xs-12" })
                                                            @*@Html.EditorFor(model => model.cancellation_remarks, new { htmlAttributes = new { @class = "form-control" } })*@
                                                        </div>
                                                    </div>
                                                </div>Goods Receipt
                                                <br />
                                                <div class="row">
                                                    <div class="form-group">
                                                        <label class="control-label col-md-3" for="first-name">
                                                            Remarks
                                                        </label>
                                                        <div class="col-md-7">
                                                            <textarea id="cancel_remarks" class="form-control"></textarea>
                                                        </div>
                                                    </div>
                                                </div>
                                                <br />
                                            </div>
                                            <br />
                                            <div class="modal-footer">
                                                <input type="hidden" id="srno" />
                                                <button type="button" class="btn btn-danger" data-dismiss="modal" onclick="canclearmodel();">No</button>                                                <button type="button" class="btn btn-success" id="Cancelled" name="Cancelled" onclick="Cancel_GoodsReceipt();">Yes</button>

                                            </div>
                                        </div>

                                    </div>
                                </div>}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })

    <input type="button" value="Cancel Goods Receipt" class="btn btn-danger" data-toggle="modal" data-target="#myModal" style="float:right" id="cancel_goodsreceipt" />

</div>
@*<div>
</div>*@




<style>
    table.dataTable {
        clear: both;
        margin-bottom: -1px !important;
    }
</style>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
        $(document).ready(function ()
        {
        var tag_details = @Html.Raw(JsonConvert.SerializeObject(this.Model.good_receipt_detail));

            $('#ContactGrid').DataTable({
            bFilter: false, bInfo: false,
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            bSortable: false,
            "info": false,
            "sScrollY": "200px",
            "aaData": tag_details,
            "bAutoWidth": false,
            "columns": [
                  { "data": "", sWidth: "5%", "title": "Sr No.", "defaultContent": "", "bSortable": false },
                  { "data": "item_code", "title": "Item Code", "bSortable": false },
                  { "data": "item_desc", "title": "Item Description", "bSortable": false },
                  { "data": "reason", bVisible: true, "title": "Reason","bSortable": false },
                  { "data": "sloc", bVisible: true, "title": "Sloc","bSortable": false },
                  { "data": "batch_yes_no", bVisible: true, "title": "New Batch","bSortable": false },
                  { "data": "batch_manual", bVisible: true, "title": "Batch","bSortable": false },
                  { "data": "batch", "title": "Batch Number", "bSortable": false ,bVisible: false},
                  { "data": "quantity", bVisible: true, "title": "Quantity" ,sClass:"right","bSortable": false},
                  { "data": "rate", bVisible: true, "title": "Rate",sClass:"right","bSortable": false },
                  { "data": "value", bVisible: true, "title": "Value", "bSortable": false,sClass:"right"},
                  { "data": "gl", bVisible: true, "title": "GL", "bSortable": false},
                  { "data": "grn", bVisible: true, "title": "GRN", "bSortable": false},
                  { "data": "remarks", bVisible: true, "title": "Remarks", "bSortable": false},
                  { "data": "uom", bVisible: false, "UoM": "Value", "bSortable": false},
                  { "data": "sloc", bVisible: false, "title": "Sloc", "bSortable": false},
            ],

            "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                $("td:first", nRow).html(iDisplayIndex + 1);
                return nRow;
            },

        });

        $("a[data-toggle=\"tab\"]").on("shown.bs.tab", function (e) {
            var t = $('#ContactGrid').DataTable();
            t.fnAdjustColumnSizing();
        });


         var status_id =  @Html.Raw(JsonConvert.SerializeObject(Model.status_id));

            $("#status_name").val($('#status_id :selected').text());

            var status_name = $('#status_id :selected').text();

            if (status_name!=null)
            {
                if (status_name == 'Cancelled' || status_name =='Closed' ){

                    $("#cancel_goodsreceipt").hide();
                }
                if (status_name =='Cancelled' )
                {                    
                    $("#cancel_goodsreceipt").hide();
                    $("#status_id").hide();
                    $("#status").show();
                }
                else if (status_name =='Closed' )
                {
                    $("#status_id").hide();
                    $("#closed").show();
                }
                else if (status_name =='Open' )
                {
                    $("#status_id").hide();
                    $("#open").show();
                }
                else
                {
                    $("#status_id").hide();
                }      
            }


        });

      $("#reason_id").change(function(){
            $("#cancellation_reason_id").val($(this).val());
        });
        function canclearmodel() {
            $("#reason_id").val('').trigger("change");
            $("#cancel_remarks").val('');
        }
    function Cancel_GoodsReceipt()
        {
            //if($("#reason_id").val()=="")
            //{
            //    swal("Error!", "Please select the reason for cancellation", "error")
            //    return false;
            //}
            //if($("#reason_id").val()==6)
            //{
                if($("#cancel_remarks").val()=="")
                {
                    swal("Error!", "Please enter the Remarks for cancellation", "error")
                    return false;

                }
            //}
            else{
                $.ajax({
                    url: '@Url.Action("DeleteConfirmed", "GoodsReceipt")',
                    type: "POST",
                    dataType: "JSON",
                    async:false,
                    data: { id: $("#goods_receipt_id").val(),cancellation_remarks: $("#cancel_remarks").val(),reason_id:$("#reason_id").val()},
                    success: function (id) {
                        if(id=="Cancelled")
                        {

                            swal({
                                title: "Cancelled",
                                //text: "Your Goods Receipt " + $("#document_no").val() + " has been cancelled.",
                                text: "Your Goods Receipt has been cancelled.",

                                type: "success",
                                showCancelButton: false,
                                closeOnConfirm: false,
                                showLoaderOnConfirm: false
                            }, function () {
                                location.href = '@Url.Action("Index", "GoodsReceipt")'
                            });
                        }
                        else
                        {
                            swal("Error", id, "error");
                        }

                    }
                });
            }
        }



</script>
}