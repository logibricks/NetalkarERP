@model Sciffer.Erp.Domain.ViewModel.GOODS_RECEIPT_VM
@using Newtonsoft.Json
@{
    ViewBag.Title = "Create";
}
@using (Html.BeginForm("Create", "GoodsReceipt", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <div id="GoodsDetailHidden"></div>
        <div class="form-group">
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.category_id, "Category *", htmlAttributes: new { Class = "control-label col-md-4 " })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            <input type="hidden" id="is_active" name="is_active" value="true" />
                            @Html.DropDownList("category_id", (System.Web.Mvc.SelectList)ViewBag.categorylist, htmlAttributes: new
                            {
                                Class = "form-control setPlant"@*, @onchange = "GetDocumentNumber(this.value)"*@})
                            @Html.ValidationMessageFor(model => model.category_id, "", new { Class = "text-danger" })
                        </div>
                        @*<div class="col-md-3 col-sm-3 col-xs-12">
                                @Html.LabelFor(model => model.goods_receipt_number, new { @class = "control-label col-md-4 hidden" })
                                @Html.EditorFor(model => model.goods_receipt_number, new { htmlAttributes = new { @class = "form-control num validinput removedisabled", @disabled = "document_numbring_id" } })
                                @Html.ValidationMessageFor(model => model.goods_receipt_number, "", new { @class = "text-danger" })
                            </div>*@
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6 col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.plant_id, "Plant *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                            <div class="col-md-8 col-sm-8 col-xs-12">
                                @Html.DropDownList("plant_id", (System.Web.Mvc.SelectList)ViewBag.plantlist, "--Select--", htmlAttributes: new { @class = "form-control validinput selectedbycategory", @onchange = "GetStorageLocation(this.value);" })
                                @Html.ValidationMessageFor(model => model.plant_id, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.posting_date, "Posting Date *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.posting_date, new { htmlAttributes = new { @class = "form-control validinput" } })
                            @Html.ValidationMessageFor(model => model.posting_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6 col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.document_date, "Document Date *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                            <div class="col-md-8 col-sm-8 col-xs-12">
                                @Html.EditorFor(model => model.document_date, new { htmlAttributes = new { @class = "form-control validinput" } })
                                @Html.ValidationMessageFor(model => model.document_date, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ref1, "Header Remarks", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.ref1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ref1, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-body" role="tabpanel" data-example-id="togglable-tabs">
            <ul id="myTab" class="nav nav-tabs bar_tabs" role="tablist">
                <li class="active"><a data-toggle="tab" href="#sectionA">Item Details</a></li>
                <li><a data-toggle="tab" href="#sectionB">Information</a></li>
            </ul>
            <div class="tab-content">

                <div id="sectionA" class="tab-pane fade in active" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">

                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    <button type="button" class="btn btn-primary" style="float:right" onclick="CheckPlant()"><span class="glyphicon glyphicon-plus"></span>Add Item</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="table-responsive">
                            <table class="table table-responsive table-bordered table-striped" id="ContactGrid">
                                <thead>
                                    <tr>
                                        <th hidden><label>ID</label></th>
                                        <th><label>Sr. No.</label></th>
                                        <th hidden><label>Item Code</label></th>
                                        <th><label>Item</label></th>
                                        <th hidden><label>Reason ID</label></th>
                                        <th><label>Reason</label></th>
                                        <th hidden><label>Storage Location ID</label></th>
                                        <th><label>SLoc</label></th>
                                        <th hidden><label>Batch ID</label></th>
                                        <th hidden><label>Batch</label></th>
                                        <th><label>New Batch</label></th>
                                        <th><label>Batch</label></th>
                                        <th hidden><label>Bucket ID</label></th>
                                        <th hidden><label>Bucket</label></th>
                                        <th><label>Quantity</label></th>
                                        <th hidden><label>UOM ID</label></th>
                                        <th><label>UoM</label></th>
                                        <th><label>Rate</label></th>
                                        <th><label>Value</label></th>
                                        <th hidden><label>GL Code ID</label></th>
                                        <th><label>GL</label></th>
                                        <th hidden><label>GRN ID</label></th>
                                        <th><label>GRN</label></th>
                                        <th><label>Remarks</label></th>
                                        <th><label>Action</label></th>
                                    </tr>
                                </thead>

                            </table>
                        </div>
                    </div>
                </div>
                <div id="sectionB" class="tab-pane fade " style="margin-top:10px;">
                    <br /><br />
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.remarks, "Additional information", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.remarks, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.remarks, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.attachment, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    <input type="file" class="form-control" id="FileUpload" name="FileUpload" accept="application/pdf, image/*" />
                                    @* @Html.EditorFor(model => model.Attachment, new { htmlAttributes = new { @class = "form-control" } })*@
                                    @Html.ValidationMessageFor(model => model.attachment, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <input type="hidden" id="productdetail" name="productdetail" />
                        <input type="hidden" id="deleteids" name="deleteids" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg12 col-sm-12">
            <div class="form-group">
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <input type="submit" value="Create" class="btn btn-success" data-controller="GoodsReceipt" onclick="TabletoJeson()" style="float:right" id="create" name="create" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
</div>
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Item Details</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Item *
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("item_id", (System.Web.Mvc.SelectList)ViewBag.itemlist, "---Select---", new
                       {
                           @class = "form-control col-md-7 col-xs-12",
                           @onchange = "GetUnitandBatch(this.value)"
                       })
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Reason *
                        </label>

                        <div class="col-md-7">

                            @Html.DropDownList("REASON_DETERMINATION_ID", (System.Web.Mvc.SelectList)ViewBag.reasonlist, "---Select---", new
                       {
                           @class = "form-control col-md-7 col-xs-12"@*, @onchange = "GetUnit()", @style = "width: 100%;"*@})
                        </div>
                    </div>
                </div>
                <br class="grnhide" />
                <div class="row grnhide">
                    <div class="form-group ">
                        <label class="control-label col-md-3">
                            GRN
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("grn_id", Enumerable.Empty<SelectListItem>(), "", new { @class = "form-control col-md-7 col-xs-12" })
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            SLoc *
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("storage_location_id", Enumerable.Empty<SelectListItem>(), "", new { @class = "form-control col-md-7 col-xs-12" })
                        </div>
                    </div>
                </div>
                <br class="batchyesno" />
                <div class="row batchyesno">
                    <label for="createnewbatch" class="col-sm-3 control-label">Create New Batch</label>
                    <div class="col-md-7 col-sm-7 col-xs-12">
                        <div class="checkbox">
                            <input type="checkbox" name="createnewbatch" id="createnewbatch" />
                        </div>
                    </div>
                </div>
                <br class="batch_list" />
                <div class="row batch_list" id="divbatch">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Batch *
                        </label>

                        <div class="col-md-7">
                            @Html.DropDownList("BATCH_ID", Enumerable.Empty<SelectListItem>(), "", new { @class = "form-control col-md-7 col-xs-12" })
                        </div>
                    </div>
                </div>

                <br class="createnewbatch" />
                <div class="row createnewbatch">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            New Batch *
                        </label>
                        <div class="col-md-7">
                            <input type="text" class="form-control col-md-7 col-xs-12" id="newbatch">
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Bucket *
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("bucket_id", (System.Web.Mvc.SelectList)ViewBag.bucketlist, "---Select---", new
                       {
                           @class = "form-control col-md-7 col-xs-12"@*, @onchange = "GetUnit()", @style = "width: 100%;"*@})
                        </div>
                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Quantity *
                        </label>
                        <div class="col-md-4">
                            <input type="number" class="form-control" id="quantity" onchange="calculation()" value="1">
                        </div>

                        <div class="col-md-3">
                            @Html.DropDownList("UOM_ID", (System.Web.Mvc.SelectList)ViewBag.unitlist, "---Select---", new { @class = "form-control col-md-7 col-xs-12", @disabled = "disabled" })
                        </div>

                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Rate *
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control col-md-7 col-xs-12" readonly="readonly" id="rate" onchange="calculation()">
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Value *
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control col-md-7 col-xs-12" id="value" readonly="readonly">
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            GL *
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("general_ledger_id", Enumerable.Empty<SelectListItem>(), "", new { @class = "form-control col-md-7 col-xs-12", @disabled = "disabled", @style = "width: 100%;" })

                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Remarks
                        </label>
                        <div class="col-md-7">

                            <textarea class="form-control col-md-7 col-xs-12" id="remark"></textarea>
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="modal-footer">
                <input type="hidden" id="srno" />
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="clearmodel();">Close</button>
                <button type="button" class="add btn btn-primary">Add</button>
                <input type="hidden" id="standard_cost_value" />
                <input type="hidden" id="sr_no">
                <input type="hidden" id="goods_detail_id">
            </div>
        </div>

    </div>
</div>

<script src="~/Scripts/requirevalidation.js"></script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        $(document).ready(function () {
            $("#rate").attr('disabled', 'disabled');
            $("#plant_id").select2({
                placeholder: "Select Plant",
                allowClear: true
            });
            $("#item_id").select2({
                placeholder: "Select Item",
                allowClear: true
            });
            $("#storage_location_id").select2({
                placeholder: "Select Storage Location",
                allowClear: true
            });

            $("#createnewbatch").checkboxpicker();
            $(".grnhide").hide();
            document.getElementById('posting_date').valueAsDate = new Date();
            document.getElementById('document_date').valueAsDate = new Date();
            //GetDocumentNumber($("#category_id").val());
            var error=@Html.Raw(Json.Encode(ViewBag.error));
            if(error !="")
            {
                sweetAlert("",error,"error");
            }
        });
        $("#posting_date").change(function () {

            $("#document_date").val($(this).val());
        })

        $(".add").on("click", function (event) {

            var t = $('#ContactGrid').DataTable();
            var rowCount = t.fnGetData().length;
            var item_id = $("#item_id").val();
            var item_name = $('#item_id option:selected').text();
            var STORAGE_LOCATION = $('#storage_location_id').val();
            var STORAGE_LOCATION_NAME = $('#storage_location_id option:selected').text();
            var BATCH_ID = $('#BATCH_ID').val();
            var BATCH_NAME = $('#BATCH_ID option:selected').text();
            var batchyesno = $("#createnewbatch").is(':checked');
            var batchmanual = $("#newbatch").val();
            var bucket_id = $('#bucket_id').val();
            var bucket_id_NAME = $('#bucket_id option:selected').text();
            var reason_id = $('#REASON_DETERMINATION_ID').val();
            var reason = $('#REASON_DETERMINATION_ID').find("option:selected").text();
            var gl_code_id = $("#general_ledger_id :selected").val();
            var gl_code_name = $('#general_ledger_id :selected').text();
            var qty = $("#quantity").val();
            var unit_id = $("#UOM_ID").val();
            var unit_name = $("#UOM_ID").find("option:selected").text();
            var rate = $("#rate").val();
            var value = qty * rate;
            var remark = $("#remark").val();
            var grn_id = $("#grn_id :selected").val();
            var grn = $("#grn_id :selected").text();
            if (item_id == '') {
                swal("", "Please Select Item.", "error");
                return false;
            }
            if (reason_id == '') {
                swal("", "Please Select Reason.", "error");
                return false;
            }
            if (STORAGE_LOCATION == '') {
                swal("", "Please Select SLoc.", "error");
                return false;
            }
            if(grn_id=="0")
            {
                grn="";
            }
            if (batchyesno == false) {
                batchyesno='No';
            }
            else
            {
                batchyesno='Yes';
            }
            if (bucket_id == '') {
                swal("", "Please Select Bucket.", "error");
                return false;
            }
            if (qty == '') {
                swal("", "Please Enter Quantity.", "error");
                return false;
            }
            if (rate == '') {
                swal("", "Please Enter Rate.", "error");
                return false;
            }
            if (gl_code_id == '') {
                swal("", "Please Enter GL.", "error");
                return false;
            }
            if ($("#sr_no").val() == "") {
                t.fnAddData(["0", rowCount + 1, item_id, item_name, reason_id, reason, STORAGE_LOCATION, STORAGE_LOCATION_NAME, BATCH_ID, BATCH_NAME,
                    batchyesno, batchmanual, bucket_id, bucket_id_NAME, parseFloat(qty).toFixed(2), unit_id, unit_name, parseFloat(rate).toFixed(2), parseFloat(value).toFixed(2), gl_code_id,
                    gl_code_name, grn_id, grn, remark, '']);
            }
            else {
                var cc = $("#sr_no").val();
                cc = parseInt(cc) - 1;
                t.fnUpdate(["0", cc + 1, item_id, item_name, reason_id, reason, STORAGE_LOCATION, STORAGE_LOCATION_NAME, BATCH_ID, BATCH_NAME,
                    batchyesno, batchmanual, bucket_id, bucket_id_NAME,  parseFloat(qty).toFixed(2), unit_id, unit_name, parseFloat(rate).toFixed(2), parseFloat(value).toFixed(2), gl_code_id,
                    gl_code_name, grn_id, grn, remark, ''], cc)
            }
            clearmodel();

            return true;
        });
        function clearmodel() {
            $("#item_id").val('').trigger("change");
            $("#REASON_DETERMINATION_ID").val('');
            $("#storage_location_id").val('').trigger("change");
            //$("#BATCH_ID").val('');
            $("#bucket_id").val('');
            $("#quantity").val('');
            $("#UOM_ID").val('').trigger('change');
            $("#rate").val('');
            $("#value").val('');
            $("#general_ledger_id").val('').trigger('change');
            $("#srno").val('');
            $('#remark').val('');
            $('#newbatch').val('');
            $('#createnewbatch').prop("checked", false);
            $('.batch_list').show();
            $('.batchyesno').show();
            $('.createnewbatch').show();
            $("#BATCH_ID").prop('selectedIndex', 0);
            document.getElementById("item_id").removeAttribute("disabled");
            document.getElementById("rate").removeAttribute("disabled");
            document.getElementById("bucket_id").removeAttribute("disabled");
            document.getElementById("general_ledger_id").removeAttribute("disabled");
            document.getElementById("UOM_ID").removeAttribute("disabled");
        }
        function calculation() {
            var quantity = $("#quantity").val();
            var rate = $("#rate").val();
            $("#value").val(rate * quantity);
        }

        $('#ContactGrid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            aoColumns: [
                     { sname: "a", bVisible: false },
                     { sname: "b" },
                     { sname: "c", bVisible: false },
                     { sname: "d" },
                     { sname: "e", bVisible: false },
                     { sname: "f" },
                     { sname: "g", bVisible: false },
                     { sname: "h" },
                     { sname: "i", bVisible: false },
                     { sname: "j", bVisible: false },
                     { sname: "k", bVisible: true },
                     { sname: "l", bVisible: true },
                     { sname: "m", bVisible: false },
                     { sname: "n", bVisible: false },
                     { sname: "o", bVisible: true,sClass:"right" },
                     { sname: "p", bVisible: false },
                     { sname: "q", bVisible: false },
                     { sname: "r",sClass:"right" },
                     { sname: "s",sClass:"right" },
                     { sname: "t", bVisible: false },
                     { sname: "u", bVisible: true },
                     { sname: "v", bVisible: false },
                     { sname: "w", bVisible: true },
                     { sname: "x" },
                     {
                         sname: "y", sWidth: "8%",
                         bSortable: false,
                         mRender: function (data, type, full) {
                             return '<img class="edit" src="../../images/writing_file.png" height="20px" width="25px" alt="Edit" onclick="editRow(' + full[1] + ');" /><img class="edit" src="../../images/remove.png" height="20px" width="25px" alt="Delete" onclick="deleteRow(' + full[1] + ');" />';
                         }
                     }]

        });


        function TabletoJeson() {
            $("#GoodsDetailHidden").empty();
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            console.log(rowCount);
            for (i = 0; i < rowCount; i++) {
                $("#GoodsDetailHidden").append('<input type="hidden" id="goods_detail_id' + i + '" name="goods_detail_id">');
                $("#GoodsDetailHidden").append('<input type="hidden" id="sr_no' + i + '" name="sr_no">');
                $("#GoodsDetailHidden").append('<input type="hidden" id="item_id' + i + '" name="item_id">');
                $("#GoodsDetailHidden").append('<input type="hidden" id="storage_location_id' + i + '" name="storage_location_id">');
                $("#GoodsDetailHidden").append('<input type="hidden" id="bucket_id' + i + '" name="bucket_id">');
                $("#GoodsDetailHidden").append('<input type="hidden" id="batch_yes_no' + i + '" name="batch_yes_no">');
                $("#GoodsDetailHidden").append('<input type="hidden" id="batch_manual' + i + '" name="batch_manual">');
                $("#GoodsDetailHidden").append('<input type="hidden" id="reason_determination_id' + i + '" name="reason_determination_id">');
                $("#GoodsDetailHidden").append('<input type="hidden" id="item_batch_id' + i + '" name="item_batch_id">');
                $("#GoodsDetailHidden").append('<input type="hidden" id="general_ledger_id' + i + '" name="general_ledger_id">');
                $("#GoodsDetailHidden").append('<input type="hidden" id="quantity' + i + '" name="quantity">');
                $("#GoodsDetailHidden").append('<input type="hidden" id="uom_id' + i + '" name="uom_id">');
                $("#GoodsDetailHidden").append('<input type="hidden" id="rate' + i + '" name="rate">');
                $("#GoodsDetailHidden").append('<input type="hidden" id="value' + i + '" name="value">');
                $("#GoodsDetailHidden").append('<input type="hidden" id="remark' + i + '" name="remark">');
                $("#GoodsDetailHidden").append('<input type="hidden" id="grn_id' + i + '" name="grn_id">');

                $("#goods_detail_id" + i).val(t.fnGetData(i)[0]);
                $("#sr_no" + i).val(t.fnGetData(i)[1]);
                $("#item_id" + i).val(t.fnGetData(i)[2]);
                $("#reason_determination_id" + i).val(t.fnGetData(i)[4]);
                $("#storage_location_id" + i).val(t.fnGetData(i)[6]);
                $("#item_batch_id" + i).val(t.fnGetData(i)[8]);
                $("#batch_yes_no" + i).val(t.fnGetData(i)[10]);
                $("#batch_manual" + i).val(t.fnGetData(i)[11]);
                $("#bucket_id" + i).val(t.fnGetData(i)[12]);
                $("#quantity" + i).val(t.fnGetData(i)[14]);
                $("#uom_id" + i).val(t.fnGetData(i)[15]);
                $("#rate" + i).val(t.fnGetData(i)[17]);
                $("#value" + i).val(t.fnGetData(i)[18]);
                $("#general_ledger_id" + i).val(t.fnGetData(i)[19]);
                $("#remark" + i).val(t.fnGetData(i)[23]);
                $("#grn" + i).val(t.fnGetData(i)[21]);
            }
        }
        function editRow() {
            $('#myModal').modal('show');
            var t = $('#ContactGrid').DataTable()
            var i = parseInt(arguments[0]) - 1;
            $("#goods_detail_id").val(t.fnGetData(i)[0]);
            $("#sr_no").val(t.fnGetData(i)[1]);
            $("#item_id").val(t.fnGetData(i)[2]).trigger('change');
            $("#REASON_DETERMINATION_ID").val(t.fnGetData(i)[4]).trigger('change');
            $("#storage_location_id").val(t.fnGetData(i)[6]).trigger('change');
            $("#BATCH_ID").val(t.fnGetData(i)[8]).trigger('change');
            if(t.fnGetData(i)[10]=="Yes")
            {
                $("#createnewbatch").val(true);
            }
            else
            {
                $("#createnewbatch").val(false);
            }
            $("#newbatch").val(t.fnGetData(i)[11]);
            $("#bucket_id").val(t.fnGetData(i)[12]).trigger('change');
            $("#quantity").val(t.fnGetData(i)[14]);
            $("#uom_id").val(t.fnGetData(i)[15]);
            $("#rate").val(t.fnGetData(i)[17] == '' || t.fnGetData(i)[17] == null ? 0 : t.fnGetData(i)[17]);
            $("#value").val(t.fnGetData(i)[18]);
            $("#general_ledger_id").val(t.fnGetData(i)[19]).trigger('change');
            $("#remark").val(t.fnGetData(i)[23]);
            $("#grn").val(t.fnGetData(i)[21]).trigger('change');
            //console.log(t.fnGetData(i)[10]);
            if (t.fnGetData(i)[10] == false) {
                $('.batch_list').show();
               // $('.batchyesno').show();
                //$("#createnewbatch").prop("checked", false).trigger('change');

            }
            else {
               // $('.batchyesno').show();
                //$('.createnewbatch').show();
                $('.batch_list').hide();
               // $("#createnewbatch").prop("checked", true).trigger('change');
            }
        }

        function deleteRow() {
            var t = $('#ContactGrid').DataTable()
            var len = t.fnGetData.length;
            var pos;
            for (var l = 0; l <= len; l++) {
                if (t.fnGetData(l) != null) {
                    if (t.fnGetData(l)[1] == arguments[0]) {
                        pos = l;
                    }
                }
            }

            var id = t.fnGetData(pos)[0];

            var deleteids = $("#deleteids").val();

            swal({
                title: "Are you sure?",

                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: true

            },

            function (isConfirm) {
                if (isConfirm) {

                    $("#deleteids").val(deleteids + "~" + id);
                    t.fnDeleteRow(pos);

                }

            });
        }

        //function GetDocumentNumber(id) {
        //    if (id != '') {
        //        $.ajax({
        //            type: 'GET',
        //            url: '/Generic/GetDocumentNumbering',
        //            data: { id: id },
        //            success: function (ITEM) {
        //                $('#goods_receipt_number').val(ITEM);
        //            },
        //            error: function (emp) {
        //                $('#goods_receipt_number').val('');
        //            }
        //        });
        //    }
        //    else {
        //        $('#goods_receipt_number').val('');
        //    }
        //}

        function GetUnit(id) {
            if (id != '') {
                $.ajax({
                    type: 'GET',
                    url: '/Generic/GetUnitofItem',
                    data: { id: id },
                    success: function (ITEM) {
                        $("#UOM_ID").val(ITEM.item);
                    },
                    error: function (emp) {
                        $('#UOM_ID').val('');
                    }
                });
            }
            else {
                $('#UOM_ID').val('');
            }

        }

        function onSelect2(args) {
            var id = "";
            var id = args.value.split("-")[0];
            GetUnit(id);
        }
        function GetStorageLocation(id) {
            if (id == "") {
                id = 0;
            }
            $.ajax({
                url: '@Url.Action("GetStorageLocation", "Generic")',
                type: "GET",
                dataType: "JSON",
                data: { id: id },
                success: function (id) {
                    $("#storage_location_id").html(""); // clear before appending new list
                    $("#storage_location_id").append($('<option></option>').val("").html("---Select---"));
                    $.each(id, function (i, cycle) {
                        $("#storage_location_id").append(
                            $('<option></option>').val(cycle.storage_location_id).html(cycle.storage_location_name));
                    });
                }
            });
        }
        $("#createnewbatch").change(function () {
            id = $(this).is(':checked');
            if (id == false) {
                $('.batch_list').show();
                $('.batchyesno').show();
                $('.createnewbatch').hide();
                //$('#newbatch').val('');
                $("#BATCH_ID").prop('selectedIndex', 0);
            }
            else {
                $('#newbatch').val('');
                $('.batch_list').hide();
                $('.batchyesno').show();
                $('.createnewbatch').show()
            }
        });

        //$("#REASON_DETERMINATION_ID").change(function () {
        //    val = $("#REASON_DETERMINATION_ID :selected").text();
        //    var qty = $("#quantity").val()

        //    if (val == "Free of Cost") {
        //        $("#rate").val(0).trigger("change");
        //        $("#rate").prop("disabled", "disabled")
        //        $(".grnhide").hide();

        //    } else if (val == "Excess material available") {
        //        var rate = $("#standard_cost_value").val();
        //        $("#rate").val(rate).trigger("change");
        //        $("#rate").prop("disabled", "disabled");
        //        $("#value").val(rate * qty);
        //        $(".grnhide").show();
        //    }
        //    else if (val == "Scrap Generation" ) {
        //        var rate = $("#standard_cost_value").val();
        //        $("#rate").val(rate).trigger("change");
        //        //$("#rate").prop("disabled", "disabled");
        //        $("#value").val(rate * qty);
        //        $(".grnhide").hide();
        //    }
        //    else if (val == "Excess material received" ) {
        //        $("#rate").val(0).trigger("change");
        //        $("#rate").prop("disabled", "disabled");
        //        $("#value").val('0');
        //        $(".grnhide").show();
        //    }
        //    else {
        //        $("#rate").val('0').trigger("change");
        //        $("#rate").prop("disabled", false);
        //        $(".grnhide").hide();
        //    }
        //});

        function GetUnitandBatch(item_id) {
            var plant_id = $("#plant_id").val();
            if (item_id == "") {
                item_id = 0;
            }
            else
            {
                $.ajax({
                    url: '@Url.Action("GetItemDetails", "Goodsreceipt")',
                    type: "GET",
                    dataType: "JSON",
                    data: { item_id: item_id },
                    success: function (data) {
                        console.log(data);
                        if(data.QUALITY_MANAGED==false){
                            $("#bucket_id option[value=1]").hide();
                            $("#bucket_id option[value=2]").show();
                            $("#bucket_id option[value=3]").show();
                        }
                        else{
                            $("#bucket_id option[value=1]").show();
                            $("#bucket_id option[value=2]").hide();
                            $("#bucket_id option[value=3]").hide();
                        }
                        $.ajax({
                            url: '@Url.Action("GetMAP", "Goodsreceipt")',
                            type: "GET",
                            dataType: "JSON",
                            data: { item_id: item_id, plant_id: plant_id },
                            async: false,
                            success: function (data) {
                                // console.log(data);
                                $("#standard_cost_value").val(data);
                            }
                        });

                        if (data.BATCH_MANAGED == true) {
                            if (data.auto_batch == 2) {
                                $("#newbatch").prop("disabled", false)
                            }
                            else {
                                $("#newbatch").prop("disabled", "disabled")
                            }
                            $('.dt_col_hide').show();
                            $('.batchyesno').show();
                            $('.createnewbatch').show()
                            $.ajax({
                                url: '@Url.Action("BatchList", "Goodsreceipt")',
                                type: "GET",
                                dataType: "JSON",
                                async: false,
                                data: { item_id: item_id,plant_id:plant_id },
                                success: function (id) {
                                    $("#BATCH_ID").html(""); // clear before appending new list
                                    $("#BATCH_ID").append($('<option></option>').val(0).html("---Select---"));
                                    $.each(id, function (i, cycle) {
                                        $("#BATCH_ID").append(
                                            $('<option></option>').val(cycle.item_batch_id).html(cycle.batch_number));
                                    });
                                }
                            });
                        }
                        else {
                            $('.dt_col_hide').hide();
                            $('.batchyesno').hide();
                            $('.createnewbatch').hide()
                            $('.batch_list').hide();
                            $('#createnewbatch').prop('checked', false);
                        }
                    }
                });
            }


            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetUnitofItem", "Generic")',
                data: { id: item_id },
                success: function (ITEM) {
                    $("#UOM_ID").val(ITEM.item);
                },
                error: function (emp) {
                    $('#UOM_ID').val('');
                }
            });
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetInventoryAccount", "Generic")',
                data: { id: item_id },
                success: function (ITEM) {
                    $("#general_ledger_id").html(""); // clear before appending new list
                    $.each(ITEM, function (i, cycle) {
                        $("#general_ledger_id").append(
                            $('<option></option>').val(cycle.gl_ledger_id).html(cycle.gl_ledger_name));
                    });

                }
            });
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetGRNListByItemID", "Generic")',
                data: { item_id: item_id,plant_id:plant_id },
                success: function (ITEM) {
                    $("#grn_id").html(""); // clear before appending new list
                    $("#grn_id").append($('<option></option>').val(0).html("---Select---"));
                    $.each(ITEM, function (i, cycle) {
                        $("#grn_id").append(
                            $('<option></option>').val(cycle.grn_id).html(cycle.grn_number));
                    });

                }
            });

            var sloc_id = plant_id == 1 ? 2 : 6;

                $.ajax({
                    url: '@Url.Action("ClumpsumBatchQuantity", "ProductionOrderIssue")',
                    type: "GET",
                    dataType: "JSON",
                    cache:false,
                    async: true,
                    data: { sloc_id : sloc_id,  plant_id :plant_id , item_id :item_id, bucket_id: 2, entity_id : "getclumpsubbatchquantity"},
                    success: function (po) {
                        $("#rate").val(po.SubProd[0].rate);
                    }
                });
        }
        function CheckPlant()
        {
            if($("#plant_id").val()=="")
            {
                sweetAlert("", "Select plant first !", "error");
                return false;
            }
            else
            {
                $('#myModal').modal('show');
                clearmodel();
            }
        }
        const fewSeconds = 3
        document.querySelector('#create').addEventListener('click', (e) => {
            e.target.disabled = true
            setTimeout(() => {
                e.target.disabled = false
            }, fewSeconds * 1000)
        })
    </script>
}