@model Sciffer.Erp.Domain.ViewModel.inv_revaluation_vm

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm("Create", "InventoryRevaluation", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="margin-top:10px;">
        <div id="revail_detail" hidden></div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.category_id, new { @class = "control-label col-md-4" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            <input type="hidden" id="is_active" name="is_active" value="true" />
                            @Html.DropDownList("category_id", (System.Web.Mvc.SelectList)ViewBag.categorylist, new { @class = "form-control validinput setPlant", @required = true })
                            @Html.ValidationMessageFor(model => model.category_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.inventory_revaluation_date, new { @class = "control-label col-md-4" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.inventory_revaluation_date, new { htmlAttributes = new { @class = "form-control validinput" } })
                            @Html.ValidationMessageFor(model => model.inventory_revaluation_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.inventory_revaluation_document_date, new { @class = "control-label col-md-4" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.inventory_revaluation_document_date, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.inventory_revaluation_document_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.plant_id, new { @class = "control-label col-md-4" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("plant_id", (System.Web.Mvc.SelectList)ViewBag.plant_list, "", new { @class = "form-control validinput selectedbycategory", @required = true })
                            @Html.ValidationMessageFor(model => model.plant_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>



        <div class="panel panel-body" role="tabpanel" data-example-id="togglable-tabs">
            <ul id="myTab" class="nav nav-tabs bar_tabs" role="tablist">
                <li class="active"><a data-toggle="tab" href="#sectionA">Item Details</a></li>
                <li><a data-toggle="tab" href="#sectionB">Information</a></li>

            </ul>
            <div class="tab-content">
                <div id="sectionA" class="tab-pane fade  in active" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">

                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    <button type="button" class="btn btn-primary" id="open_modal" style="float:right" onclick="OpenModel();"><span class="glyphicon glyphicon-plus"></span>Add Item</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="table-responsive">
                            <table class="table table-responsive table-bordered table-striped" id="ContactGrid">
                                <thead>
                                    <tr>
                                        <th><label>ID</label></th>
                                        <th><label>Sr. No.</label></th>
                                        <th><label>Item </label></th>
                                        <th><label>Item ID</label></th>
                                        <th><label>Item Description</label></th>
                                        <th><label>Quantity</label></th>
                                        <th><label>UOM ID</label></th>
                                        <th><label>UoM</label></th>
                                        <th><label>Old Rate</label></th>
                                        <th><label>New Rate</label></th>
                                        <th><label>Diff Rate</label></th>
                                        <th><label>Diff Value</label></th>
                                        <th><label>GL ID</label></th>
                                        <th><label>GL Account</label></th>
                                        <th><label>Item Name</label></th>
                                        <th><label>Action</label></th>
                                    </tr>
                                </thead>

                            </table>
                        </div>
                    </div>
                </div>
                <div id="sectionB" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                <label class="col-md-4">Additional Information</label>
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.inventory_revaluation_remark, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.inventory_revaluation_remark, "", new { @class = "text-danger" })
                                </div>
                            </div>



                        </div>

                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                <label class="col-md-4">Attachment</label>
                                <div class="col-md-8">
                                    <input type="file" class="form-control" id="FileUpload" name="FileUpload" />
                                    @Html.ValidationMessageFor(model => model.attachement, "", new { @class = "text-danger" })
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @*<div class="row">
            <div class="col-lg12 col-sm-12">*@
        <div class="form-group">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <input type="submit" value="Create" class="btn btn-success" data-controller="InventoryRevaluation" id="create" name="create" onclick="TabletoJeson();" style="float:right" />
            </div>
        </div>
        @*</div>
            </div>*@
    </div>


}
<!-- Modal -->
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="clearmodel();">&times;</button>
                <h4 class="modal-title">Item Details</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Item <span class="required">*</span>
                        </label>
                        <div class="col-md-7">

                            @Html.DropDownList("item_id", (System.Web.Mvc.SelectList)ViewBag.Item_list, "---Select---", new { @class = "form-control", @onchange = "GetUnit(this.value);" })
                            @Html.ValidationMessageFor(model => model.item_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Quantity  <span class="required">*</span>
                        </label>
                        <div class="col-md-4">
                            <input type="number" name="txtQuantity" class="form-control right col-md-7 col-xs-12" id="txtQuantity" onchange="calculation()" readonly>
                        </div>

                        <div class="col-md-3">
                            @Html.DropDownList("Uom_id", (System.Web.Mvc.SelectList)ViewBag.Uom_list, "---Select---", new { @class = "form-control col-md-7 col-xs-12", @disabled = "disabled" })
                        </div>
                    </div>
                </div>
                <br />

                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Old Rate <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control right" id="revaluation_old_rate" name="revaluation_old_rate" onchange="calculation()" readonly />
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            New Rate <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control right" id="revaluation_new_rate" name="revaluation_new_rate" onchange="calculation()" />
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Diff Rate <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control right" id="diff_rate" name="revaluation_differential_rate" readonly="readonly" />
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Diff Value <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control right" id="diff_value" name="revaluation_differential_value" readonly="readonly" />
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            GL Account <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("gl_code", (System.Web.Mvc.SelectList)ViewBag.gl_list, "---Select---", new { @class = "form-control col-md-7 col-xs-12", @disabled = "disabled" })
                        </div>
                    </div>
                </div>


            </div>

            <div class="modal-footer">
                <input type="hidden" id="srno" />
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="clearmodel();">Close</button>
                <button type="button" class="add btn btn-primary">Add</button>
            </div>
        </div>

    </div>
</div>


<div>

    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="../Scripts/RemoveUnexpectedFile.js"></script>

    @*<script src="../Scripts/requirevalidation.js"></script>*@
    <script type="text/javascript">

        $(document).ready(function () {
            document.getElementById('inventory_revaluation_date').valueAsDate = new Date();
            var error=@Html.Raw(Json.Encode(ViewBag.error));
            if(error !="")
            {
                sweetAlert("",error,"error");
            }
            $("#item_id").select2({
                placeholder: "Select Item",
                allowClear: true
            });

            $("#plant_id").select2({
                placeholder: "Select Plant",
                allowClear: true
            });

            $("#gl_code").select2({
                placeholder: "Select GL Account",
                allowClear: true
            });
        });
        function OpenModel()
        {
            if($("#plant_id").val()=="")
            {
                swal("", "Please select Plant.", "error");
                return false;
            }
            else
            {
                $('#myModal').modal('show');
                clearmodel();
            }
        }
        $(".add").on("click", function (event) {
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            var sr_no = rowCount + 1;
            var item_id = $("#item_id").val();
            var item_name = $('#item_id option:selected').text();
            var item_code = $("#item_id").find("option:selected").text();
            var item_name = $("#item_id").find("option:selected").text();
            var qty = $("#txtQuantity").val();
            var unit_id = $("#Uom_id").val();
            var unit = $("#Uom_id").find("option:selected").text();
            var old_rate = $('#revaluation_old_rate').val();
            var new_rate = $('#revaluation_new_rate').val();
            var diff_rate = $("#diff_rate").val();
            var diff_value = $("#diff_value").val();
            var gl_id = $('#gl_code').val();
            var gl_text = $('#gl_code').find("option:selected").text();
            if (item_id == '') {
                swal("", "Please Select Item Name.", "error");
                return false;
            }
            if (qty == '') {
                swal("", "Please Enter Quantity.", "error");
                return false;
            }
            if (qty == 0) {
                swal("", "Quantity should be greater than zero.", "error");
                return false;
            }
            if (unit_id == '') {
                swal("", "Please select Unit.", "error");
                return false;
            }
            if (old_rate == '') {
                swal("", "Please enter old rate.", "error");
                return false;
            }
            if (new_rate == '') {
                swal("", "Please enter new rate.", "error");
                return false;
            }
            if (diff_rate == '') {
                swal("", "Please enter diff rate.", "error");
                return false;
            }
            if (diff_value == '') {
                swal("", "Please enter diff value.", "error");
                return false;
            }
            if (gl_id == '') {
                swal("", "Please Select GL code.", "error");
                return false;
            }

            if ($("#srno").val() == "") {
                t.fnAddData([0, sr_no, item_code, item_id, item_code, parseFloat(qty).toFixed(2), unit_id, unit, parseFloat(old_rate).toFixed(2), parseFloat(new_rate).toFixed(2), parseFloat(diff_rate).toFixed(2), parseFloat(diff_value).toFixed(2), gl_id, gl_text, item_name, ''
                ]);
                sr_no++;
            }
            else {
                var cc = $("#srno").val();
                cc = parseInt(cc) - 1;
                t.fnUpdate([0, cc + 1, item_code, item_id, item_code, parseFloat(qty).toFixed(2), unit_id, unit, parseFloat(old_rate).toFixed(2), parseFloat(new_rate).toFixed(2), parseFloat(diff_rate).toFixed(2), parseFloat(diff_value).toFixed(2), gl_id, gl_text, item_name, ''], cc)
            }

            clearmodel();
            return true;
        });


        $('#ContactGrid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            aoColumns: [
                     { sname: "a", bVisible: false },
                     { sname: "b",  },
                     { sname: "c",  },
                     { sname: "d", bVisible: false },
                     { sname: "e", sWidth: "20%", bVisible: false },
                     { sname: "f",sClass:"right"  },
                     { sname: "g", bVisible: false },
                     { sname: "h", sWidth: "8%" },
                     { sname: "i",sClass:"right"  },
                     { sname: "j",sClass:"right" },
                     { sname: "k", sClass: "right" },
                     { sname: "l", sClass: "right" },
                     { sname: "m", bVisible: false },
                     { sname: "n", },
                     { sname: "o", bVisible: false },


                     {
                         sname: "p", sWidth: "8%",
                         bSortable: false,
                         mRender: function (data, type, full) {
                             return '<img class="edit" src="../images/writing_file.png" height="20px" width="25px" alt="Edit" onclick="editRow(' + full[1] + ');" /><img class="delete" src="../images/remove.png" height="20px" width="25px" alt="Delete" />';
                         }
                     }]

        });

        function calculation() {
            var quantity = $("#txtQuantity").val();
            var oldrate = $("#revaluation_old_rate").val();
            $("#txtQuantity").val(parseFloat(quantity).toFixed(2));
            var rate = $("#revaluation_new_rate").val();
            $("#revaluation_new_rate").val(parseFloat(rate).toFixed(2));
            $("#diff_rate").val(parseFloat(rate - oldrate).toFixed(2));

            $("#diff_value").val(parseFloat(parseFloat(quantity) * parseFloat($("#diff_rate").val())).toFixed(2));


        }

        function editRow() {
            $('#myModal').modal('show');
            var t = $('#ContactGrid').DataTable()
            var cc = parseInt(arguments[0]) - 1;
            $("#srno").val(t.fnGetData(cc)[1]);
            $("#item_id").val(t.fnGetData(cc)[3]).trigger("change");
            $('#txtDescription').val(t.fnGetData(cc)[4]);
            $('#txtQuantity').val(parseFloat(t.fnGetData(cc)[5]).toFixed(2));
            $('#Uom_id').val(t.fnGetData(cc)[6]);
            $('#revaluation_old_rate').val(parseFloat(t.fnGetData(cc)[8]).toFixed(2));
            $('#revaluation_new_rate').val(parseFloat(t.fnGetData(cc)[9]).toFixed(2));
            $('#diff_rate').val(parseFloat(t.fnGetData(cc)[10]).toFixed(2));
            $('#diff_value').val(parseFloat(t.fnGetData(cc)[11]).toFixed(2));
            $('#gl_code').val(t.fnGetData(cc)[12]).trigger("change");


        }

        function clearmodel() {
            $("#item_id").val('').trigger("change");
            $("#txtDescription").val('');
            $("#txtQuantity").val('');
            $("#Uom_id").val('');
            $("#srno").val('');
            $('#revaluation_old_rate').val('');
            $('#revaluation_new_rate').val('');
            $('#diff_rate').val('');
            $('#diff_value').val('');
            $('#gl_code').val('').trigger("change");
        }

        $('#ContactGrid').on('click', '.delete', function () {
            var t = $('#ContactGrid').DataTable();
            var id = $(this).parent('td').parent('tr').index();
            var deleteids = t.fnGetData(id)[1];
            swal({
                title: "Are you sure?",

                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: true

            },
     function (isConfirm) {
         if (isConfirm) {
             t.fnDeleteRow(id);
         }
         var len = t.fnGetData().length;
         var i = 1;
         var row = 0;
         if (len > 0) {
             $('#ContactGrid tbody tr').each(function () {
                 t.fnUpdate(i, row, 1);
                 i++;
                 row++;
             });
         }

     });
        });

        function GetUnit(id) {
            if (id != '') {
                $.ajax({
                    type: 'GET',
                    url: "@Url.Action("GetUnitofItem", "Generic")",
                    data: { id: id },
                    success: function (ITEM) {
                        $('#Uom_id').val(ITEM.item);
                    },
                    error: function (emp) {
                        $('#Uom_id').val('');
                    }
                });
                GettoCurrentBalance(id);
            }
            else {
                $('#Uom_id').val('');
            }

        }

        function TabletoJeson() {
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            $("#revail_detail").empty();
            for (i = 0; i < rowCount; i++)
            {
                $("#revail_detail").append('<input type="hidden" id="item_id1' + i + '" name="item_id1" value=' + t.fnGetData(i)[3] + '>');
                $("#revail_detail").append('<input type="hidden" id="quantity' + i + '" name="quantity" value=' + t.fnGetData(i)[5] + '>');
                $("#revail_detail").append('<input type="hidden" id="uom_id' + i + '" name="uom_id" value=' + t.fnGetData(i)[6] + '>');
                $("#revail_detail").append('<input type="hidden" id="new_rate' + i + '" name="new_rate" value=' + t.fnGetData(i)[9] + '>');
                $("#revail_detail").append('<input type="hidden" id="old_rate' + i + '" name="old_rate" value=' + t.fnGetData(i)[8] + '>');
                $("#revail_detail").append('<input type="hidden" id="differential_rate' + i + '" name="differential_rate" value=' + t.fnGetData(i)[10] + '>');
                $("#revail_detail").append('<input type="hidden" id="differential_value' + i + '" name="differential_value" value=' + t.fnGetData(i)[11] + '>');
                $("#revail_detail").append('<input type="hidden" id="general_ledger_id' + i + '" name="general_ledger_id" value=' + t.fnGetData(i)[12] + '>');

            }
        }


        function GettoCurrentBalance(item_id) {
            var plant_id = $("#plant_id").val();
            var start_date = $("#inventory_revaluation_date").val();
            $("#txtQuantity").val("");
            $("#revaluation_old_rate").val("");
            var sloc_id = plant_id == 1 ? 2 : 6;
            if (item_id != "") {
                $.ajax({
                    url: '@Url.Action("Get_Item_Current_Balance", "Generic")',
                    type: "GET",
                    dataType: "JSON",
                    async: false,
                    data: { entity: "getitemcurrentbalance", item_id: item_id, plant_id: plant_id, sloc_id: sloc_id,bucket_id:2 },
                    success: function (level) {
                        $("#txtQuantity").val(parseFloat(level.quantity).toFixed(2));
                        $("#revaluation_old_rate").val(parseFloat(level.item_value).toFixed(2));
                        $('#gl_code').val(level.gl_ledger_id).trigger("change");
                    }
                });
            }
        }


    </script>
}



