@model IEnumerable<Sciffer.Erp.Domain.Model.pur_requisition>
@using Sciffer.Erp.Domain.ViewModel
@{
    ViewBag.Title = "Index";
}
<br /><br /><br /><br /><br />
<div>
    @(Html.EJ().Grid<fin_bank_reco_vm>("FlatGrid")
        .Datasource(ds => ds.URL(Url.Action("GetIndexData", "Generic", new { @ctrl_name = "BRS" }))
         .EnableCaching()
        .CachingPageSize(4)
        .TimeTillExpiration(120000)
        .Adaptor(AdaptorType.UrlAdaptor))
        .EditSettings(edit => { edit.AllowAdding().AllowDeleting().AllowEditing().EditMode(EditMode.InlineFormTemplate); })
        .ToolbarSettings(toolBar => toolBar.ShowToolbar().ToolbarItems(items =>
        {
            items.AddTool(ToolBarItems.Add);
            items.AddTool(ToolBarItems.Edit);
            items.AddTool(ToolBarItems.ExcelExport);

            items.AddTool(ToolBarItems.PrintGrid);
        }))
        .Mappers(map => map.ExportToExcelAction(Url.Action("ExportToExcel", "Generic", new { ctrlname = "BRS" })))
        .AllowSorting()
       .AllowPaging().PageSettings(a => a.PageSize(20))
        .IsResponsive()
        .AllowFiltering()
        .ShowColumnChooser()
        .AllowReordering()
         .AllowScrolling()
        .ScrollSettings(col => { col.Width("100%"); })
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .Columns(col =>
        {
            col.Field("fin_bank_reco_id").HeaderText("ID").IsPrimaryKey(true).Width(55).Visible(false).Add();
            col.Field("category_name").Width("15%").HeaderText("Category").Visible(true).Add();
            col.Field("document_no").Width("15%").HeaderText("Document Number").Add();
            col.Field("posting_date").Width("15%").HeaderText("Posting Date").Format("{0:dd/MM/yyyy}").Add();
            col.Field("reco_start_date").Width("15%").HeaderText("From Date ").Visible(true).Format("{0:dd/MM/yyyy}").Add();
            col.Field("reco_end_date").Width("15%").HeaderText("To Date").Visible(true).Format("{0:dd/MM/yyyy}").Add();
            col.Field("bank_account_code").Width("15%").HeaderText("Bank Account Code").Visible(true).Add();
            col.Field("bank_account_number").Width("15%").HeaderText("Bank Account Number").Visible(true).Add();
            col.Field("user_closing_bal").Width("15%").HeaderText("Bank Statement Closing Balance").Visible(true).Add();
            col.Field("currency_name").Width("15%").HeaderText("Currency").Visible(true).Add();
            col.Field("payment_total").Width("15%").HeaderText("Payment Total").Visible(true).Add();
            col.Field("receipt_total").Width("15%").HeaderText("Receipt Total").Visible(true).Add();
            col.Field("payment_not_sel_total").Width("15%").HeaderText("Payments not reflected in bank statement").Visible(true).Add();
            col.Field("receipt_not_sel_total").Width("15%").HeaderText("Receipts not reflected in the bank statement").Visible(true).Add();
            col.Field("derived_closing_bal").Width("15%").HeaderText("Derived Bank Statment Balance").Visible(true).Add();

        })
        .ClientSideEvents(eve =>
        {
            eve.ActionBegin("actionBegin");
            eve.RightClick("rightClick");
        })
    )
</div>

<style>
    .e-editedrow {
        display: none;
    }

    .e-editcell {
        display: none;
    }
</style>

<script type="text/javascript">

    function actionBegin(args) {
        if (args.requestType == "beginedit")
        {
            location.href = '@Url.Action("Edit", "BRS")?id=' + args.rowData.fin_bank_reco_id;
        }
        if (args.requestType == "add") {
            location.href = '@Url.Action("Create", "BRS")';
        }
    }  
   $(document).ready(function(){
        var doc_no= '@ViewBag.doc';
        if (doc_no != '') {
            if (doc_no != 0) {
                sweetAlert("", doc_no + " Saved successfully!", "success");
            }
        }
    });
</script>

