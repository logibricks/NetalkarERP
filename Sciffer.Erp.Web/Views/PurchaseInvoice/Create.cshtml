@model Sciffer.Erp.Domain.ViewModel.pur_pi_VM
@{
    ViewBag.Title = "Create";
}
@using (Html.BeginForm("Create", "PurchaseInvoice", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken() {
        <div class="form-horizontal" style="margin-top:10px;">
            <div id="pidetail" hidden></div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <label id="label_start_date" class="label_end_date" hidden>GRN Date</label>
            <input type="date" id="grndate" name="grndate" class="validation_start_date" hidden />
            <div class="form-group">
                <div class="row">
                    <div class="col-lg-6 col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.po_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                            <div class="col-md-4 col-sm-4 col-xs-12">
                                @Html.DropDownList("po_id", Enumerable.Empty<SelectListItem>(), "---Select---", new { @class = "form-control validinput removedisabled", @required = true, @disabled = "disabled" })
                                @Html.ValidationMessageFor(model => model.po_id, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-4 col-sm-4">
                                <input type="button" value="Select Purchase Order" name="purchaseinvoice" id="purchaseinvoice" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6 col-sm-6">
                        <label class="control-label col-md-4 col-sm-4 col-xs-12">Service Invoice Without PO</label>
                        <div class="form-group">
                            <div class="col-lg-8 col-sm-8">
                                <input type="checkbox" name="ServiceInvoiceWithoutPO" id="ServiceInvoiceWithoutPO" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6 col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.category_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                            <div class="col-md-8 col-sm-8 col-xs-12">
                                @Html.DropDownList("category_id", (System.Web.Mvc.SelectList)ViewBag.category_list, new { @class = "form-control category validinput setPlant", @required = true, })
                                @Html.ValidationMessageFor(model => model.category_id, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6 col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.posting_date, htmlAttributes: new { @class = "control-label label_start_date col-md-4 col-sm-4 col-xs-12" })
                            <div class="col-md-8 col-sm-8 col-xs-12">
                                @Html.EditorFor(model => model.posting_date, new { htmlAttributes = new { @class = "form-control postingdocumentdate validation_end_date postingdate validinput", @required = true, @onchange = "CalculateTax();" } })
                                @Html.ValidationMessageFor(model => model.posting_date, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6 col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.vendor_id, "Vendor *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                            <div class="col-md-8 col-sm-8 col-xs-12">
                                @Html.DropDownList("vendor_id", (System.Web.Mvc.SelectList)ViewBag.vendor_list, "---Select---", new { @class = "form-control validinput removedisabled", @onchange = "GetVendordetails(this.value)" })
                                @Html.ValidationMessageFor(model => model.vendor_id, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6 col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.item_service_id, "Item/Service *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                            <div class="col-md-8 col-sm-8 col-xs-12">
                                @Html.DropDownList("item_service_id", (System.Web.Mvc.SelectList)ViewBag.item_type, new { @class = "form-control removedisabled ignoreOneSelect", @disabled = "disabled" })
                                @Html.ValidationMessageFor(model => model.item_service_id, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-6 col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.net_value, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                            <div class="col-md-5 col-sm-5 col-xs-12">
                                @Html.EditorFor(model => model.net_value, new { htmlAttributes = new { @class = "form-control right validinput removedisabled", @disabled = "disabled", @type = "number" } })
                                @Html.ValidationMessageFor(model => model.net_value, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-3 col-sm-3 col-xs-12">
                                @Html.DropDownList("net_currency_id", (System.Web.Mvc.SelectList)ViewBag.currency_list, new { @class = "form-control postingcurrency removedisabled", @disabled = "disabled" })
                                @Html.ValidationMessageFor(model => model.net_currency_id, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6 col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.gross_value, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                            <div class="col-md-5 col-sm-5 col-xs-12">
                                @Html.EditorFor(model => model.gross_value, new { htmlAttributes = new { @class = "form-control right validinput removedisabled", @disabled = "disabled", @type = "number" } })
                                @Html.ValidationMessageFor(model => model.gross_value, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-3 col-sm-3 col-xs-12">
                                @Html.DropDownList("gross_currency_id", (System.Web.Mvc.SelectList)ViewBag.currency_list, new { @class = "form-control removedisabled", @disabled = "disabled" })
                                @Html.ValidationMessageFor(model => model.gross_currency_id, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel panel-body" role="tabpanel" data-example-id="togglable-tabs">
                <ul id="myTab" class="nav nav-tabs bar_tabs" role="tablist">
                    <li class="active"><a data-toggle="tab" href="#sectionA">General</a></li>
                    <li><a data-toggle="tab" href="#sectionB">Line Item</a></li>
                    <li><a data-toggle="tab" href="#sectionC">Vendor</a></li>
                    <li><a data-toggle="tab" href="#sectionD">Accounting</a></li>
                    <li><a data-toggle="tab" href="#sectionE">Information</a></li>
                </ul>
                <div class="tab-content">
                    <div id="sectionA" class="tab-pane fade in active" style="margin-top:10px;">
                        <div class="row">
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.business_unit_id, "Business Unit *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.DropDownList("business_unit_id", (System.Web.Mvc.SelectList)ViewBag.business_list, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled" })
                                        @Html.ValidationMessageFor(model => model.business_unit_id, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.plant_id, "Plant *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.DropDownList("plant_id", (System.Web.Mvc.SelectList)ViewBag.plant_list, "---Select---", new { @class = "form-control validinput removedisabled selectedbycategory", @disabled = "disabled", @onchange = "GetStorageLocation(this.value)" })
                                        @Html.ValidationMessageFor(model => model.plant_id, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.freight_terms_id, "Freight Terms *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.DropDownList("freight_terms_id", (System.Web.Mvc.SelectList)ViewBag.freight_list, "---Select---", new { @class = "form-control validinput" })
                                        @Html.ValidationMessageFor(model => model.freight_terms_id, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.place_of_supply_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.DropDownList("place_of_supply_id", (System.Web.Mvc.SelectList)ViewBag.state_list, "---Select---", new { @class = "form-control validinput" })
                                        @Html.ValidationMessageFor(model => model.place_of_supply_id, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.vendor_document_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.EditorFor(model => model.vendor_document_no, new { htmlAttributes = new { @class = "form-control validinput removedisabled" } })
                                        @Html.ValidationMessageFor(model => model.vendor_document_no, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.vendor_document_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.EditorFor(model => model.vendor_document_date, new { htmlAttributes = new { @class = "form-control validinput removedisabled" } })
                                        @Html.ValidationMessageFor(model => model.vendor_document_date, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.form_id, "GRN Against Form", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.DropDownList("form_id", (System.Web.Mvc.SelectList)ViewBag.form_list, "---Select---", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.form_id, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.is_hold_payment, "Hold Payment", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.EditorFor(model => model.is_hold_payment, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.is_hold_payment, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.delivery_date, "Delivery Date ", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.EditorFor(model => model.delivery_date, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                        @Html.ValidationMessageFor(model => model.delivery_date, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.is_rcm, "RCM", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.EditorFor(model => model.is_rcm, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.is_rcm, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.grn_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.EditorFor(model => model.grn_no, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                        @Html.ValidationMessageFor(model => model.grn_no, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.grn_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.EditorFor(model => model.grn_date, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                        @Html.ValidationMessageFor(model => model.grn_date, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.grn_status_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.EditorFor(model => model.grn_status_id, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                        @Html.ValidationMessageFor(model => model.grn_status_id, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="sectionB" class="tab-pane fade" style="margin-top:10px;">
                        <div class="row">
                            <div class="col-sm-6"></div>
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        <button type="button" id="AddItem" class="btn btn-primary" style="float:right" data-toggle="modal" data-target="#myModal"><span class="glyphicon glyphicon-plus"></span>Add Item</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="table-responsive">
                                <table class="table table-responsive table-bordered table-striped" id="ContactGrid">
                                    <thead>
                                        <tr>
                                            <th hidden><label>ID</label></th>
                                            <th><label>Sr No.</label></th>
                                            <th hidden><label>Item ID</label></th>
                                            <th><label class="lbitemtext">Item</label></th>
                                            <th><label>User Description</label></th>
                                            <th><label>hsn_id</label></th>
                                            <th><label>SAC/HSN Code</label></th>
                                            <th hidden><label>Storage Location ID</label></th>
                                            <th hidden><label>Storage Location</label></th>
                                            <th class="dt_col_hide"><label>Delivery Date</label></th>
                                            <th class="dt_col_hide"><label>Quantity</label></th>
                                            <th hidden><label>UOM ID</label></th>
                                            <th class="dt_col_hide"><label>UOM</label></th>
                                            <th hidden><label id="unitpricetext">Unit Price</label></th>
                                            <th hidden><label>Discount</label></th>
                                            <th class="dt_col_hide"><label>Eff. Price</label></th>
                                            <th><label>Purchase Value</label></th>
                                            <th class="dt_col_hide"><label>Taxable Rate</label></th>
                                            <th class="dt_col_hide"><label>Taxable Value</label></th>
                                            <th hidden><label>Tax ID</label></th>
                                            <th hidden><label>Tax Code</label></th>
                                            <th hidden><label>Cost Center ID</label></th>
                                            <th hidden class="dt_col_hide"><label>Cost Center</label></th>
                                            <th hidden><label>GRN Detail ID</label></th>
                                            <th hidden><label>GRIR</label></th>
                                            <th hidden><label>Basic Value</label></th>
                                            <th class="dt_col1"><label>Action</label></th>
                                            <th class="dt_col_hide"><label>Details</label></th>
                                            <th><label>item_type_h</label></th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6 col-sm-6">
                                <input type="hidden" id="original_value" />
                                <input type="hidden" id="tds_value" />
                            </div>
                            <div class="col-lg-6 col-sm-6">
                                <div class="table-responsive">
                                    <table class="table table-responsive table-bordered table-striped" id="TaxGrid"></table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="sectionC" class="tab-pane fade" style="margin-top:10px;">
                        <div class="row">
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.billing_address, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.EditorFor(model => model.billing_address, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                        @Html.ValidationMessageFor(model => model.billing_address, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.billing_city, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.EditorFor(model => model.billing_city, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                        @Html.ValidationMessageFor(model => model.billing_city, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.billing_pincode, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.EditorFor(model => model.billing_pincode, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                        @Html.ValidationMessageFor(model => model.billing_pincode, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.country_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.DropDownList("country_id", (System.Web.Mvc.SelectList)ViewBag.country_list, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                        @Html.ValidationMessageFor(model => model.country_id, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.billing_state_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.DropDownList("billing_state_id", (System.Web.Mvc.SelectList)ViewBag.state_list, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                        @Html.ValidationMessageFor(model => model.billing_state_id, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.email_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.EditorFor(model => model.email_id, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                        @Html.ValidationMessageFor(model => model.email_id, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.gst_in, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.EditorFor(model => model.gst_in, new { htmlAttributes = new { @class = "form-control removedisabled validinput", } })
                                        @Html.ValidationMessageFor(model => model.gst_in, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.gst_vendor_type_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.DropDownList("gst_vendor_type_id", (System.Web.Mvc.SelectList)ViewBag.gst_list, "---Select---", new { @class = "form-control removedisabled validinput", })
                                        @Html.ValidationMessageFor(model => model.gst_vendor_type_id, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="sectionD" class="tab-pane fade" style="margin-top:10px;">
                        <div class="row">
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.payment_cycle_type_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.DropDownList("payment_cycle_type_id", (System.Web.Mvc.SelectList)ViewBag.payment_cycle_type_list, "---Select---", new { @class = "form-control validinput", @required = true, @onchange = "FillPaymentCycle()" })
                                        @Html.ValidationMessageFor(model => model.payment_cycle_type_id, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.payment_cycle_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.DropDownList("payment_cycle_id", (System.Web.Mvc.SelectList)ViewBag.payment_cycle_list, "---Select---", new { @class = "form-control validinput", @required = true })
                                        @Html.ValidationMessageFor(model => model.payment_cycle_id, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.payment_terms_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.DropDownList("payment_terms_id", (System.Web.Mvc.SelectList)ViewBag.payment_terms_list, "---Select---", new { @class = "form-control validinput", @required = true })
                                        @Html.ValidationMessageFor(model => model.payment_terms_id, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.tds_code_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.DropDownList("tds_code_id", (System.Web.Mvc.SelectList)ViewBag.tdslist, "---Select---", new { @class = "form-control removedisabled", @onchange = "CalculateTax();" })
                                        @Html.ValidationMessageFor(model => model.tds_code_id, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="row hidden">
                            <div class="col-lg-6 col-sm-6">
                                <div class="col-sm-4">JE Entry</div>
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    <button type="button" id="toggle" title="JE Entry" class="btn btn-primary" onclick="JE_Entry();"><span class="glyphicon glyphicon-plus"></span></button>
                                </div>
                            </div>
                        </div>
                        <div class="row hidden">
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.pan_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.pan_no, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                        @Html.ValidationMessageFor(model => model.pan_no, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ecc_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.ecc_no, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                        @Html.ValidationMessageFor(model => model.ecc_no, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row hidden">
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.vat_tin_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.vat_tin_no, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                        @Html.ValidationMessageFor(model => model.vat_tin_no, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.cst_tin_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.cst_tin_no, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                        @Html.ValidationMessageFor(model => model.cst_tin_no, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row hidden">
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.service_tax_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.service_tax_no, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                        @Html.ValidationMessageFor(model => model.service_tax_no, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-sm-6 hidden">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.gst_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.gst_no, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                        @Html.ValidationMessageFor(model => model.gst_no, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                    <div id="sectionE" class="tab-pane fade" style="margin-top:10px;">
                        <div class="row">
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.internal_remarks, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.EditorFor(model => model.internal_remarks, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.internal_remarks, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.remarks_on_doc, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.EditorFor(model => model.remarks_on_doc, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.remarks_on_doc, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.attachment, "Attachment", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        <input type="file" class="form-control" id="FileUpload" name="FileUpload" accept="application/pdf, image/*" />
                                        @Html.ValidationMessageFor(model => model.attachment, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <input type="hidden" id="productdetail" name="productdetail" />
                    <input type="hidden" id="attributedetail" name="attributedetail" />
                    <input type="hidden" id="formdetail" name="formdetail" />
                    <input type="hidden" id="deleteids" name="deleteids" />
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg12 col-sm-12">
                <div class="form-group">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <input type="submit" value="Create" class="btn btn-success" data-controller="PurchaseInvoice" id="create" onclick="TabletoJeson();" style="float:right" />
                    </div>
                </div>
            </div>
        </div>
        <!-- Modal -->
        <div class="modal fade" id="myModal" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 id="itemsdetail" class="modal-title">Detail</h4>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="form-group">
                                <label class="control-label col-md-3">
                                    Item Type <span class="required">*</span>
                                </label>
                                <div class="col-md-7">
                                    @Html.DropDownList("item_type_id", (System.Web.Mvc.SelectList)ViewBag.item_type, "--Select--", new { @class = "form-control col-md-7 col-xs-12" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="form-group">
                                <label class="control-label col-md-3" id="lbitem">
                                    Item <span class="required">*</span>
                                </label>
                                <div class="col-md-7">
                                    @Html.DropDownList("item_id", (System.Web.Mvc.SelectList)ViewBag.item_list, "---Select---", new { @class = "form-control col-md-7 col-xs-12 removedisabled", @disabled = "disabled" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="form-group">
                                <label class="control-label col-md-3" for="first-name">
                                    User Description
                                </label>
                                <div class="col-md-7">
                                    <textarea type="text" class="form-control col-md-7 col-xs-12" id="user_description"></textarea>
                                </div>
                            </div>
                        </div>
                        <br />
                        <br class="dt_col_hide" />
                        <br />
                        <div class="row">
                            <div class="form-group">
                                <label class="control-label col-md-3" for="first-name">
                                    SAC/HSN Code <span class="required">*</span>
                                </label>
                                <div class="col-md-7">
                                    @Html.DropDownList("sac_hsn_id", (System.Web.Mvc.SelectList)ViewBag.hsncodelist, "---Select---", new { @class = "form-control col-md-7 col-xs-12" })
                                </div>
                            </div>
                        </div>
                        <br class="dt_col_hide" />
                        <div class="row dt_col_hide" id="divdelivery">
                            <div class="form-group">
                                <label class="control-label col-md-3">
                                    Delivery Date <span class="required">*</span>
                                </label>
                                <div class="col-md-7">
                                    <input type="date" class="form-control col-md-7 col-xs-12" id="dte" readonly="readonly">
                                </div>
                            </div>
                        </div>
                        <br class="dt_col_hide" />
                        <div class="row dt_col_hide" id="divsloc">
                            <div class="form-group">
                                <label class="control-label col-md-3">
                                    Storage Location <span class="required">*</span>
                                </label>
                                <div class="col-md-7">
                                    @Html.DropDownList("storage_location_id", Enumerable.Empty<SelectListItem>(), "---Select---", new { @class = "form-control col-md-7 col-xs-12", @style = "width: 100%;", @disabled = "disabled" })
                                </div>
                            </div>
                        </div>
                        <br class="dt_col_hide" />
                        <div class="row dt_col_hide" id="divqty">
                            <div class="form-group">
                                <label class="control-label col-md-3" for="first-name">
                                    Quantity <span class="required">*</span>
                                </label>
                                <div class="col-md-4">
                                    <input type="number" class="form-control col-md-7 col-xs-12" id="quantity" onchange="calculation()">
                                </div>
                                <div class="col-md-3">
                                    @Html.DropDownList("uom_id", (System.Web.Mvc.SelectList)ViewBag.uom_list, "---Select---", new { @class = "form-control col-md-7 col-xs-12", @disabled = "disabled" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="form-group">
                                <label class="control-label col-md-3" for="first-name" id="uprice"></label>
                                <div class="col-md-7">
                                    <input type="number" class="form-control col-md-7 col-xs-12" id="unitprice" onchange="calculation()">
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="form-group">
                                <label class="control-label col-md-3" for="first-name">
                                    Discount (%) <span class="required"></span>
                                </label>
                                <div class="col-md-7">
                                    <input type="number" min="0" max="3" class="form-control col-md-7 col-xs-12" id="discount" onchange="calculation()">
                                </div>
                            </div>
                        </div>
                        <br class="dt_col_hide" />
                        <div class="row dt_col_hide" id="diveffprice">
                            <div class="form-group">
                                <label class="control-label col-md-3" for="first-name">
                                    Effective Unit Price <span class="required">*</span>
                                </label>
                                <div class="col-md-7">
                                    <input type="number" class="form-control col-md-7 col-xs-12" id="effectiveprice" readonly="readonly">
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="form-group">
                                <label class="control-label col-md-3" for="first-name">
                                    Purchase Value <span class="required">*</span>
                                </label>
                                <div class="col-md-7">
                                    <input type="number" class="form-control" id="salesvalue" readonly="readonly">
                                </div>
                            </div>
                        </div>
                        <br class="dt_col_hide" />
                        <div class="row dt_col_hide" id="divassrate">
                            <div class="form-group">
                                <label class="control-label col-md-3" for="first-name">
                                    Taxable Rate <span class="required"></span>
                                </label>
                                <div class="col-md-7">
                                    <input type="number" class="form-control col-md-7 col-xs-12" id="assessablerate" readonly="readonly" onchange="asscalculation()">
                                </div>
                            </div>
                        </div>
                        <br class="dt_col_hide" />
                        <div class="row dt_col_hide" id="divassvalue">
                            <div class="form-group">
                                <label class="control-label col-md-3" for="first-name">
                                    Taxable Value <span class="required">*</span>
                                </label>
                                <div class="col-md-7">
                                    <input type="number" class="form-control col-md-7 col-xs-12" readonly="readonly" id="assessablevalue">
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="form-group">
                                <label class="control-label col-md-3" for="first-name">
                                    Tax Code <span class="required">*</span>
                                </label>
                                <div class="col-md-7">
                                    @Html.DropDownList("tax_id", Enumerable.Empty<SelectListItem>(), "---Select---", new { @class = "form-control col-md-7 col-xs-12" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="form-group">
                                <label class="control-label col-md-3">
                                    Cost Center
                                </label>
                                <div class="col-md-7">
                                    @Html.DropDownList("cost_center_id", (System.Web.Mvc.SelectList)ViewBag.costCenterList, "---Select---", new { @class = "form-control col-md-7 col-xs-12" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="modal-footer">
                        <input type="hidden" id="srno" />
                        <input type="hidden" id="detailid" />
                        <input type="hidden" id="grn_detail_id" name="grn_detail_id" />
                        <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="clearmodel();">Close</button>
                        <button type="button" class="add btn btn-primary">Add Item</button>
                        <input type="hidden" id="balanceQuantity" />

                    </div>
                </div>

            </div>
        </div>
        <!--For Select GRN-->
        <div class="modal fade" id="myModal1" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content" style="align-content:center;width:900px">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Purchase Order</h4>
                    </div>
                    <div class="modal-body" style="height: 300px; overflow-y: auto;">
                        <div class="row">
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    <label class="control-label col-md-4">
                                        Vendor
                                    </label>
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.DropDownList("vendor_id1", (System.Web.Mvc.SelectList)ViewBag.vendor_list, new { @class = "form-control", @onchange = "changeItemType();" })
                                        @Html.ValidationMessageFor(model => model.vendor_id, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.item_service_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12 " })
                                        <div class="col-md-8 col-sm-8 col-xs-12">
                                            @Html.DropDownList("item_service", (System.Web.Mvc.SelectList)ViewBag.item_type, new { @class = "form-control", @onchange = "changeItemType();" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6 col-sm-6">
                                <div class="form-group">
                                    @Html.Label("Purchase Order", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12 " })
                                    <div class="col-md-8 col-sm-8 col-xs-12">
                                        @Html.DropDownList("po_id1", Enumerable.Empty<SelectListItem>(), new { @class = "form-control", @onchange = "GetGRN(this.value);" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="form-group">
                                <div class="table-responsive">
                                    <table class="table table-responsive table-bordered table-striped table-fixed" id="pogrid">
                                        <thead>
                                            <tr>
                                                <th><label>ID</label></th>
                                                <th><label>Sr. No.</label></th>
                                                <th hidden><label>Item ID</label></th>
                                                <th><label class="lbitemtext">Item</label></th>
                                                <th class="dt_col_hide"><label>Delivery Date</label></th>
                                                <th class="dt_col_hide"><label>Quantity</label></th>
                                                <th hidden><label>UOM ID</label></th>
                                                <th class="dt_col_hide"><label>UOM</label></th>
                                                <th><label>Unit Price</label></th>
                                                <th><label>Discount</label></th>
                                                <th><label>Eff. Price</label></th>
                                                <th><label>Purchase Value</label></th>
                                                <th hidden><label>Assessable Rate</label></th>
                                                <th hidden><label>Assessable Value</label></th>
                                                <th hidden><label>Tax ID</label></th>
                                                <th><label>Tax Name</label></th>
                                                <th hidden><label>GRIR</label></th>
                                                <th hidden><label>storage location id</label></th>
                                                <th hidden><label>Storage Location</label></th>
                                                <th><label>User Description</label></th>
                                                <th hidden><label>IEX</label></th>
                                                <th hidden><label>Basic Value</label></th>
                                                <th>hsn_id</th>
                                                <th>SAC/HSN Code</th>
                                                <th>with_without_service_id</th>
                                                <th><input type="checkbox" name="select_all" value="1" id="example-select-all"></th>
                                            </tr>
                                        </thead>

                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="button" class="addSALES btn btn-primary" disabled="disabled">Add</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="myModal2" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content" style="align-content:center">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">GL</h4>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="form-group">
                                <div class="table-responsive">
                                    <table class="table table-responsive table-bordered table-striped" id="CreditDebitGrid">
                                        <thead>
                                            <tr>
                                                <th><label>GL Account</label></th>
                                                <th align="right"><label>Debit</label></th>
                                                <th align="right"><label>Credit</label></th>
                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="myModalTDS" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">JE Entry Detail</h4>
                    </div>
                    <div class="modal-body">
                        <div class="table-responsive">
                            <table class="table table-responsive table-bordered table-striped" id="JEGrid">
                                <thead>
                                    <tr>
                                        <th><label>Gl Name</label></th>
                                        <th><label>Debit</label></th>
                                        <th><label>Credit</label></th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    }
}
<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/RemoveUnexpectedFile.js"></script>
    <script src="~/Scripts/requirevalidation.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {
            Get_Tax(0);
            $('#pidetail').empty();
            $('#AddItem').hide();
            $(".dt_col1").hide();
            $("#ServiceInvoiceWithoutPO").checkboxpicker();
            $("#is_hold_payment").checkboxpicker();
            $("#is_rcm").checkboxpicker();
            $('#is_rcm').prop('disabled', false);
            document.getElementById('posting_date').valueAsDate = new Date();
            document.getElementById('grndate').valueAsDate = new Date();
            var error=@Html.Raw(Json.Encode(ViewBag.error));
            if(error !="")
            {
                sweetAlert("",error,"error");
            }
            $("#cost_center_id").select2({
                placeholder: "Select Cost Center",
                allowClear: true
            });
            $("#vendor_id1").select2({
                placeholder: "Select Vendor",
                allowClear: true
            });
            $("#vendor_id").select2({
                placeholder: "Select Vendor",
                allowClear: true
            });
            $("#tax_id").select2({
                placeholder: "Select Tax",
                allowClear: true
            });
            $("#business_unit_id").select2({
                placeholder: "Select Business Unit",
                allowClear: true
            });
            $("#plant_id").select2({
                placeholder: "Select Plant",
                allowClear: true
            });
            $("#po_id1").select2({
                placeholder: "Select Purchase Order",
                allowClear: true
            });
            FillItem(2);
        });

        // Set category_id on change plant
        function GetDocumentCategory(id) {
            if (id == "") {
                id = 0;
            }
            $.ajax({
                url: '@Url.Action("GetCategoryListByPlant", "Generic")',
                type: "GET",
                dataType: "JSON",
                data: { id: 75,plant_id:id },
                success: function (id) {
                    $("#category_id").html(""); // clear before appending new list
                    $.each(id, function (i, cycle) {
                        $("#category_id").append(
                            $('<option></option>').val(cycle.document_numbring_id).html(cycle.category));
                    });
                }
            });
        }
        $("#purchaseinvoice").on("click", function (event) {
            var t = $('#pogrid').DataTable();
            $("#vendor_id1").val("").trigger("change");
            $("#po_id1").val("").trigger("change");
           $("#item_service").val(1);
            t.fnClearTable();
            $(".lbitemtext").empty();
            $(".lbitemtext").append("Item");
            $('#myModal1').modal('show');
            $('#example-select-all').attr('checked', false);
        })
        $(document).on('change', 'input[type="checkbox"]', function () {
            if ($('.check').is(':checked')) {
                $('.addSALES ').removeAttr('disabled');
            }
            else {
                $('.addSALES ').attr('disabled', true);
            }
        });
        $('#salesbutton').click(function () {
            $('.addSALES ').attr('disabled', true);
            $('#example-select-all').attr('checked', false);
        });

        $('#example-select-all').on('click', function () {
            if ($(this).hasClass('allChecked')) {
                $('input[type="checkbox"]', '#pogrid').prop('checked', false);
            } else {
                $('input[type="checkbox"]', '#pogrid').prop('checked', true);
            }
            $(this).toggleClass('allChecked');
        });

        var total = 0;
        function GetTaxDetail(taxdetail, amount, dt, tds_code_id) {
            var tds_amount = 0;
            var t=$('#TaxGrid').DataTable();
            $("#original_value").val("");
            $("#tds_value").val("");
            let _tot_count = 0;
            t.fnClearTable();
            $.ajax({
                url: "@Url.Action("GetTaxCalculation", "Generic")",
                type: "GET",
                dataType: "JSON",
                async: false,
                data: {entity:"calculatetaxforpurchaseinvoice", st: taxdetail, amt: amount, dt: dt, tds_code_id: tds_code_id },
                success: function (Payment_Cycle) {

                    $.each(Payment_Cycle, function (i, cycle) {
                        if(cycle.tax_name.includes("Round"))
                        {
                            t.fnAddData([cycle.tax_name,'<input type="number" id="round_off" name="round_off" onchange="CalculateNetTotal();" class="form-control right" />']);
                            $("#round_off").val(parseFloat(cycle.tax_value).toFixed(2));
                        }
                        else if (cycle.tax_name == "Total")
                        {
                            if (_tot_count == 0)
                            {

                                t.fnAddData([cycle.tax_name, parseFloat(cycle.tax_value).toFixed(2)]);
                                t.fnAddData(["TCS Amount", '<input type="number" id="tcs_amount" name="tcs_amount" onchange="CalculateNetTotal();" class="form-control right" />']);
                                $("#tcs_amount").val(parseFloat(0).toFixed(2));
                                t.fnAddData([cycle.tax_name, '<input type="number" id="_total1" name="_total1" onchange="CalculateNetTotal();" class="form-control right disabled" />']);
                                $('#_total1').prop("disabled", true);
                                $("#_total1").val(parseFloat(cycle.tax_value).toFixed(2));
                                total = cycle.tax_value;
                                //t.fnAddData([cycle.tax_name, parseFloat(cycle.tax_value).toFixed(2)]);
                            }
                            _tot_count = _tot_count + 1;
                        }
                        else
                        {
                            t.fnAddData([cycle.tax_name,parseFloat(cycle.tax_value).toFixed(2)]);
                        }
                        var n = cycle.tax_name.includes("TDS");
                        if(n==true)
                        {
                            tds_amount=cycle.tax_value;
                            $("#tds_value").val(tds_amount);
                        }
                        $("#gross_value").val(parseFloat(parseFloat(cycle.tax_value)).toFixed(2));
                    });
                }
            });
            $("#original_value").val(parseFloat($("#gross_value").val()) - parseFloat($("#round_off").val()) - parseFloat(tds_amount));
        }
        function CalculateNetTotal()
        {
            var tcs_amount = $("#tcs_amount").val();
            tcs_amount = tcs_amount == "" ? 0 : tcs_amount;
            $("#tcs_amount").val(parseFloat(tcs_amount).toFixed(2));
            var _total2 = parseFloat(tcs_amount) + parseFloat(total);
            $("#_total1").val(parseFloat(_total2).toFixed(2));
            var original_value = $("#original_value").val();
            var round_off=$("#round_off").val()==""?0:$("#round_off").val();
            $("#round_off").val(parseFloat(round_off).toFixed(2));
            var tds_value=$("#tds_value").val()==""?0:$("#tds_value").val();
            var total_value = parseFloat(original_value) + parseFloat(round_off) + parseFloat(tcs_amount) + parseFloat(tds_value);
            var t = $('#TaxGrid').DataTable();
            var rowCount = (t.fnGetData().length)-1;
            t.fnUpdate(['Net Total',parseFloat(total_value).toFixed(2)],rowCount);
            $("#gross_value").val(parseFloat(parseFloat(total_value)).toFixed(2));
        }
        function CalculateTax() {
            var dt = $("#posting_date").val();
            if ($("#grn_date").val() == "") {
                $("#grndate").val($("#posting_date").val());
            }

            var t = $('#ContactGrid').DataTable();
            var tds1 = $("#tds_code_id").val();
            var rowCount = t.fnGetData().length;
            var str = "";
            var str1 = "";
            var tot = 0;
            for (j = 0; j < rowCount; j++) {
                str1 = t.fnGetData(j)[19] + "~";
                str1 = str1 + t.fnGetData(j)[16] + "~";
                str1 = str1 + t.fnGetData(j)[16]+ "~";
                str1 = str1 + t.fnGetData(j)[23];
                if (j == 0) {
                    str = str1 + ",";
                }
                else {
                    str = str + str1 + ",";
                }
                tot = tot + parseFloat(t.fnGetData(j)[16]);
            }
            var tds = 0;
            if (tds1 != "")
            {
                tds = tds1;
            }
            GetTaxDetail(str.slice(0, -1), tot, dt, tds);
        }
        @*function GetGRN(poid) {

            var t = $('#pogrid').DataTable();
            t.fnClearTable();
            if (poid == "") {
                poid = 0;
            }
            var rowCount = t.fnGetData().length;
            var i = 1;
            var j=0;
            //var with_without_service_id=0;
            var item_service = $("#item_service").val();
            if (item_service == 1) {
                $.ajax({
                  //  url: '/PurchaseInvoice/GetGRNListForPI',
                    url: '@Url.Action("GetGRNListForPI", "PurchaseInvoice")',
                    type: "GET",
                    dataType: "JSON",
                    data: { id: poid },
                    success: function (poid) {
                        console.log(poid);
                        var ponew = poid[0].grn_number.split('/');
                        //if (ponew[0] == 'GRN') {
                            var po = $("#po_id1 :selected").text();
                            var splitingarry = po.split('/');
                            var split1 = splitingarry[4].split('-');
                            var grnno = "GRN/" + splitingarry[3] + "/" + split1[0];
                            grnno = grnno.trim();
                            poid = poid.filter(x => x.grn_number == grnno);
                        //}
                        //else {
                        //    var po = $("#po_id1 :selected").text();
                        //    var splitingarry = po.split('/');
                        //    var split1 = splitingarry[2].split('-');
                        //    //var grnno = "GRN/" + splitingarry[3] + "/" + split1[0];
                        //    var grnno = "WO/" + splitingarry[1] + "/" + split1[0].trim();
                        //    grnno = grnno.trim();
                        //    poid = poid.filter(x => x.grn_number == grnno);
                        //}
                        $.each(poid, function (key, cycle) {
                            if ($("#po_id1").val() == 23) {
                                var g = $("#po_id1 option:selected").text().split("-");
                                for (i = 0; i < g.length; i++) {
                                    const match = g.find(element => {
                                        if (element.includes("P2S")) {
                                            var p = element
                                            $('#grn_no').val(grnno)
                                            $('#grn_date').val(cycle.grn_date);
                                        }
                                    });
                                }
                            }
                            else {
                                $('#grn_no').val(grnno);
                                $('#grn_date').val(cycle.grn_date);
                            }
                            //If grn_date is getting null then showing error here
                            if (cycle.grn_date != null) {
                                document.getElementById('grndate').valueAsDate = new Date(cycle.grn_date.split('-')[2] + "-" + cycle.grn_date.split('-')[1] + "-" + cycle.grn_date.split('-')[0]);
                            }
                            var month = new Date(cycle.delivery_date).getMonth() + 1;
                            if (month < 10) {
                                month = '0' + month;
                            }
                            var day = new Date(cycle.delivery_date).getDate();
                            if (day < 10) {
                                day = '0' + day;
                            }
                            var d = new Date(cycle.delivery_date).getFullYear() + "-" + month + "-" + day;
                            t.fnAddData([cycle.grn_detail_id, i, cycle.item_id, cycle.item_name, d, parseFloat(cycle.quantity).toFixed(2), cycle.uom_id, cycle.uom_name, '<input type="hidden" value="' + i + '" id="txtentity' + i + '"><input type="number" id="txt' + i + '" class="form-control right txtxtxt" onchange="setsumbalance(' + i + ')" />',
                                parseFloat(cycle.discount).toFixed(2), parseFloat(cycle.eff_unit_price).toFixed(2), parseFloat(cycle.purchase_value).toFixed(2), parseFloat(cycle.eff_unit_price).toFixed(2), parseFloat(cycle.purchase_value).toFixed(2), cycle.tax_id, cycle.tax_name,
                                cycle.grir, cycle.storage_location_id, cycle.storage_location_name, cycle.user_description, cycle.iex, cycle.purchase_value,'','<select class="form-control hsn" data-index='+(i-1)+' id="hsn_id'+i+'"></select>',cycle.with_without_service_id, '']);
                            $("#txt" + i).val(parseFloat(cycle.unit_price).toFixed(2))



                            if(cycle.item_type_id!=2)
                            {
                                var item_id =cycle.item_id;
                                if(item_id!=''){
                                    try{
                                        $.ajax({
                                            url:'@Url.Action("Get_hsn_saclist", "Generic")',
                                            data:{id:item_id},
                                            method:'get',
                                            async:false,
                                            success:function(hsn){
                                                $("#hsn_id" + i).append(
                                                  $('<option></option>').val(0).html('--Select--'));
                                                $.each(hsn,function(k,v){
                                                    $("#hsn_id" + i).append(
                                                    $('<option></option>').val(v.id).html(v.code));
                                                });
                                            },
                                            error: function (xhr) {
                                                console.log(xhr.message);
                                            }
                                        });
                                    }
                                    catch(msg){msg.message}
                                }
                            }
                            else
                                {
                                var item_id =0;
                                item_id =cycle.item_type_id;
                                if(item_id!=''){
                                    try{
                                        $.ajax({
                                            url:'@Url.Action("Get_hsn_sac", "Generic")',
                                            data:{id:item_id},
                                            method:'get',
                                            async:false,
                                            success:function(hsn){
                                                $("#hsn_id" + i).append(
                                                  $('<option></option>').val(0).html('--Select--'));
                                                $.each(hsn,function(k,v){
                                                    $("#hsn_id" + i).append(
                                                    $('<option></option>').val(v.id).html(v.code));
                                                });
                                            },
                                            error: function (xhr) {
                                                console.log(xhr.message);
                                            }
                                        });
                                    }
                                    catch(msg){msg.message}
                                }
                                }


                            $("#hsn_id" + i).val(cycle.hsn_id);
                            t.fnUpdate(cycle.hsn_id,j,22);


                            if(cycle.delivery_type_id==3)
                            {
                                document.getElementById("txt" + i).disabled = true;
                            }
                            else
                            {
                                document.getElementById("txt" + i).disabled = false;
                            }
                            if (cycle.with_without_service_id == 2) {
                                $('.dt_col_hide').hide();
                            }
                            else {
                                $('.dt_col_hide').show();
                            }
                            i = i + 1;
                            j = j+1;
                        });

                    }
                });
            }
            else {
                $.ajax({
                   // url: '/PurchaseInvoice/GetPOList',
                    url: '@Url.Action("GetPOList", "PurchaseInvoice")',
                    type: "GET",
                    dataType: "JSON",
                    data: { id: poid },
                    success: function (poid) {
                        var r =0;
                        $.each(poid, function (key, cycle) {
                            t.fnAddData([cycle.po_detail_id, i, cycle.item_id, cycle.item_name, "", cycle.quantity, cycle.uom_id, cycle.uom_name, parseFloat(cycle.unit_price).toFixed(2),
                                  parseFloat(cycle.discount).toFixed(2), parseFloat(cycle.eff_unit_price).toFixed(2), parseFloat(cycle.purchase_value).toFixed(2), parseFloat(cycle.assesable_rate).toFixed(2), parseFloat(cycle.assesable_value).toFixed(2), cycle.tax_code_id, cycle.tax_name,
                                0, 0, '', '', 0, 0, '', '<select class="form-control hsn" data-index=' + (i - 1) + ' id="hsn_id' + i + '"></select>', 0,'']);
                            $("#txt" + i).val(parseFloat(cycle.unit_price).toFixed(2));


                            var item_id =0;
                            item_id =cycle.item_type_id;
                            if(item_id!=''){
                                try{
                                    $.ajax({
                                        url:'@Url.Action("Get_hsn_sac", "Generic")',
                                        data:{id:item_id},
                                        method:'get',
                                        async:false,
                                        success:function(hsn){
                                            $("#hsn_id" + i).append(
                                              $('<option></option>').val(0).html('--Select--'));
                                            $.each(hsn,function(k,v){
                                                $("#hsn_id" + i).append(
                                                $('<option></option>').val(v.id).html(v.code));
                                            });
                                        },
                                        error: function (xhr) {
                                            console.log(xhr.message);
                                        }
                                    });
                                }
                                catch(msg){msg.message}
                            }
                            $("#hsn_id" + i).val(cycle.hsn_id);
                            t.fnUpdate(cycle.hsn_id,r,22);




                            if ($('#item_service').val() == 2) {
                                $('.dt_col_hide').hide();
                            }
                            else {
                                $('.dt_col_hide').show();
                            }
                            i = i + 1;
                            r=r+1;
                        });

                    }
                });
            }

        }*@
         function GetGRN(poid) {

     var t = $('#pogrid').DataTable();
     t.fnClearTable();
     if (poid == "") {
         poid = 0;
     }
     var rowCount = t.fnGetData().length;
     var i = 1;
     var j=0;
     //var with_without_service_id=0;
     var item_service = $("#item_service").val();
     //if (item_service == 1) {
         $.ajax({
           //  url: '/PurchaseInvoice/GetGRNListForPI',
             url: '@Url.Action("GetGRNListForPI", "PurchaseInvoice")',
             type: "GET",
             dataType: "JSON",
             data: { id: poid },
             success: function (poid) {
                 console.log(poid);
                 //var po = $("#po_id1 :selected").text();
                 //var splitingarry = po.split('/');
                 //var split1 = splitingarry[4].split('-');
                 //var grnno = "GRN/" + splitingarry[3] + "/" + split1[0];
                 //var po=$("#po_id1 :selected").val();
                 //grnno = grnno.trim();
                 var po = $("#po_id1 :selected").val();
                 var poid = poid.filter(x => x.tds_code_id == po);
                 if (poid != null || poid != undefined) {
                     var grnno = poid[0].grn_number;
                     if (item_service != 2) {
                         poid = poid.filter(x => x.grn_number == grnno);
                     }
                 }
                 //var grnno = poid[0].grnno;
                 $.each(poid, function (key, cycle) {
                     if ($("#po_id1").val() == 23) {
                         var g = $("#po_id1 option:selected").text().split("-");
                         for (i = 0; i < g.length; i++) {
                             const match = g.find(element => {
                                 if (element.includes("P2S")) {
                                     var p = element
                                     $('#grn_no').val(grnno)
                                     $('#grn_date').val(cycle.grn_date);
                                 }
                             });
                         }
                     }
                     else {
                         $('#grn_no').val(grnno);
                         $('#grn_date').val(cycle.grn_date);
                     }
                     //If grn_date is getting null then showing error here
                     if (cycle.grn_date != null) {
                         document.getElementById('grndate').valueAsDate = new Date(cycle.grn_date.split('-')[2] + "-" + cycle.grn_date.split('-')[1] + "-" + cycle.grn_date.split('-')[0]);
                     }
                     var month = new Date(cycle.delivery_date).getMonth() + 1;
                     if (month < 10) {
                         month = '0' + month;
                     }
                     var day = new Date(cycle.delivery_date).getDate();
                     if (day < 10) {
                         day = '0' + day;
                     }
                     var d = new Date(cycle.delivery_date).getFullYear() + "-" + month + "-" + day;
                     t.fnAddData([cycle.grn_detail_id, i, cycle.item_id, cycle.item_name, d, parseFloat(cycle.quantity).toFixed(2), cycle.uom_id, cycle.uom_name, '<input type="hidden" value="' + i + '" id="txtentity' + i + '"><input type="number" id="txt' + i + '" class="form-control right txtxtxt" onchange="setsumbalance(' + i + ')" />',
                         parseFloat(cycle.discount).toFixed(2), parseFloat(cycle.eff_unit_price).toFixed(2), parseFloat(cycle.purchase_value).toFixed(2), parseFloat(cycle.eff_unit_price).toFixed(2), parseFloat(cycle.purchase_value).toFixed(2), cycle.tax_id, cycle.tax_name,
                         cycle.grir, cycle.storage_location_id, cycle.storage_location_name, cycle.user_description, cycle.iex, cycle.purchase_value,'','<select class="form-control hsn" data-index='+(i-1)+' id="hsn_id'+i+'"></select>',cycle.with_without_service_id, '']);
                     $("#txt" + i).val(parseFloat(cycle.unit_price).toFixed(2))



                     if(cycle.item_type_id!=2)
                     {
                         var item_id =cycle.item_id;
                         if(item_id!=''){
                             try{
                                 $.ajax({
                                     url:'@Url.Action("Get_hsn_saclist", "Generic")',
                                     data:{id:item_id},
                                     method:'get',
                                     async:false,
                                     success:function(hsn){
                                         $("#hsn_id" + i).append(
                                           $('<option></option>').val(0).html('--Select--'));
                                         $.each(hsn,function(k,v){
                                             $("#hsn_id" + i).append(
                                             $('<option></option>').val(v.id).html(v.code));
                                         });
                                     },
                                     error: function (xhr) {
                                         console.log(xhr.message);
                                     }
                                 });
                             }
                             catch(msg){msg.message}
                         }
                     }
                     else
                         {
                         var item_id =0;
                         item_id =cycle.item_type_id;
                         if(item_id!=''){
                             try{
                                 $.ajax({
                                     url:'@Url.Action("Get_hsn_sac", "Generic")',
                                     data:{id:item_id},
                                     method:'get',
                                     async:false,
                                     success:function(hsn){
                                         $("#hsn_id" + i).append(
                                           $('<option></option>').val(0).html('--Select--'));
                                         $.each(hsn,function(k,v){
                                             $("#hsn_id" + i).append(
                                             $('<option></option>').val(v.id).html(v.code));
                                         });
                                     },
                                     error: function (xhr) {
                                         console.log(xhr.message);
                                     }
                                 });
                             }
                             catch(msg){msg.message}
                         }
                         }


                     $("#hsn_id" + i).val(cycle.hsn_id);
                     t.fnUpdate(cycle.hsn_id,j,22);


                     if(cycle.delivery_type_id==3)
                     {
                         document.getElementById("txt" + i).disabled = true;
                     }
                     else
                     {
                         document.getElementById("txt" + i).disabled = false;
                     }
                     if (cycle.with_without_service_id == 2) {
                         $('.dt_col_hide').hide();
                     }
                     else {
                         $('.dt_col_hide').show();
                     }
                     i = i + 1;
                     j = j+1;
                 });

             }
         });
     @*}
     else {
         $.ajax({
            // url: '/PurchaseInvoice/GetPOList',
             url: '@Url.Action("GetPOList", "PurchaseInvoice")',
             type: "GET",
             dataType: "JSON",
             data: { id: poid },
             success: function (poid) {
                 var r =0;
                 $.each(poid, function (key, cycle) {
                     t.fnAddData([cycle.po_detail_id, i, cycle.item_id, cycle.item_name, "", cycle.quantity, cycle.uom_id, cycle.uom_name, parseFloat(cycle.unit_price).toFixed(2),
                           parseFloat(cycle.discount).toFixed(2), parseFloat(cycle.eff_unit_price).toFixed(2), parseFloat(cycle.purchase_value).toFixed(2), parseFloat(cycle.assesable_rate).toFixed(2), parseFloat(cycle.assesable_value).toFixed(2), cycle.tax_code_id, cycle.tax_name,
                          0, 0, '', '', 0, 0,'','<select class="form-control hsn" data-index='+(i-1)+' id="hsn_id'+i+'"></select>', '']);
                     $("#txt" + i).val(parseFloat(cycle.unit_price).toFixed(2));


                     var item_id =0;
                     item_id =cycle.item_type_id;
                     if(item_id!=''){
                         try{
                             $.ajax({
                                 url:'@Url.Action("Get_hsn_sac", "Generic")',
                                 data:{id:item_id},
                                 method:'get',
                                 async:false,
                                 success:function(hsn){
                                     $("#hsn_id" + i).append(
                                       $('<option></option>').val(0).html('--Select--'));
                                     $.each(hsn,function(k,v){
                                         $("#hsn_id" + i).append(
                                         $('<option></option>').val(v.id).html(v.code));
                                     });
                                 },
                                 error: function (xhr) {
                                     console.log(xhr.message);
                                 }
                             });
                         }
                         catch(msg){msg.message}
                     }
                     $("#hsn_id" + i).val(cycle.hsn_id);
                     t.fnUpdate(cycle.hsn_id,r,22);




                     if ($('#item_service').val() == 2) {
                         $('.dt_col_hide').hide();
                     }
                     else {
                         $('.dt_col_hide').show();
                     }
                     i = i + 1;
                     r=r+1;
                 });

             }
         });
     }*@

 }
        function changeItemType() {
            var vendor_id = $("#vendor_id1").val();
            var id = $("#item_service").val();
            $("#po_id1").html(""); // clear before appending new list
            $("#po_id1").val("").trigger("change");
            //if (id == 2) {
            //    //$('.dt_col_hide').hide();
            //   // $(".lbitemtext").empty();
            //    $(".lbitemtext").append("GL");
            //}
            //else {
            $('.dt_col_hide').show();
            //    $(".lbitemtext").empty();
            //    $(".lbitemtext").append("Item");
            //}
            if (id == "") {
                id = 0;
            }
           // $("#item_service").val(1);
            var t = $('#pogrid').DataTable()
            t.fnClearTable();
            if (vendor_id == "") {
                vendor_id = 0;
            }
            if (vendor_id == null) {
                vendor_id = 0;
            }

            $.ajax({
                url: "@Url.Action("GetPOByItemOrService", "Generic")",
                type: "GET",
                dataType: "JSON",
                data: { id: id, vendor_id: vendor_id },
                success: function (po) {
                    $("#po_id1").html(""); // clear before appending new list
                    $("#po_id1").append(
                       $('<option></option>').val("").html(""));
                    $.each(po, function (i, soid) {
                        $("#po_id1").append(
                        $('<option></option>').val(soid.po_id).html(soid.po_no));
                    });

                }
            });
        }
        $('#ContactGrid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            aoColumns: [
                     { sname: "a", bVisible: false },
                     { sname: "b" },
                     { sname: "c", bVisible: false },
                     { sname: "d", },
                     { sname: "e" },
                     { sname: "hsn_id",bVisible: false,  },
                     { sname: "hsn", sWidth: "12%" },
                     { sname: "f", bVisible: false,},//, sClass: "dt_col_hide1"
                     { sname: "g", bVisible: false },//, sClass: "dt_col_hide1"
                     { sname: "h", sClass: "dt_col_hide" },//1"
                     { sname: "i", sClass: "dt_col_hide right", },//, sClass: "dt_col_hide1"
                     { sname: "j", bVisible: false },//, sClass: "dt_col_hide1"
                     { sname: "k", sClass: "dt_col_hide" },//, sClass: "dt_col_hide1"
                     { sname: "l", sClass: "right" , bVisible: false},
                     { sname: "m", bVisible: false, sClass: "right" },
                     { sname: "n", bVisible: true, sClass: "right dt_col_hide" },// sClass: "dt_col_hide1"
                     { sname: "o", bVisible: true, sClass: "right" },
                     { sname: "P", sClass: "dt_col_hide right" },//, sClass: "dt_col_hide1"
                     { sname: "q", sClass: "dt_col_hide right" },//, sClass: "dt_col_hide1"
                     { sname: "r", bVisible: false },
                     { sname: "s", bVisible: false },
                     { sname: "t", bVisible: false },
                     { sname: "u", bVisible: false,sClass: "dt_col_hide" },
                     { sname: "v", bVisible: false },//, sClass: "dt_col_hide1"
                     { sname: "w", bVisible: false },//, sClass: "dt_col_hide1"
                     { sname: "x", bVisible: false, sClass: "right" },//, sClass: "dt_col_hide1"
                     {
                         sname: "y", sWidth: "8%",sClass:"dt_col1",
                         bSortable: false,
                         mRender: function (data, type, full) {
                             return '<img class="edit" src="../images/writing_file.png" height="20px" width="25px" alt="Edit" /><img class="delete" src="../images/remove.png" height="20px" width="25px" alt="Delete" />';
                         }
                     },
                       {
                           sname: "z", sWidth: "8%", sClass: "dt_col_hide",
                           bSortable: false,
                           mRender: function (data, type, full) {
                               return '<img class="details" src="../images/Detail.png" height="20px" width="25px" alt="Detail" />';
                           }
                       },
                       { sname: "item_type_h", bVisible: false },
            ]

        });
        function setsumbalance(cc) {
            var k = cc;
            cc = cc - 1;
            var t = $('#pogrid').DataTable()
            var rowCount = t.fnGetData().length;
            for (var i = 0; i < rowCount; i++) {
                if (i == cc) {
                    var amt = $('#txt' + k).val() == "" ? 0 : $('#txt' + k).val();
                    var eff_price = (parseFloat(amt) - (parseFloat(amt) * parseFloat(t.fnGetData(i)[9]) / 100));
                    t.fnUpdate(parseFloat(eff_price).toFixed(2),i,10)
                    t.fnUpdate(parseFloat(parseFloat(eff_price) * parseFloat(t.fnGetData(i)[5])).toFixed(2),i,11)
                    //t.fnUpdate([t.fnGetData(i)[0], t.fnGetData(i)[1], t.fnGetData(i)[2], t.fnGetData(i)[3], t.fnGetData(i)[4], t.fnGetData(i)[5], t.fnGetData(i)[6], t.fnGetData(i)[7], '',
                    //           t.fnGetData(i)[9], parseFloat(eff_price).toFixed(2), parseFloat(parseFloat(eff_price) * parseFloat(t.fnGetData(i)[5])).toFixed(2), t.fnGetData(i)[12], t.fnGetData(i)[13], t.fnGetData(i)[14], t.fnGetData(i)[15],
                    //           t.fnGetData(i)[16], t.fnGetData(i)[17], t.fnGetData(i)[18], t.fnGetData(i)[19], t.fnGetData(i)[20], t.fnGetData(i)[21], ''], i);
                    $('#txt' + k).val(parseFloat(amt).toFixed(2));
                }
            }
        }
        $('#pogrid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            aoColumns: [
                     { sname: "a", bVisible: false },
                     { sname: "b", bVisible: true },
                     { sname: "c", bVisible: false },
                     { sname: "d" },
                     { sname: "e", sClass: "dt_col_hide" },
                     { sname: "f", sClass: "dt_col_hide right" },
                     { sname: "g", bVisible: false },
                     { sname: "h", sClass: "dt_col_hide"},
                     {
                         sname: "i", mRender: function (data, type, row) {
                             return '<input type="hidden" value="' + row[1] + '" id="txtentity' + row[1] + '"><input type="number"  id=txt' + row[1] + ' onchange="setsumbalance(' + row[1] + ')"  class="form-control right txtxtxt">';
                         }
                     },
                     { sname: "j", bVisible: true, sClass: "right" },
                     { sname: "k", bVisible: true, sClass: "right" },
                     { sname: "l", sClass: "right" },
                     { sname: "m", bVisible: false, sClass: "right" },
                     { sname: "n", bVisible: false, sClass: "right" },
                     { sname: "o", bVisible: false },
                     { sname: "p"},
                     { sname: "q", bVisible: false },
                     { sname: "r", bVisible: false },
                     { sname: "s", bVisible: false },
                     { sname: "t", bVisible: true },
                     { sname: "u", bVisible: false },
                     { sname: "v", bVisible: false },
                     { sname: "hsn_id", bVisible: false, },
                     { sname: "hsn", bVisible: true ,sWidth:"25%"},
                     { sname: "with_without_service_id", bVisible: false ,sWidth:"25%"},
                     {
                         sname: "w", sWidth: "2%",
                         mRender: function (data, type, row) {
                             return '<input type="checkbox" class="check" name="id[]" value="' + $('<div/>').text(data).html() + '" id=chk' + row[1] + '>';
                         }
                     }

            ]
        });
        var checkedarray = [];
        $(".addSALES").on("click", function (event) {
            $("#po_id").html(""); // clear before appending new list
            $("#po_id").append($('<option></option>').val(0).html("---Select---"));
            $("#po_id").append(
                       $('<option></option>').val($("#po_id1").val()).html($("#po_id1 option:selected").text()));
            $("#item_service_id").val($("#item_service").val());
            $("#po_id").val($("#po_id1").val());
            var tt = $("#po_id1").val();
            var s = $('#pogrid').DataTable()
            var t = $('#ContactGrid').DataTable()
            var tds = 0;
            t.fnClearTable();
            var plant;
            $.ajax({
                type: 'GET',
                url: "@Url.Action("GetPOForGRN", "GRN")",
                async:false,
                data: { id: tt },
                success: function (soid) {
                    $("#business_unit_id").val(soid.business_unit_id).trigger("change");
                    $("#freight_terms_id").val(soid.freight_terms_id);
                    $("#plant_id").val(soid.plant_id).trigger("change");
                   // $.filter_category('category_id',$("#plant_id").val(),75);
                    $("#vendor_id").val(soid.vendor_id).trigger("change");
                    $("#vendor_document_no").val(soid.vendor_quotation_no);
                    $('#gst_vendor_type_id').val(soid.gst_vendor_type_id);
                    $('#gst_in').val(soid.gst_no);
                    $('#place_of_supply_id').val(soid.place_of_supply_id);
                    var d3='';
                    if(soid.vendor_quotation_date!=null)
                    {
                        d3 = soid.vendor_quotation_date;
                        var month = new Date(d3).getMonth() + 1;
                        if (month < 10) {
                            month = '0' + month;
                        }
                        var date = new Date(d3).getDate();
                        if (date < 10) {
                            date = '0' + date;
                        }
                        var d3 = new Date(d3).getFullYear() + "-" + month + "-" + date;

                    }
                    $("#vendor_document_date").val(d3);
                    $("#billing_address").val(soid.billing_address);
                    $("#billing_city").val(soid.billing_city);
                    $("#country_id").val(soid.country_id);
                    $("#billing_state_id").val(soid.billing_state_id);
                    $("#email_id").val(soid.email_id);
                    $("#billing_pincode").val(soid.billing_pin_code);
                    $("#gross_currency_id").val(soid.gross_value_currency_id);
                    $("#net_currency_id").val(soid.net_value_currency_id);
                    $("#payment_cycle_type_id").val(soid.payment_cycle_type_id);
                    $("#payment_cycle_id").val(soid.payment_cycle_id);
                    $("#payment_terms_id").val(soid.payment_terms_id).trigger("change");
                    $("#pan_no").val(soid.pan_no);
                    $("#gst_no").val(soid.gst_no);
                    $("#vat_tin_no").val(soid.vat_tin_no);
                    $("#ecc_no").val(soid.ecc_no);
                    $("#service_tax_no").val(soid.service_tax_no);
                    $("#cst_tin_no").val(soid.cst_tin_no);
                    $("#form_id").val(soid.FORM_ID);
                    $("#doc_currency_id").val(soid.doc_currency_id);
                    $("#internal_remarks").val(soid.internal_remarks);
                    $("#category_id").removeClass("PRCM");
                    if(soid.is_rcm==true)
                    {
                        $('#is_rcm').prop('checked', true);
                        $("#category_id").addClass("PRCM");
                    }
                    if (soid.tds_id == 0)
                    {
                        $("#tds_code_id").val("");
                    }
                    else
                    {
                        $("#tds_code_id").val(soid.tds_id);
                    }
                    tds = soid.tds_id;
                    $("#remarks_on_doc").val(soid.remarks_on_document);
                    if( soid.delivery_date!=null)
                    {
                        var d1 = soid.delivery_date;
                        var month = new Date(d1).getMonth() + 1;
                        if (month < 10) {
                            month = '0' + month;
                        }
                        var date = new Date(d1).getDate();
                        if (date < 10) {
                            date = '0' + date;
                        }
                        var d1 = new Date(d1).getFullYear() + "-" + month + "-" + date;
                        $("#delivery_date").val(d1);
                    }
                    $("#delivery_date").val('');

                },
                error: function (emp) {
                }
            });
            var i = 0;
            var checkGreater = 0;
            var checkEmpty = 0;
            var checkNegative = 0;
            var checkFlagInc = 0;
            var FlagBatch = 0;
            for (var k = 0; k <= checkedarray.length - 1; k++) {
                i = checkedarray[k];
                var txt = $('#txt' + i).val();
                var AddBatch = $('#batch' + i).val();
                var hsn = s.fnGetData((i-1))[22];
                if ($('#chk' + i).is(':checked'))
                {
                    if (txt == '') {
                        checkEmpty = checkEmpty + 1;
                    }
                    if (parseFloat(txt) <= 0) {
                        checkNegative = checkNegative + 1;
                    }

                }
                if (checkEmpty > 0)
                {
                    swal("", "Unit Price cannot be left blank!", "error");
                    return false;
                }
                if (checkNegative > 0)
                {
                    swal("", "Unit Price should be greater than zero!", "error");
                    return false;
                }
                if (hsn == "") {
                    swal("", "SAC/HSN Code is required!", "error");
                    return isFalse;
                }
                if (hsn == "0") {
                    swal("", "SAC/HSN Code is required!", "error");
                    return isFalse;
                }
            }
            for (var k = 0; k <= checkedarray.length - 1; k++) {
                i = checkedarray[k];
                var txt = $('#txt' + i).val();
                var hsn = $('#hsn_id'+i+' :selected').text();
                i = i - 1;
                try {
                    var d1 = s.fnGetData(i)[4];
                    if (d1 != "")
                    {
                        var month = new Date(d1).getMonth() + 1;
                        if (month < 10) {
                            month = '0' + month;
                        }
                        var date = new Date(d1).getDate();
                        if (date < 10) {
                            date = '0' + date;
                        }
                        d1 = new Date(d1).getFullYear() + "-" + month + "-" + date;
                    }
                    else
                    {
                        d1 = "";
                    }
                    var hsn_id = s.fnGetData(i)[22];
                    var rowCount = t.fnGetData().length;
                    t.fnAddData([0,
                        rowCount + 1,
                        s.fnGetData(i)[2],
                        s.fnGetData(i)[3],
                        s.fnGetData(i)[19],
                        hsn_id,
                        hsn,
                        s.fnGetData(i)[17],
                        s.fnGetData(i)[18],
                        d1,
                        parseFloat(s.fnGetData(i)[5]).toFixed(2),
                        s.fnGetData(i)[6],
                        s.fnGetData(i)[7],
                        parseFloat(txt).toFixed(2),
                        parseFloat(s.fnGetData(i)[9]).toFixed(2),
                        parseFloat(s.fnGetData(i)[10]).toFixed(2),
                        parseFloat(s.fnGetData(i)[11]).toFixed(2),
                        parseFloat(s.fnGetData(i)[10]).toFixed(2),
                        parseFloat(s.fnGetData(i)[11]).toFixed(2)
                        , s.fnGetData(i)[14],
                        s.fnGetData(i)[15],
                        0,
                        '',
                        s.fnGetData(i)[0],
                        s.fnGetData(i)[21],
                        s.fnGetData(i)[21],
                        '',
                        '',
                        ''
                    ]);
                    $(".dt_col1").hide();
                    if (s.fnGetData((i))[24] == 2) {
                        $('.dt_col_hide').hide();
                    }
                    else {
                        $('.dt_col_hide').show();
                    }
                }
                catch (err) {
                    checkedarray.length = 0;
                    alert(err.message);
                }
            }
            if (checkGreater < 1) {
                if (checkEmpty < 1) {
                    if (checkFlagInc < 1) {
                        $('#myModal1').modal('hide');
                    }
                }
            }
            i = i + 1;
            getnetTotal();
            CalculateTax();

            checkedarray.length = 0;
            var vendor_id =  $("#vendor_id").val();
            var plant_id = $("#plant_id").val();
            if(plant_id!="")
            {
                GetDocumentCategory(plant_id);
            }
        });
        function getnetTotal() {
            var t = $('#ContactGrid').DataTable();
            var rowCount = t.fnGetData().length;
            var total = 0;
            for (i = 0; i < rowCount; i++) {
                total = total + parseFloat(t.fnGetData(i)[16]);
            }
            $("#net_value").val(parseFloat(total).toFixed(2));
            $("#gross_value").val(parseFloat(total).toFixed(2));
        }
        function calculation() {
            var unit_price = 0;
            var discount = 0;
            var tot = 0;
            if($("#unitprice").val()!="")
            {
                unit_price = $("#unitprice").val();
            }
            if ($("#discount").val() != "") {
                discount = $("#discount").val();
            }
            tot = parseFloat(unit_price) - (parseFloat(unit_price) * parseFloat(discount)/100)
            $("#salesvalue").val(parseFloat(tot).toFixed(2));
        }
        $('#CreditDebitGrid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            aoColumns: [
                     { sname: "a" },
                     { sname: "b" ,sClass:"right"},
                     { sname: "c",sClass:"right" }
            ]
        });
        $('#ContactGrid').on('click', '.details', function () {
            $('#myModal2').modal('show');
            var t = $('#ContactGrid').DataTable();
            var id = $(this).parent('td').parent('tr').index();
            var str3 = "";
            str3 = t.fnGetData(id)[2] + '~' + t.fnGetData(id)[19] + '~' + t.fnGetData(id)[16] + '~' + t.fnGetData(id)[18] + '~' + t.fnGetData(id)[24] + '~' + t.fnGetData(id)[25];
            GetCreditDebit(str3, $("#posting_date").val());
        });
        function GetCreditDebit(item_sales_gl, posting_date) {
            var c = $('#CreditDebitGrid').DataTable();
            var tds = $('#tds_code_id').val();
            var tds_code_id = 0;
            if (tds != "") {
                tds_code_id = tds;
            }
            $.ajax({
                url: "@Url.Action("GetCreditDebit", "Generic")",
                type: "GET",
                dataType: "JSON",
                async: false,
                data: { entity: 'calcultetaxforpi', customer_id: $("#vendor_id").val(), total_value: 0, basic_value: 0, item_sales_gl: item_sales_gl, tds_code_id: tds_code_id, posting_date: posting_date,round_off:0 },
                success: function (value) {
                    c.fnClearTable();
                    $.each(value, function (i, cycle) {
                        c.fnAddData([cycle.gl_ledger_name, parseFloat(cycle.debit).toFixed(2), parseFloat(cycle.credit).toFixed(2)]);
                    });
                }
            });
        }
        function FillItem(id) {
            if (id == "") {
                id = 0;
            }
            else {
                id = id;
            }
            $.ajax({
                url: "@Url.Action("GetItemOrGL", "Generic")",
                type: "GET",
                dataType: "JSON",
                async: false,
                data: { id: id },
                success: function (item) {
                    $("#item_id").html("");
                    $("#item_id").append($('<option></option>').val("").html("---Select---"));
                    if (id == 1) {
                        $.each(item, function (i, cycle) {
                            $("#item_id").append(
                                $('<option></option>').val(cycle.ITEM_ID).html(cycle.ITEM_NAME));
                        });
                    }
                    else {
                        $.each(item, function (i, cycle) {
                            $("#item_id").append(
                                $('<option></option>').val(cycle.gl_ledger_id).html(cycle.gl_ledger_name));
                        });
                    }

                }
            });
        }

          function JE_Entry() {
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            var str2 = "";
            var str3 = "";
            var tot = 0;
            var tds_code_id = 0;
            var round_off = $("#round_off").val();
            if (round_off == "") {
                round_off = 0;
            }
            if ($("#tds_code_id").val() != "") {
                tds_code_id = $("#tds_code_id").val();
            }
            for (j = 0; j < rowCount; j++) {
                str2 = t.fnGetData(j)[2] + "~";
                str2 = str2 + t.fnGetData(j)[15] + "~";
                str2 = str2 + t.fnGetData(j)[14] + "~";
                str2 = str2 + t.fnGetData(j)[12] + "~";
                str2 = str2 + $("#plant_id").val() + "~";
                str2 = str2 + t.fnGetData(j)[6];
                if (j == 0) {
                    str3 = str2 + ",";
                }
                else {
                    str3 = str3 + str2 + ",";
                }
                tot = tot + parseFloat(t.fnGetData(j)[12]);
            }
            if (str3 != "") {
                GetJE_Entry($("#buyer_id").val(), $("#sal_gross_value").val(), tot, str3.slice(0, -1), tds_code_id, $("#si_date").val(), round_off)
            }
            $('#myModalTDS').modal('show');
        }
        function GetJE_Entry(customer_id, total_value, basic_value, item_sales_gl, tds_code_id, posting_date,round_off) {
            var c = $('#JEGrid').DataTable();
            $.ajax({
                url: '@Url.Action("GetCreditDebit", "Generic")',
                type: "GET",
                dataType: "JSON",
                async: false,
                data: { entity: 'calculate',customer_id: customer_id, total_value: total_value, basic_value: basic_value, item_sales_gl: item_sales_gl, tds_code_id: tds_code_id, posting_date: posting_date,round_off:round_off },
                success: function (value) {
                    c.fnClearTable();
                    $.each(value, function (i, cycle) {
                        c.fnAddData([cycle.gl_ledger_name, cycle.debit==null?"":parseFloat(cycle.debit).toFixed(2), cycle.credit==null?"":parseFloat(cycle.credit).toFixed(2)]);
                    });
                }
            });
        }
        $('#JEGrid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            aoColumns: [
                { sname: "a" },
                { sname: "b", "sClass": "right" },
                { sname: "c", "sClass": "right" }
            ]

        });

        function TabletoJeson() {

            //$("#create").prop("disabled", "true");
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            var str;
            var str1;
            var str2;
            var str3;
            $('#pidetail').empty();
            for (i = 0; i < rowCount; i++) {
                $("#pidetail").append('<input type="hidden" id="items' + i + '" name="items" value='+t.fnGetData(i)[2]+'>');
                $("#pidetail").append('<input type="hidden" id="user_description' + i + '" name="user_description" value=' + t.fnGetData(i)[4] + '>');
                $("#pidetail").append('<input type="hidden" id="storage_loaction_id' + i + '" name="storage_loaction_id" value=' + t.fnGetData(i)[7] + '>');
                $("#pidetail").append('<input type="hidden" id="delivery_date1' + i + '" name="delivery_date1" value=' + t.fnGetData(i)[9] + '>');
                $("#pidetail").append('<input type="hidden" id="quantity' + i + '" name="quantity" value=' + t.fnGetData(i)[10] + '>');
                $("#pidetail").append('<input type="hidden" id="uom_id' + i + '" name="uom_id" value=' + t.fnGetData(i)[11] + '>');
                $("#pidetail").append('<input type="hidden" id="unit_price' + i + '" name="unit_price" value=' + t.fnGetData(i)[13] + '>');
                $("#pidetail").append('<input type="hidden" id="discount' + i + '" name="discount" value=' + t.fnGetData(i)[14] + '>');
                $("#pidetail").append('<input type="hidden" id="eff_unit_price' + i + '" name="eff_unit_price" value=' + t.fnGetData(i)[15] + '>');
                $("#pidetail").append('<input type="hidden" id="purchase_value' + i + '" name="purchase_value" value=' + t.fnGetData(i)[16] + '>');
                $("#pidetail").append('<input type="hidden" id="assessable_rate' + i + '" name="assessable_rate" value=' + t.fnGetData(i)[17] + '>');
                $("#pidetail").append('<input type="hidden" id="assessable_value' + i + '" name="assessable_value" value=' + t.fnGetData(i)[18] + '>');
                $("#pidetail").append('<input type="hidden" id="tax_id' + i + '" name="tax_id" value=' + t.fnGetData(i)[19] + '>');
                $("#pidetail").append('<input type="hidden" id="cost_center_id' + i + '" name="cost_center_id" value=' + t.fnGetData(i)[21] + '>');
                $("#pidetail").append('<input type="hidden" id="grn_detail_id' + i + '" name="grn_detail_id" value=' + t.fnGetData(i)[23] + '>');
                $("#pidetail").append('<input type="hidden" id="grir_value' + i + '" name="grir_value" value=' + t.fnGetData(i)[24] + '>');
                $("#pidetail").append('<input type="hidden" id="basic_value' + i + '" name="basic_value" value=' + t.fnGetData(i)[25] + '>');
                $("#pidetail").append('<input type="hidden" id="sac_hsn_id' + i + '" name="sac_hsn_id" value=' + parseInt(t.fnGetData(i)[5]) + ' >');
                $("#pidetail").append('<input type="hidden" id="item_type_id' + i + '" name="item_type_id" value=' + parseInt(t.fnGetData(i)[28]) + ' >');
            }
        }
        $('#TaxGrid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            aoColumns: [
                     { sname: "a" },
                     { sname: "b","sClass": "right" },
            ]

        });
        function GetVendordetails(vendor_id) {
            if (vendor_id == "") {
                $("#billing_address").val("");
                $("#billing_city").val("");
                $("#country_id").val("");
                $("#billing_state_id").val("");
                $("#email_id").val("");
                $("#billing_pincode").val("");
                $("#payment_cycle_type_id").val("");
                $("#payment_cycle_id").val("");
                $("#payment_terms_id").val("").trigger("change");
                $("#pan_no").val("");
                $("#gst_no").val("");
                $("#vat_tin_no").val("");
                $("#ecc_no").val("");
                $("#cst_tin_no").val("");
                $("#tds_code_id").val("");
                getnetTotal();
                CalculateTax();
            }
            else {
                if ($("#item_service_id").val() == 2) {
                    $.ajax({
                        url: '@Url.Action("GetVendorDetails", "Generic")',
                        type: "GET",
                        dataType: "JSON",
                        data: { id: vendor_id },
                        success: function (soid) {
                            $.each(soid, function (i, cycle) {
                                $("#billing_address").val(cycle.BILLING_ADDRESS);
                                $("#billing_city").val(cycle.BILLING_CITY);
                                $("#country_id").val(cycle.BILLING_COUNTRY_ID);
                                $("#billing_state_id").val(cycle.BILLING_STATE_ID);
                                $("#email_id").val(cycle.EMAIL_ID_PRIMARY);
                                $("#billing_pincode").val(cycle.BILLING_PINCODE);
                                $("#payment_cycle_type_id").val(cycle.PAYMENT_CYCLE_TYPE_ID);
                                $("#payment_cycle_id").val(cycle.PAYMENT_CYCLE_ID);
                                $("#payment_terms_id").val(cycle.PAYMENT_TERMS_ID).trigger("change");
                                $("#pan_no").val(cycle.pan_no);
                                $("#gst_no").val(cycle.ecc_no);
                                $("#vat_tin_no").val(cycle.vat_tin_no);
                                $("#ecc_no").val(cycle.vendor_ecc_no);
                                $("#cst_tin_no").val(cycle.vendor_cst_no);
                                $("#tds_code_id").val(cycle.tds_id);
                                $("#net_currency_id").val(cycle.CREDIT_LIMIT_CURRENCY_ID);
                                $("#gross_currency_id").val(cycle.CREDIT_LIMIT_CURRENCY_ID);
                                $('#gst_vendor_type_id').val(cycle.gst_vendor_type_id);
                                $('#gst_in').val(cycle.gst_no);
                                CalculateTax();
                            })
                        }
                    });
                }
            }
        }
        $("#ServiceInvoiceWithoutPO").change(function () {
            var t = $('#ContactGrid').DataTable();
            t.fnClearTable();
            $("#vendor_id").val("").trigger("change");
            GetVendordetails("");
            id = $(this).is(':checked');
            if (id == false) {
                $("#item_id").select2({
                    placeholder: "Select Item",
                    allowClear: true
                });
                $('#item_service_id').val(1);
                $("#lbitem").empty();
                $("#lbitem").append("Item *");
                $(".lbitemtext").empty();
                $(".lbitemtext").append("Item");
                $('.dt_col_hide').show();
                $(".dt_col1").hide();
                $("#vendor_id").prop("disabled", "disabled");
                $("#plant_id").prop("disabled", "disabled");
                $("#country_id").prop("disabled", "disabled");
                $("#billing_state_id").prop("disabled", "disabled");
                $("#billing_address").prop("disabled", "disabled");
                $("#billing_city").prop("disabled", "disabled");
                $("#billing_pincode").prop("disabled", "disabled");
                $("#pan_no").prop("disabled", "disabled");
                $("#item_id").prop("disabled", "disabled");
                $("#user_description").prop("disabled", "disabled");
                $("#discount").prop("disabled", "disabled");
                $('.dt_col_hide').show();
                $('#quantity').val('');
                $('#uprice').text("Unit Price *");
                $("#unitpricetext").text("Unit Price");
                $('#AddItem').hide();
                $('#purchaseinvoice').show();
                $("#po_id").addClass('validinput');
             //   $("#vendor_document_date").prop("disabled", "disabled");
              //  $("#vendor_document_no").prop("disabled", "disabled");
                $("#business_unit_id").prop("disabled", "disabled");
                $("#freight_terms_id").prop("disabled", "disabled");
                $("#delivery_date").prop("disabled", "disabled");

                var id = $('#freight_terms_id option:contains(---Select---)').val();
                $('#freight_terms_id').attr('disabled', 'disabled');
                $('#freight_terms_id').addClass('removedisabled');
                $('#freight_terms_id').val(id);
            }
            else {
                $('#item_service_id').val(2);
                $("#po_id").removeClass('validinput');
                $('.dt_col_hide').hide();
                $('#purchaseinvoice').hide();
                $('#quantity').val(1);
                $('#uprice').text("Price *");
                $("#unitpricetext").text("Price");
                $("#item_id").select2({
                    placeholder: "Select GL",
                    allowClear: true
                });

                $("#lbitem").empty();
                $("#lbitem").append("GL *");
                $(".lbitemtext").empty();
                $(".lbitemtext").append("GL");
                $('.dt_col_hide').hide();
                $('#AddItem').show();
                $(".dt_col1").show();
                $("#vendor_id").prop("disabled", false);
              //  $("#plant_id").prop("disabled", false);
                //$("#country_id").prop("disabled", false);
                //$("#billing_state_id").prop("disabled", false);
                //$("#billing_city").prop("disabled", false);
                //$("#billing_address").prop("disabled", false);
                //$("#billing_pincode").prop("disabled", false);
                //$("#pan_no").prop("disabled", false);
                $("#item_id").prop("disabled", false);
                $("#discount").prop("disabled", false);
                $("#user_description").prop("disabled", false);
                $("#vendor_document_date").prop("disabled", false);
                $("#vendor_document_no").prop("disabled", false);
                $("#business_unit_id").prop("disabled", false);
                $("#freight_terms_id").prop("disabled", false);
                $("#delivery_date").prop("disabled", false);

                var id = $('#freight_terms_id option:contains(Not Applicable)').val();
                if (id != '') {
                    if (id != undefined) {
                        $('#freight_terms_id').attr('disabled', 'disabled');
                        $('#freight_terms_id').addClass('removedisabled');
                        $('#freight_terms_id').val(id);
                    }
                }
            }
        });
        $('#ContactGrid').on('click', '.delete', function () {

            var t = $('#ContactGrid').DataTable();
            var id = $(this).parent('td').parent('tr').index();


            var deleteids = t.fnGetData(id)[1];
            swal({
                title: "Are you sure?",

                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: true
            },
     function (isConfirm) {
         if (isConfirm) {
             t.fnDeleteRow(id);
             getnetTotal();
             var rowCount = t.fnGetData().length;
             var str = "";
             var str1 = "";
             var tot = 0;
             for (i = 0; i < rowCount; i++) {
                 str1 = t.fnGetData(i)[19] + "~";
                 str1 = str1 + t.fnGetData(i)[18] + "~";
                 str1 = str1 + t.fnGetData(i)[16] + "~";
                 str1 = str1 + t.fnGetData(i)[23];
                 if (i == 0) {
                     str = str1 + ","
                 }
                 else {
                     str = str + str1 + ",";
                 }

                 tot = tot + parseFloat(t.fnGetData(i)[16]);
             }
             GetTaxDetail(str.slice(0, -1), tot, $("#posting_date").val(), 0);
             var len = t.fnGetData().length;
             var i = 1;
             var row = 0;
             if (len > 0) {
                 $('#ContactGrid tbody tr').each(function () {
                     t.fnUpdate(i, row, 1);
                     i++;
                     row++;
                 });
             }
         }
     });
        });
        $(".add").on("click", function (event) {
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            var sr_no = t.fnGetData().length + 1;
            var item_id = $("#item_id").val();
            var item_code = $("#item_id :selected").text();
            var delevery_date = $("#dte").val();
            var qty = $("#quantity").val();
            var balanceQuantity = $('#balanceQuantity').val();
            var unit_id = $("#uom_id").val();
            var unit_name = $("#uom_id").find("option:selected").text();
            var unit_price = $("#unitprice").val();
            var discount = $("#discount").val();
            var effectiveprice = $("#effectiveprice").val();
            var salesvalue = $("#salesvalue").val();
            var assessablerate = $("#assessablerate").val();
            var assessablevalue = $("#assessablevalue").val();
            var assignment = $('#account_assignment_id').val();
            var taxid = $("#tax_id").val();
            var taxcode = $("#tax_id :selected").text();
            var storage_id = $('#storage_location_id').val();
            var storage_name = $('#storage_location_id :selected').text();
            var user_description = $("#user_description").val();
            var batch_id = $("#batch").val();
            var bucket_id = $("#bucket_id").val();
            var bucket = $("#bucket_id :selected").text();
            var grn_detail = $('#grn_detail_id').val();
            var cost_center_id = $("#cost_center_id :selected").val();
            var cost_center = $("#cost_center_id :selected").text();
            var item_type_id = $('#item_type_id').val();
            var hsn_id = $('#sac_hsn_id').val();
            var hsn = $("#sac_hsn_id :selected").text();

            if (item_id == '') {
                swal("", "Please Select Item Name.", "error");
                return false;
            }

            if (unit_price == '') {
                swal("", "Please enter unit price.", "error");
                return false;
            }
            if (taxid == '') {
                swal("", "Please select tax code.", "error");
                return false;
            }
            if (hsn_id == '') {
                swal("", "Please SAC/HSN Code.", "error");
                return false;
            }
            if (hsn_id == '0') {
                swal("", "Please SAC/HSN Code.", "error");
                return false;
            }
            if (discount == '') {
                discount = 0;
            }
            effectiveprice = unit_price - unit_price * discount / 100;
            if ($("#srno").val() == "") {
                t.fnAddData([0, rowCount + 1, item_id, item_code, user_description,hsn_id,hsn, storage_id, "",
                           delevery_date, parseFloat(qty).toFixed(2), unit_id, "", parseFloat(unit_price).toFixed(2),
                           parseFloat(discount).toFixed(2), parseFloat(effectiveprice).toFixed(2), parseFloat(salesvalue).toFixed(2), parseFloat(salesvalue).toFixed(2),
                           parseFloat(salesvalue).toFixed(2), taxid, taxcode, cost_center_id, cost_center, 0, 0, 0, '', '',item_type_id
                ]);
                sr_no + 1;
            }
            else {
                var cc = $("#srno").val();
                cc = parseInt(cc) - 1;
                t.fnUpdate([0, cc + 1, item_id, item_code, user_description,hsn_id,hsn, storage_id, "",
                           delevery_date, parseFloat(qty).toFixed(2), unit_id, "", parseFloat(unit_price).toFixed(2),
                           parseFloat(discount).toFixed(2), parseFloat(effectiveprice).toFixed(2), parseFloat(salesvalue).toFixed(2), parseFloat(salesvalue).toFixed(2),
                           parseFloat(salesvalue).toFixed(2), taxid, taxcode, cost_center_id, cost_center, 0, 0, 0, '', '',item_type_id], cc)
            }
            if ($('#item_service_id').val() == 2 || $('#ServiceInvoiceWithoutPO').is(':checked') == true) {
                $('.dt_col_hide').hide();
            }
            else {
                $('.dt_col_hide').show();
            }

            getnetTotal();
            var rowCount = t.fnGetData().length;
            var str = "";
            var str1 = "";
            var tot = 0;
            for (i = 0; i < rowCount; i++) {
                str1 = t.fnGetData(i)[19] + "~";
                str1 = str1 + t.fnGetData(i)[18] + "~";
                str1 = str1 + t.fnGetData(i)[16] + "~";
                str1 = str1 + t.fnGetData(i)[23];
                if (i == 0) {
                    str = str1 + ","
                }
                else {
                    str = str + str1 + ",";
                }

                tot = tot + parseFloat(t.fnGetData(i)[16]);
            }
            GetTaxDetail(str.slice(0, -1), tot, $("#posting_date").val(), 0);
            clearmodel();
            return true
        });
        function clearmodel() {
            $("#item_id").val('').trigger("change");
            $("#quantity").val('');
            $("#uom_id").val('');
            $("#unitprice").val('');
            $("#dte").val('');
            $("#discount").val('');
            $("#effectiveprice").val('');
            $("#salesvalue").val('');
            $("#assessablerate").val('');
            $("#assessablevalue").val('');
            $("#user_description").val('');
            $("#tax_id").val('').trigger("change");
            $("#sloc_id").val("").trigger("change");
            $('#cost_center_id').val("").trigger("change");
            $("#srno").val('');
            $('#item_type_id').val('');
            fill_hsn();
        }
        $('#ContactGrid').on('click', '.edit', function () {
            var t = $('#ContactGrid').DataTable();
            var id = $(this).parent('td').parent('tr').index();
            $('#myModal').modal('show');
            $("#srno").val(t.fnGetData(id)[1]);
            $("#item_id").val(t.fnGetData(id)[2]).trigger("change");
            $('#user_description').val(t.fnGetData(id)[4]);
            $('#storage_location_id').val(t.fnGetData(id)[7]);
            $('#dte').val(t.fnGetData(id)[9]);
            $('#quantity').val(t.fnGetData(id)[10]);
            $('#uom_id').val(t.fnGetData(id)[11]);
            $('#unitprice').val(t.fnGetData(id)[13]);
            $('#discount').val(t.fnGetData(id)[14]);
            $('#effectiveprice').val(t.fnGetData(id)[15]);
            $('#salesvalue').val(t.fnGetData(id)[16]);
            $('#assessablerate').val(t.fnGetData(id)[17]);
            $('#assessablevalue').val(t.fnGetData(id)[18]);
            $('#tax_id').val(t.fnGetData(id)[19]).trigger("change");
            $('#grn_detail_id').val(t.fnGetData(id)[23]);
            $('#cost_center_id').val(t.fnGetData(id)[21]).trigger("change");
            $('#item_type_id').val(t.fnGetData(id)[28]);
            fill_hsn();
            $('#sac_hsn_id').val(t.fnGetData(id)[5]);
        });


        $('#example-select-all').on('click', function () {
            checkedarray.length = 0;
            var t = $('#pogrid').DataTable();
            var trlen = t.fnGetData().length;
            if ($(this).is(':checked')) {
                if (trlen > 0) {
                    for (var j = 0; j <= trlen - 1; j++) {
                        var sr_no = t.fnGetData(j)[1];
                        checkedarray.push(sr_no);
                    }
                }
            }
            else {
                checkedarray.length = 0;
            }
        });
        $(document).on('click', '.check', function () {
            var checked = $(this).parent('td').parent('tr').find('input[type="hidden"]').val();
            var index = checkedarray.indexOf(checked);

            if ($(this).is(':checked')) {
                var index1 = checkedarray.indexOf(checked);
                if (index1 == -1)
                {
                    checkedarray.push(checked);
                }
            }
            else {
                checkedarray.splice(index, 1);
            }
        });


        $('#pogrid').on('change', '.hsn', function () {
            var index = $(this).attr('data-index');
            var _hsn = $(this).val();
            var t = $('#pogrid').DataTable();
            t.fnUpdate(_hsn, parseInt(index), 22);
        });

        $('#item_type_id').change(function(){
            fill_hsn();
        });
        function fill_hsn(){
            var item_type_id = $('#item_type_id').val();
            if(item_type_id==''){item_type_id=0}
            if(item_type_id!=''){
                try{
                    $.ajax({
                        url:'@Url.Action("Get_hsn_sac","Generic")',
                        data:{id:item_type_id},
                        method:'get',
                        async:false,
                        success:function(hsn){
                            $('#sac_hsn_id').empty();
                            $('#sac_hsn_id').append('<option value='+0+'>--Select--</option>');
                            $.each(hsn,function(k,v){
                                $('#sac_hsn_id').append('<option value='+v.id+'>'+v.code+'</option>');
                            });
                        }
                    });
                }
                catch(msg){msg.message}
            }
            else{
                $('#sac_hsn_id').empty();
                $('#sac_hsn_id').append('<option value='+0+'>--Select--</option>');
            }
        }
        function GetStorageLocation(id) {
            try{
                $.ajax({
                    url: '@Url.Action("GetStorageLocation", "Generic")',
                    type: "GET",
                    dataType: "JSON",
                    data: { id: id },
                    success: function (id) {
                        $.each(id, function (i, cycle) {
                            $('#place_of_supply_id').val(cycle.state_id);
                        });
                    }
                });
            }catch(msg){msg.message}
        };
        $('#is_rcm').change(function () {//do something when the user clicks the box sameas
            var t = $('#ContactGrid').DataTable();
            t.fnClearTable();
            CalculateTax();
            $("#net_value").val('0.00');
            if ($(this).is(':checked')) {
                Get_Tax(1);
                $("#category_id").addClass("PRCM");
            }
            else {
                Get_Tax(0);
                $("#category_id").removeClass("PRCM");
            }
        });
        function Get_Tax(id){
            if(id==''){id=0}
            try{
                $.ajax({
                    url:'@Url.Action("GetTaxByRCM", "Generic")',
                    data:{id:id},
                    method:'get',
                    async:false,
                    success:function(hsn){

                        $('#tax_id').empty();
                        $('#tax_id').append('<option>--Select--</option>');
                        $.each(hsn,function(k,v){
                            $('#tax_id').append('<option value='+v.tax_id+'>'+v.tax_name+'</option>');
                        });
                    }
                });
            }
            catch(msg){msg.message}
        };
    </script>

}