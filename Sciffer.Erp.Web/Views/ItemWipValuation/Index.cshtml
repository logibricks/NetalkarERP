
@using Sciffer.Erp.Domain.ViewModel
@{
    ViewBag.Title = "Item Work in Progress Valuation";
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
<br /><br /><br />
<div>
    
    @Html.EJ().Dialog("ErrorList").Title("ErrorList").ShowOnInit(false)
    
    @(Html.EJ().Grid<VM_ref_item_wip_valuation>("ItemWIPValGrid")
       .Datasource(ds => ds.Json((IEnumerable<object>)ViewBag.ItemWIPValue).RemoveURL(Url.Action("InlineDelete", "ItemWipValuation")).InsertURL(Url.Action("InlineInsert", "ItemWipValuation")).UpdateURL(Url.Action("InlineInsert", "ItemWipValuation"))
                       .Adaptor(AdaptorType.RemoteSaveAdaptor).Offline(false))
        .EditSettings(edit => { edit.AllowAdding().AllowDeleting().AllowEditing().EditMode(EditMode.InlineFormTemplate).InlineFormTemplateID("#template").ShowDeleteConfirmDialog(true); })
        .EnableAltRow().AllowPaging()
        .PageSettings(p => { p.PageSize(10); })
        .EnableAltRow()
        .ToolbarSettings(toolbar =>
        {
            toolbar.ShowToolbar().ToolbarItems(items =>
            {
                items.AddTool(ToolBarItems.Add);
                items.AddTool(ToolBarItems.Edit);
                items.AddTool(ToolBarItems.Update);
                items.AddTool(ToolBarItems.Delete);
                items.AddTool(ToolBarItems.Cancel);
                //items.AddTool(ToolBarItems.ExcelExport);
                items.AddTool(ToolBarItems.PrintGrid);
            });
        })
        //.Mappers(map => map.ExportToExcelAction(Url.Action("ExportToExcel", "Generic", new { ctrlname = "ToolLifeMaster" }))
        //.ExportToPdfAction(Url.Action("ExportToPdf", "Generic", new { ctrlname = "ToolLifeMaster" })).ExportToWordAction(Url.Action("ExportToWord", "Generic", new { ctrlname = "ToolLifeMaster" })))
        .AllowSorting()
        .AllowPaging()
        .IsResponsive()
        .AllowFiltering()
        .ShowColumnChooser()
        .AllowReordering()
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .Columns(col =>
        {
            col.Field("item_wip_valuation_id").HeaderText("ID").IsPrimaryKey(true).ShowInColumnChooser(false).Width(80).Visible(false).Add();

            col.Field("machine_id").HeaderText("Machine Id").Visible(false).ValidationRules(val => val.AddRule("required", true)).Add();
            col.Field("machine_name").HeaderText("Machine Name").Add();

            col.Field("ITEM_ID").HeaderText("Item Id").Visible(false).ValidationRules(val => val.AddRule("required", true)).Add();
            col.Field("item_name").HeaderText("Item Name").Add();

            col.Field("value").HeaderText("Value").ValidationRules(val => val.AddRule("required", true)).Add();

        })
        .ClientSideEvents(eve => { eve.ActionComplete("complete").EndAdd("EndProcess").EndDelete("EndProcess").EndEdit("EndProcess"); })
    )
</div>

<script id="template" type="text/template">

    <div>
        <div class="row">
            <div class="col-lg-6 col-md-6 col-xs-12">
                <input type="hidden" id="item_wip_valuation_id" name="item_wip_valuation_id" value="{{: item_wip_valuation_id}}" class="form-control" />
            </div>
        </div>
        <br />
        
        <br />
        <div class="row">
            <div class="col-lg-2 col-md-2 col-xs-12" style="text-align: right;">
                Item Name *
            </div>
            <div class="col-lg-4 col-md-4 col-xs-12">
                @Html.DropDownList("ITEM_ID", (System.Web.Mvc.SelectList)ViewBag.item_list, "--Select--", htmlAttributes: new { @class = "form-control " })
            </div>

            <div class="col-lg-2 col-md-2 col-xs-12" style="text-align: right;">
                Machine Name *
            </div>
            <div class="col-lg-4 col-md-4 col-xs-12">
                @Html.DropDownList("machine_id", (System.Web.Mvc.SelectList)ViewBag.machine_list, "--Select--", htmlAttributes: new { @class = "form-control " })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-lg-2 col-md-2 col-xs-12" style="text-align: right;">
                Value *
            </div>
            <div class="col-lg-4 col-md-4 col-xs-12">
                <input type="text" id="value" name="value" value="{{: value}}" class="form-control" />
            </div>
            
        </div>
        <br />
    </div>
</script>



<script type="text/javascript">

    var flag = true;
    function complete(args) {
        if (args.requestType == "add") {
            
        }

        if (args.requestType == "beginedit") {
            
            $("#ITEM_ID").val(args.rowData.ITEM_ID);
            $("#machine_id").val(args.rowData.machine_id);
        }
        if (args.requestType == "save") {
           
            var gridObj = $("#ItemWIPValGrid").ejGrid("instance");
            gridObj.refreshContent();
        }
    }

    function EndProcess() {
        var gridObj = $("#ItemWIPValGrid").ejGrid("instance");
        gridObj.refreshContent();
    }
</script>

