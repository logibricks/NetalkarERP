<script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
@using Sciffer.Erp.Domain.Model
@{
    ViewBag.Title = "Index";
}
<br /><br /><br />
<div>
    
   @Html.EJ().Dialog("ErrorList").Title("ErrorList").ShowOnInit(false)
@(Html.EJ().Grid<batch_numbering_VM>("Grid")
        .Datasource(ds => ds.Json((IEnumerable<object>)ViewBag.DataSource).RemoveURL(Url.Action("InlineDelete", "BatchNumbering")).InsertURL(Url.Action("InlineInsert", "BatchNumbering")).UpdateURL(Url.Action("InlineInsert", "BatchNumbering"))
                       .Adaptor(AdaptorType.RemoteSaveAdaptor).Offline(false))
        .EditSettings(edit => { edit.AllowAdding().AllowDeleting().AllowEditing().EditMode(EditMode.InlineFormTemplate).InlineFormTemplateID("#template").ShowDeleteConfirmDialog(true).ShowConfirmDialog(true); })
        .EnableAltRow().AllowPaging()
        .PageSettings(p => { p.PageSize(10); })
        .EnableAltRow()
        .ToolbarSettings(toolbar =>
        {
            toolbar.ShowToolbar().ToolbarItems(items =>
            {
                items.AddTool(ToolBarItems.Add);
                items.AddTool(ToolBarItems.Edit);
                items.AddTool(ToolBarItems.ExcelExport);
                items.AddTool(ToolBarItems.PrintGrid);
            });
        })
        .Mappers(map => map.ExportToExcelAction(Url.Action("ExportToExcel", "Generic", new { ctrlname = "BatchNumbering" })))
        .AllowSorting()
        .AllowPaging()
        .IsResponsive()
        .AllowFiltering()
        .ShowColumnChooser()
        .AllowReordering()
        .AllowScrolling()
        .ScrollSettings(col => { col.Width("100%"); })
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .Columns(col =>
        {
            col.Field("batch_no_id").Width("10%").HeaderText("ID").IsPrimaryKey(true).Width(80).Visible(false).Add();
            col.Field("plant_id").Width("10%").HeaderText("Plant").ValidationRules(v => v.AddRule("required", true)).Visible(false).Add();
            col.Field("plant_name").Width("10%").HeaderText("Plant").Add();
            col.Field("item_category_name").Width("10%").HeaderText("Item Category").Add();
            col.Field("item_category_id").Width("10%").HeaderText("Item Category").ValidationRules(v => v.AddRule("required", true)).Visible(false).Add();
            col.Field("prefix_sufix_id").Width("10%").HeaderText("Prefix").ValidationRules(v => v.AddRule("required", true)).Visible(false).Add();
            col.Field("prefix_sufix_name").Width("10%").HeaderText("Prefix/Suffix").Add();
            col.Field("prefix_sufix").Width("10%").HeaderText("Prefix/Suffix Series").ValidationRules(v => v.AddRule("required", true)).Add();
            col.Field("financial_year_id").Width("10%").HeaderText("Financial Year").ValidationRules(v => v.AddRule("required", true)).Visible(false).Add();
            col.Field("financial_year_name").Width("10%").HeaderText("Financial Year").ValidationRules(v => v.AddRule("required", true)).Add();
            col.Field("from_number").Width("10%").HeaderText("From Number").ValidationRules(v => v.AddRule("required", true)).Add();
            col.Field("to_number").Width("10%").HeaderText("To Number").ValidationRules(v => v.AddRule("required", true).AddRule("customrule",true).AddRule("checklength",true)).Add();
            col.Field("last_used").Width("10%").HeaderText("Last Used ").Add();
            col.Field("is_blocked").Width("10%").HeaderText("Blocked").Visible(false).Add();

        })
        .ClientSideEvents(eve => { eve.ActionComplete("complete").Load("Load").EndAdd("EndProcess").EndDelete("EndProcess").EndEdit("EndProcess").Create("Context"); })
)
</div>

<script id="template" type="text/template">

    <div>
        <div class="row">
            <div class="col-lg-6 col-md-6 col-xs-12">
                <input type="hidden" id="batch_no_id" name="batch_no_id" value="{{: batch_no_id}}" class="form-control" />
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6 col-md-6 col-xs-12">
                <div class="col-lg-4 col-md-4 col-xs-12" style="text-align: right;">
                    Plant *
                </div>
                <div class="col-lg-8 col-md-8 col-xs-12">
                    @Html.DropDownList("plant_id", (new System.Web.Mvc.SelectList(ViewBag.Plant, "PLANT_ID", "PLANT_NAME")), "--select--", htmlAttributes: new { @class = "form-control validator" })

                </div>
            </div>
            <div class="col-lg-6 col-md-6 col-xs-12">
                <div class="col-lg-4 col-md-4 col-xs-12" style="text-align: right;">
                    Item Category *
                </div>
                <div class="col-lg-8 col-md-8 col-xs-12">
                    @Html.DropDownList("item_category_id", (new System.Web.Mvc.SelectList(ViewBag.ItemCategory, "ITEM_CATEGORY_ID", "ITEM_CATEGORY_NAME")), "--select--", htmlAttributes: new { @class = "form-control validator"})

                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-lg-6 col-md-6 col-xs-12">
                <div class="col-lg-4 col-md-4 col-xs-12" style="text-align: right;">
                    Prefix/Suffix *
                </div>
                <div class="col-lg-4 col-md-4 col-xs-12">
                    @Html.DropDownList("prefix_sufix_id", new List<SelectListItem>
                                 {                                 
                                    new SelectListItem{ Text="Prefix", Value = "1" },
                                    new SelectListItem{ Text="Suffix", Value = "2" }
                                 }, new { @class = "form-control" })
                </div>
                <div class="col-lg-4 col-md-4 col-xs-12">
                    <input type="text" id="prefix_sufix" name="prefix_sufix" value="{{: prefix_sufix}}" class="form-control " />
                 </div>
                </div>
            <div class="col-lg-6 col-md-6 col-xs-12">
                <div class="col-lg-4 col-md-4 col-xs-12" style="text-align: right;">
                    Financial Year *
                </div>
                <div class="col-lg-8 col-md-8 col-xs-12">
                    @Html.DropDownList("financial_year_id", (System.Web.Mvc.SelectList)ViewBag.financelist, "---Select---", new { @class = "form-control" })
                </div>
            </div>

        </div>
        <br />
       
        <div class="row">
            <div class="col-lg-6 col-md-6 col-xs-12">
                <div class="col-lg-4 col-md-4 col-xs-12" style="text-align: right;">
                    From Number *
                </div>
                <div class="col-lg-8 col-md-8 col-xs-12">
                    <input type="number" id="from_number" name="from_number" value="{{: from_number}}" class="form-control " />

                </div>
            </div>
            <div class="col-lg-6 col-md-6 col-xs-12">
                <div class="col-lg-4 col-md-4 col-xs-12" style="text-align: right;">
                    To Number *
                </div>
                <div class="col-lg-8 col-md-8 col-xs-12">
                    <input type="number" id="to_number" name="to_number" value="{{: to_number}}" class="form-control " />

                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-lg-6 col-md-6 col-xs-12">
                <div class="col-lg-4 col-md-4 col-xs-12" style="text-align: right;">
                    Last Used 
                </div>
                <div class="col-lg-8 col-md-8 col-xs-12">
                    <input type="text" id="last_used" name="last_used" value="{{: last_used}}" class="form-control" disabled />

                </div>
            </div>
            <div class="col-lg-6 col-md-6 col-xs-12">
                <div class="col-lg-4 col-md-4 col-xs-12" style="text-align: right;">
                    Blocked
                </div>
                <div class="col-md-8 col-sm-8 col-xs-12">
                    <input type="checkbox" id="is_blocked" name="is_blocked">

                </div>
            </div>
        </div>
        <br/>
     </div>
    
</script>

<style>
    /*.form-control{
        height: 30px !important;
    }*/
</style>
<script type = "text/javascript" >
    $(function () {
        $.validator.addMethod("customrule", function (value, element, params) {
            var a = $("#from_number").val();
            var b = $("#to_number").val();
            return b > a;
        }, "Invalid To Number. ")
        $.validator.addMethod("checklength", function (value, element, params) {
            var a = $("#from_number").val();
            var b = $("#to_number").val();
            return b.length >= a.length;
        }, "Invalid To Number. ")
    });
    
    function complete(args) { 
        if (args.requestType == "add") {
            $("#plant_id").select2({
                placeholder: "Select Plant",
                allowClear: true
            });
            $("#item_category_id").select2({
                placeholder: "Select Item Category",
                allowClear: true
            });
            $('#is_blocked').checkboxpicker();
        }
        if (args.requestType == "beginedit") {
            $("#plant_id").val(args.rowData.plant_id);
            $("#item_category_id").val(args.rowData.item_category_id);
            $("#item_category_id").val(args.rowData.item_category_id);
            $("#financial_year_id").val(args.rowData.financial_year_id);
            document.getElementById('plant_id').setAttribute('disabled', 'disabled');
            document.getElementById('item_category_id').setAttribute('disabled', 'disabled');
            document.getElementById('prefix_sufix_id').setAttribute('disabled', 'disabled');
            document.getElementById('prefix_sufix').setAttribute('disabled', 'disabled');
             document.getElementById('financial_year_id').setAttribute('disabled', 'disabled');
            document.getElementById('from_number').setAttribute('disabled', 'disabled');
            document.getElementById('last_used').setAttribute('disabled', 'disabled');
            if (args.rowData.is_blocked == true) {
                //Check
                document.getElementById('is_blocked').setAttribute('checked', 'checked');
            }
            else {
                //UnCheck
                document.getElementById('is_blocked').removeAttribute('checked');
            }
            $('#is_blocked').checkboxpicker();
        }
        if (args.requestType == "save") {
            if (args.data.text == 'duplicate') {
                sweetAlert("", "Batch Numbering already exists!", "error");
                if (args.model.dataSource.dataSource.json[0].batch_no_id == null) {
                    args.model.dataSource.dataSource.json = args.model.dataSource.dataSource.json.splice(1, args.model.dataSource.dataSource.json.length);
                }
            }
            var gridObj = $("#Grid").ejGrid("instance");
            gridObj.refreshContent();
        }
        

    }

    function EndProcess() {
        var gridObj = $("#Grid").ejGrid("instance");
        //console.log(gridObj);
        gridObj.refreshContent();
    }


</script>
