
@model Sciffer.Erp.Domain.Model.ref_general_ledger

@{
    ViewBag.Title = "Create";
}

<style type="text/css">
    #dropZone {
        background: gray;
        padding: 50px;
        text-align: center;
        color: white;
    }
</style>

<div class="row">
    <div class="col-lg-12 col-sm-12">
        <div id="dropZone">
            <div class="dz-message">
                <h4>Click to Upload File.</h4>
                @*<input name="file" type="file" accept=".xls,.xlsx" />
                    <input type="button" onclick="excelCall()" value="Upload" />*@
            </div>
        </div>

        <br>
        Uploaded Files:
        <ul id="uploadResult"></ul>
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">


        <div class="row">
            <div class="col-lg-6 col-sm-6">
                
                @Html.LabelFor(model => model.gl_account_type, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                <div class="col-md-8 col-sm-8 col-xs-12">
                    @Html.DropDownList("gl_account_type", (System.Web.Mvc.SelectList)ViewBag.accounttype, new { @class = "form-control validinput", @onchange = "FillGlParentLedger(this.value)" })
                </div>
            </div>
            <div class="col-lg-6 col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.gl_ledger_code, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                    <div class="col-md-8 col-sm-8 col-xs-12">
                        @Html.EditorFor(model => model.gl_ledger_code, new { htmlAttributes = new { @class = "form-control num validinput" } })
                        @Html.ValidationMessageFor(model => model.gl_ledger_code, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.gl_ledger_name, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                    <div class="col-md-8 col-sm-8 col-xs-12">
                        @Html.EditorFor(model => model.gl_ledger_name, new { htmlAttributes = new { @class = "form-control num1 validinput" } })
                        @Html.ValidationMessageFor(model => model.gl_ledger_name, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.gl_head_account, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                    <div class="col-md-8 col-sm-8 col-xs-12">
                        @Html.DropDownList("gl_head_account", new List<SelectListItem>
                                 {
                                    new SelectListItem{ Text="---Select---", Value = "0" },
                                    new SelectListItem{ Text="Head", Value = "1" },
                                    new SelectListItem{ Text="Account", Value = "2" }
                                 }, new { @class = "form-control validinput" })
                        @Html.ValidationMessageFor(model => model.gl_head_account, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.gl_parent_ledger_code, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                    <div class="col-md-8 col-sm-8 col-xs-12">
                        @Html.DropDownList("gl_parent_ledger_code", (System.Web.Mvc.SelectList)ViewBag.generalledger, "---Select---", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.gl_parent_ledger_code, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.allow_manual_entry, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })

                    <div class="col-md-8 col-sm-8 col-xs-12">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.allow_manual_entry, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.allow_manual_entry, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        

        <div class="row">

            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.is_blocked, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })

                    <div class="col-md-8 col-sm-8 col-xs-12">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.is_blocked, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.is_blocked, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <hr />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" id="create" data-controller="GeneralLedger" class="btn btn-success" style="float:right" />

            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script src="~/Scripts/requirevalidation.js"></script>
<script src="~/Scripts/jquery.filedrop.js"></script>
<script type="text/javascript">
    $(function () {
        $('#dropZone').filedrop({
            url: '@Url.Action("UploadFiles", "GeneralLedger")',
            paramname: 'files',
            maxFiles: 5,
            dragOver: function () {
                $('#dropZone').css('background', 'blue');
            },
            dragLeave: function () {
                $('#dropZone').css('background', 'gray');
            },
            drop: function () {
                $('#dropZone').css('background', 'gray');
            },
            afterAll: function () {
                $('#dropZone').html('');

            },
            uploadFinished: function (i, file, response, time) {

                if (response.Status == "Failed") {
                    sweetAlert("File cannot be uploaded", "Error found " + response.text, "error");
                }
                if (response.Status == "Success") {
                    $('#uploadResult').append('<li>' + file.name + '</li>');
                    sweetAlert("",'File Upload Sucessfully',"success");
                }
                if (response.errorMessage != "") {
                    //console.log(response.error);
                    sweetAlert("File cannot be uploaded", response.errorMessage, "error");
                }
                if (response.error.length > 0) {
                    for (i = 0 ; i < response.error.length ; i++) {
                        if (response.error[i] != null) {
                            swal({
                                title: "File cannot be uploaded !" + "<br/>" + "<span style='font-size:16px'>" + response.text + " " + "Error found " + "</span>",
                                text: "Error is" + " " + "<small style='color:#F8BB86'>" + response.error[i] + "</small>",
                                html: true,
                                type: "error",
                            });
                        }
                    }
                }

            }
        });
    });
    $('#round_off').checkboxpicker();
    $('#allow_manual_entry').checkboxpicker();
    $('#is_blocked').checkboxpicker();
    $('#is_acitve').checkboxpicker();
    $(document).ready(function () {
        FillGlParentLedger($('#gl_account_type').val())
    });
    function FillGlParentLedger(id) {
        var Account_type = id;
        $.ajax({
            url: '@Url.Action("FillParentList", "GeneralLedger")',
            type: "GET",
            dataType: "JSON",
            data: { id: Account_type },
            success: function (Account_type) {

                $("#gl_parent_ledger_code").html(""); // clear before appending new list
                $("#gl_parent_ledger_code").append($('<option></option>').val(0).html("---Select---"));
                $.each(Account_type, function (i, cycle) {
                    $("#gl_parent_ledger_code").append(
                        $('<option></option>').val(cycle.gl_ledger_code).html(cycle.gl_ledger_name));
                });
            }
        });
    }


</script>


