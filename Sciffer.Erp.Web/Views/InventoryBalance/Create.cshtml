
@model Sciffer.Erp.Domain.ViewModel.ref_inventory_balance_VM

@using (Html.BeginForm("Create","InventoryBalance",FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <div id="InventoryBalanceHidden"></div>
        <div class="modal-body">
            <div class="form-group">
                <div class="row">
                    <div class="col-lg-6 col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.category_id, "Category *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                            <div class="col-md-4 col-sm-4 col-xs-12">
                                @Html.DropDownList("category_id", (System.Web.Mvc.SelectList)ViewBag.category_list, new { @class = "form-control validinput", @required = true, @onchange = "GetDocumentNumber(this.value);" })
                                @Html.ValidationMessageFor(model => model.category_id, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4 col-sm-4 col-xs-12">
                                @Html.EditorFor(model => model.doc_number, new { htmlAttributes = new { @class = "form-control  num validinput removedisabled", @disabled = "disabled", @required = true } })
                                @Html.ValidationMessageFor(model => model.doc_number, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6 col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.offset_account_id, "Offset Account  *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                            <div class="col-md-8 col-sm-8 col-xs-12">
                                @Html.DropDownList("offset_account_id", (System.Web.Mvc.SelectList)ViewBag.GeneralLedger, htmlAttributes: new { @class = "form-control validinput removedisabled", @disabled = "disaabled" })
                                @Html.ValidationMessageFor(model => model.offset_account_id, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-sm-6">
                        <label class="control-label col-md-4">
                            Header Remarks
                        </label>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.header_remarks, new { htmlAttributes = new { @class = "form-control  num", @required = true } })
                            @Html.ValidationMessageFor(model => model.header_remarks, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <label class="control-label col-md-4">
                            Posting Date<span class="required"> *</span>
                        </label>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.posting_date, new { htmlAttributes = new { @class = "form-control  postingdocumentdate postingdate validinput", @required = true } })
                            @Html.ValidationMessageFor(model => model.posting_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                @Html.HiddenFor(a => a.gl_ledger_code)
            </div>
            <br />
            <input type="hidden" id="productdetail" name="productdetail" />
            @*@Html.HiddenFor(a => a.Id)*@
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">

                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        <div class="col-md-12 col-sm-12 col-xs-12">
                            <button type="button" class="btn btn-primary" id="open_modal" style="float:right" data-toggle="modal" data-target="#myModal"><span class="glyphicon glyphicon-plus"></span>Add Details</button>
                        </div>
                    </div>
                </div>
            </div>


            <div class="row">
                <div class="table-responsive">
                    <table class="table table-responsive table-bordered table-striped" id="ContactGrid">
                        <thead>
                            <tr>
                                <th hidden><label>ID</label></th>
                                <th><label>Sr. No.</label></th>
                                <th hidden><label>Item Code</label></th>
                                <th><label>Item </label></th>
                                <th hidden><label>Plant_id</label></th>
                                <th><label>Plant</label></th>
                                <th hidden>Sloc id</th>
                                <th><label>SLoc</label></th>
                                <th hidden>Bucket id</th>
                                <th><label>Bucket</label></th>
                                <th><label>Batch</label></th>
                                <th><label>Qty</label></th>
                                <th hidden><label>UoM Id</label></th>
                                <th><label>UoM</label></th>
                                <th><label>Rate</label></th>
                                <th><label>Value</label></th>
                                <th><label>Line Remarks</label></th>
                                <th><label>Action</label></th>
                            </tr>
                        </thead>

                    </table>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <input type="submit" value="Create" class="btn btn-success" id="create" data-controller="InventoryBalance" onclick="TabletoJeson();" style="float:right" />
                </div>
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
</div>
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Inventory Details</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Item <span class="required">*</span>
                        </label>

                        <div class="col-md-7">
                            @Html.DropDownList("item_id", (System.Web.Mvc.SelectList)ViewBag.Item, "---Select---", new
                       {
                           @class = "form-control col-md-7 col-xs-12",
                           @onchange = "GetUnit(this.value)"
                       })

                        </div>
                    </div>
                </div>
                <br />

                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Plant *
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("plant_id", (System.Web.Mvc.SelectList)ViewBag.Plant, "---Select---", new
                       {
                           @class = "form-control col-md-7 col-xs-12"@*, @onchange = "GetUnit()", @style = "width: 100%;"*@ })
                        </div>
                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            SLoc *
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("sloc_id", (System.Web.Mvc.SelectList)ViewBag.Sloc, "---Select---", new
                       {
                           @class = "form-control col-md-7 col-xs-12"@*, @onchange = "GetUnit()", @style = "width: 100%;"*@ })
                        </div>
                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Bucket <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("bucket_id", (new System.Web.Mvc.SelectList(ViewBag.Bucket, "bucket_id", "bucket_name")), "--select--", htmlAttributes: new { @class = "form-control validator", required = "required" })
                        </div>
                    </div>

                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Batch
                        </label>
                        <div class="col-md-7">
                            <input type="text" class="form-control" name="batch" id="batch" />
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Quantity <span class="required">*</span>
                        </label>
                        <div class="col-md-4">
                            <input type="number" class="form-control" name="qty" id="qty" onchange="calculate()" />
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownList("uom_id", (System.Web.Mvc.SelectList)ViewBag.Uom, "---Select---", new { @class = "form-control col-md-7 col-xs-12" })
                        </div>
                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Rate <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control" name="rate" id="rate" onchange="calculate()" />
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Value <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control" disabled="disabled" name="value" id="value" onchange="calculate()" />
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Line Remarks
                        </label>
                        <div class="col-md-7">
                            <input type="text" class="form-control" name="line_remarks" id="line_remarks" />
                        </div>
                    </div>
                </div>
                <br />
            </div>
            <div class="modal-footer">
                <input type="hidden" id="srno" />
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="clearmodel();">Close</button>
                <button type="button" class="add btn btn-primary">Add </button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery.filedrop.js"></script>
    <script src="~/Scripts/RemoveUnexpectedFile.js"></script>
    <script src="~/Scripts/requirevalidation.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            var error=@Html.Raw(Json.Encode(ViewBag.error));
            if(error !="")
            {
                sweetAlert("",error,"error");
            }
            $("#offset_account_id").select2({
                placeholder: "Select Offset accoount",
                allowClear: true
            });
            $("#item_id").select2({
                placeholder: "Select Item",
                allowClear: true
            });
            $("#sloc_id").select2({
                placeholder: "Select Storage Location",
                allowClear: true
            });
            $("#plant_id").select2({
                placeholder: "Select Plant",
                allowClear: true
            });
            $("#bucket_id option[value=1]").remove();
            document.getElementById('posting_date').valueAsDate = new Date();
            GetDocumentNumber($('#category_id').val());

        });
        function GetDocumentNumber(id) {
            if (id != '') {
                $.ajax({
                    type: 'GET',
                    url: '/Generic/GetDocumentNumbering',
                    data: { id: id },
                    success: function (ITEM) {
                        $('#doc_number').val(ITEM);
                    },
                    error: function (emp) {
                        $('#doc_number').val('');
                    }
                });
            }
            else {
                $('#doc_number').val('');
            }
        }
        $(function () {

            $('#dropZone').filedrop({

                url: '@Url.Action("UploadFiles", "InventoryBalance")',
                paramname: 'files',
                maxFiles: 5,

                dragOver: function () {
                    $('#dropZone').css('background', 'blue');
                },
                dragLeave: function () {
                    $('#dropZone').css('background', 'gray');
                },
                drop: function () {
                    $('#dropZone').css('background', 'gray');
                },
                afterAll: function () {
                    $('#dropZone').html('');

                },
                uploadFinished: function (i, file, response, time) {

                    if (response.Status == "Failed") {
                        sweetAlert("File cannot be uploaded", "Error found " + response.text, "error");
                    }
                    if (response.Status == "Success") {
                        $('#uploadResult').append('<li>' + file.name + '</li>');
                        sweetAlert('File Upload Sucessfully');
                    }

                }
            });
        });
        function onSelect2(args) {
            var id = "";
            var matches = args.value.split("-");
            id = matches[0];
            GetUnit(id);
        }
        $("#sloc_id").html("");
        $("#sloc_id").append($('<option></option>').val("").html("---Select---"));
        $('#plant_id').change(function () {
            GetStorageLocation($('#plant_id').val());
        });
        function GetUnit(id) {
            if (id != '') {
                $.ajax({
                    type: 'GET',
                    url: '/Generic/GetUnitofItem',
                    data: { id: id },
                    success: function (ITEM) {
                        $("#uom_id").val(ITEM.item);
                    },
                    error: function (emp) {
                        $('#uom_id').val('');
                    }
                });
            }
            else {
                $('#uom_id').val('');
            }

        }

        $('#open_modal').click(function () {
            clearmodel();
        });

        function calculate() {
            var qty = $("#qty").val();
            if (qty == '') {
                qty = 1;
            }
            var rate = $("#rate").val();
            var y = (qty * rate);
            $("#value").val(y);
            //$("#value").prop('disabled', 'disabled');
        }

        $(".add").on("click", function (event) {
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            var item_id = $("#item_id").val();
            var item_name = $('#item_id option:selected').text();
            var plant_id = $("#plant_id").val();
            var plant = $('#plant_id').find('option:selected').text();
            var sloc_id = $("#sloc_id").val();
            var sloc = $('#sloc_id').find('option:selected').text();
            var bucket_id = $("#bucket_id").val();
            var bucket = $('#bucket_id').find('option:selected').text();
            var batch = $("#batch").val();
            var qty = $("#qty").val();
            var uom_id = $("#uom_id").val();
            var uom_name = $('#uom_id').find('option:selected').text();
            var rate = $("#rate").val();
            var value = $("#value").val();
            var line_remarks = $("#line_remarks").val();

            if (item_id == '') {
                swal("", "Please Select Item!", "error");
                return false;
            }
            if (plant_id == '') {
                swal("", "Please enter Plant!", "error");
                return false;
            }
            if (sloc_id == '') {
                swal("", "Please enter SLoc!", "error");
                return false;
            }
            if (bucket_id == '') {
                swal("", "Please Enter Bucket!", "error");
                return false;
            }

            if (qty == '') {
                swal("", "Please Enter Quantity!", "error");
                return false;
            }
            if (uom_id == '') {
                swal("", "Please Select UoM!", "error");
                return false;
            }
            if (rate == '') {
                swal("", "Please Enter Rate!", "error");
                return false;
            }

            if ($("#srno").val() == "") {
                t.fnAddData([0, rowCount + 1, item_id, item_name, plant_id, plant, sloc_id, sloc, bucket_id, bucket, batch, qty, uom_id, uom_name, rate, value, line_remarks, ''
                ]);
            }
            else {
                var cc = $("#srno").val();
                cc = parseInt(cc) - 1;
                t.fnUpdate([0, cc + 1, item_id, item_name, plant_id, plant, sloc_id, sloc, bucket_id, bucket, batch, qty, uom_id, uom_name, rate, value, line_remarks, ''], cc)
            }

            clearmodel();
            return true;
        });
        function clearmodel() {
            $("#item_id").val('').trigger('change');
            $("#plant_id").val('').trigger('change');
            $("#sloc_id").val('').trigger('change');
            $("#bucket_id").val('');
            $("#batch").val('');
            $("#qty").val('');
            $("#uom_id").val('').trigger('change');
            $("#rate").val('');
            $("#value").val('');
            $("#line_remarks").val('');

        }

        $('#ContactGrid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            aoColumns: [
                        { sname: "a", bVisible: false },
                        { sname: "b" },
                        { sname: "d", bVisible: false },
                        { sname: "e" },
                        { sname: "f", bVisible: false },
                        { sname: "g" },
                        { sname: "h", bVisible: false },
                        { sname: "i" },
                        { sname: "j", bVisible: false },
                        { sname: "k" },
                        { sname: "i" },
                        { sname: "j" },
                        { sname: "l", bVisible: false },
                        { sname: "m" },
                        { sname: "n" },
                        { sname: "o" },
                        { sname: "p" },
                        {
                            sname: "q", sWidth: "8%",
                            bSortable: false,
                            mRender: function (data, type, full) {
                                return '<img class="edit" src="../images/writing_file.png" height="20px" width="25px" alt="Edit" onclick="editRow(' + full[1] + ');" /><img class="delete" src="../images/remove.png" height="20px" width="25px" alt="Delete" onclick="deleteRow(' + full[1] + ');" />';
                            }
                        }

            ]

        });


        function editRow() {
            $('#myModal').modal('show');
            var t = $('#ContactGrid').DataTable()
            var cc = parseInt(arguments[0]) - 1;
            $("#srno").val(t.fnGetData(cc)[0]);
            $("#item_id").val(t.fnGetData(cc)[2]).trigger('change');
            $('#plant_id').val(t.fnGetData(cc)[4]).trigger('change');
            $('#sloc_id').val(t.fnGetData(cc)[6]).trigger('change');
            $('#bucket_id').val(t.fnGetData(cc)[8]);
            $('#batch').val(t.fnGetData(cc)[10]);
            $("#qty").val(t.fnGetData(cc)[11]);
            $("#uom_id").val(t.fnGetData(cc)[12]);
            $("#rate").val(t.fnGetData(cc)[14]);
            $("#value").val(t.fnGetData(cc)[15]);
            $('#line_remarks').val(t.fnGetData(cc)[16]);

        }

        $('#ContactGrid').on('click', '.delete', function () {

            var t = $('#ContactGrid').DataTable();
            var id = $(this).parent('td').parent('tr').index();


            var deleteids = t.fnGetData(id)[1];
            swal({
                title: "Are you sure?",

                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: true
            },
            function (isConfirm) {
                if (isConfirm) {

                    $("#deleteids").val(deleteids + "~");
                    t.fnDeleteRow(id);
                }
            });
        });
        function TabletoJeson() {
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            for (i = 0; i < rowCount; i++) {
                $("#InventoryBalanceHidden").append('<input type="hidden" id="item_id' + i + '" name="item_id">');
                $("#InventoryBalanceHidden").append('<input type="hidden" id="plant_id' + i + '" name="plant_id">');
                $("#InventoryBalanceHidden").append('<input type="hidden" id="sloc_id' + i + '" name="sloc_id">');
                $("#InventoryBalanceHidden").append('<input type="hidden" id="bucket_id' + i + '" name="bucket_id">');
                $("#InventoryBalanceHidden").append('<input type="hidden" id="batch' + i + '" name="batch">');
                $("#InventoryBalanceHidden").append('<input type="hidden" id="qty' + i + '" name="qty">');
                $("#InventoryBalanceHidden").append('<input type="hidden" id="uom_id' + i + '" name="uom_id">');
                $("#InventoryBalanceHidden").append('<input type="hidden" id="rate' + i + '" name="rate">');
                $("#InventoryBalanceHidden").append('<input type="hidden" id="value' + i + '" name="value">');
                $("#InventoryBalanceHidden").append('<input type="hidden" id="line_remarks' + i + '" name="line_remarks">');
                $("#InventoryBalanceHidden").append('<input type="hidden" id="inventory_balance_detail_id' + i + '" name="inventory_balance_detail_id">');
                $("#inventory_balance_detail_id" + i).val(t.fnGetData(i)[0]);
                $("#item_id" + i).val(t.fnGetData(i)[2]);
                $("#plant_id" + i).val(t.fnGetData(i)[4]);
                $("#sloc_id" + i).val(t.fnGetData(i)[6]);
                $("#bucket_id" + i).val(t.fnGetData(i)[8]);
                $("#batch" + i).val(t.fnGetData(i)[10]);
                $("#qty" + i).val(t.fnGetData(i)[11]);
                $("#uom_id" + i).val(t.fnGetData(i)[12]);
                $("#rate" + i).val(t.fnGetData(i)[14]);
                $("#value" + i).val(t.fnGetData(i)[15]);
                $("#line_remarks" + i).val(t.fnGetData(i)[16]);
            }
        }


        function GetStorageLocation(id) {
            if (id == "") {
                id = 0;
            }
            $.ajax({
                url: '/Generic/GetStorageLocation',
                type: "GET",
                dataType: "JSON",
                data: { id: id },
                success: function (id) {
                    $("#sloc_id").html(""); // clear before appending new list
                    $("#sloc_id").append($('<option></option>').val("").html("---Select---"));
                    $.each(id, function (i, cycle) {
                        $("#sloc_id").append(
                            $('<option></option>').val(cycle.storage_location_id).html(cycle.storage_location_name));
                    });
                }
            });
        }

    </script>
}
