@model IEnumerable<Sciffer.Erp.Domain.ViewModel.material_requision_note_vm>
@using Newtonsoft.Json
@{
    ViewBag.Title = "Create";
}
<div class="loading">Loading &#8230;</div>

<br />
<div id="searchresult" class="row">
    @(Html.EJ().Grid<object>("Grid")
       .Datasource(ds => ds.Json((IEnumerable<object>)ViewBag.DataSource).UpdateURL(Url.Action("ChangeApprovedStatus", "MaterialRequisitionNote"))
                       .Adaptor(AdaptorType.RemoteSaveAdaptor).Offline(false))
        .FilterSettings(filter => { filter.FilterType(FilterType.Menu); })
        .EditSettings(edit => { edit.AllowAdding().AllowDeleting().AllowEditing(); })
        .EnableAltRow()
        .AllowPaging().PageSettings(a => a.PageSize(20))
        .ToolbarSettings(toolbar =>
        {
            toolbar.ShowToolbar().ToolbarItems(items =>
            {

                items.AddTool(ToolBarItems.Edit);
                items.AddTool(ToolBarItems.Update);
                items.AddTool(ToolBarItems.Cancel);
            });
        })
        .AllowSorting()
    .ContextMenuSettings(contextMenu =>
    {
        contextMenu.EnableContextMenu();
        contextMenu.DisableDefaultItems();
        contextMenu.CustomContextMenuItems(new List<Syncfusion.JavaScript.Models.CustomContexMenuItems>() { new Syncfusion.JavaScript.Models.CustomContexMenuItems() { Id = "MyMenu", Text = "Show MRN" } });
    })
        .IsResponsive()
        .AllowFiltering()
        .AllowReordering()
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .Columns(col =>
        {
            col.Field("material_requision_note_id").Width("15%").Width("15%").HeaderText("ID").IsPrimaryKey(true).Visible(false).Width(20).Add();
            col.Field("category_name").Width("15%").HeaderText("Category").AllowEditing(false).Visible(false).Add();
            col.Field("number").Width("15%").HeaderText("Number").AllowEditing(false).Add();
            col.Field("posting_date").Width("15%").HeaderText("Posting Date").Format("{0:dd/MM/yyyy}").AllowEditing(false).Add();
            col.Field("document_date").Width("15%").HeaderText("Document Date").Visible(false).Format("{0:dd/MM/yyyy}").AllowEditing(false).Add();
            col.Field("requirement_by_name").Width("15%").HeaderText("Requirement by").AllowEditing(false).Add();
            col.Field("plant_name").Width("15%").HeaderText("Plant").AllowEditing(false).Add();
            col.Field("remarks").Width("15%").HeaderText("Remarks").Visible(false).AllowEditing(false).Add();
            col.Field("receiving_sloc_name").Width("15%").HeaderText("Receiving Sloc").AllowEditing(false).Add();
            col.Field("type_name").Width("15%").HeaderText("Type").AllowEditing(false).Visible(false).Add();
            col.Field("sending_sloc_name").Width("15%").HeaderText("Sending Sloc").AllowEditing(false).Visible(false).Add();         
            col.Field("approval_status").HeaderText("Status").ForeignKeyField("approval_status")
            .ForeignKeyValue("approval_status_name").DataSource((IEnumerable<object>)ViewBag.status_list).AllowEditing(true)
            .TextAlign(TextAlign.Left).Add();
            col.Field("approval_comments").HeaderText("Comments").Width(150).Add();
        })
        .ClientSideEvents(eve =>
        {
            eve.ActionComplete("complete").EndAdd("EndProcess").EndDelete("EndProcess").EndEdit("EndProcess");
            eve.ContextClick("contextclick");
        })
    )
</div>
<br />
<br>
<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
</div>

<script>

    function EndProcess()
    {
        var gridObj = $("#Grid").ejGrid("instance");
        gridObj.refreshContent();
    }
    $('#approval_status').val("0");
    $("#search").click(function () {
        AdvanceSearch();
    });
    function AdvanceSearch()
    {
        var id = $("#approval_status").val();
        $(".loading").show();
        $.ajax({
            url: "@Url.Action("GetApprovedStatus", "MaterialRequisitionNote")",
            method: "Post",
        cache: false,
        data: {id:id},
        success: function (data) {
            console.log(data);
            $(".loading").hide();
            $('#searchresult').empty().append(data);
        },
        error: function (http) {
            console.log(XMLHttpRequest);
        }
    });
    }
    function contextclick(args) {

            if (args.text == "Show MRN") {
               var url = '@Url.Action("Edit", "MaterialRequisitionNote")?id=' + this.getSelectedRecords()[0].material_requision_note_id;
                window.open(url);
            }


    };
</script>

