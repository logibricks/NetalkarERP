
@model Sciffer.Erp.Domain.ViewModel.rejection_receipt_VM
@{
    ViewBag.Title = "Create";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div id="ProdReceiptDetails"></div>
    <div class="form-horizontal">
        <div class="modal-body">
            <div class="row">
                <div class="col-lg-6 col-sm-6" hidden>
                    <div class="form-group">
                        @Html.LabelFor(model => model.prod_order_id, "Production Order", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @*@Html.DropDownList("prod_order_id", Enumerable.Empty<SelectListItem>
                                         (), "---Select---", new { @class = "form-control validinput removedisabled", @required = true, @disabled = "disabled" })
                                @Html.ValidationMessageFor(model => model.prod_order_id, "", new { @class = "text-danger" })*@
                            @Html.EditorFor(model => model.prod_order_id, new { htmlAttributes = new { @class = "form-control validinput" } })
                            @Html.ValidationMessageFor(model => model.prod_order_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        <input type="button" value="Select Production Order" name="purchaseorder" id="purchaseorder" class="btn btn-primary" />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.category_id, "Category *", htmlAttributes: new { Class = "control-label col-md-4 " })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            <input type="hidden" id="is_active" name="is_active" value="true" />
                            @Html.DropDownList("category_id", (System.Web.Mvc.SelectList)ViewBag.categorylist, htmlAttributes: new { Class = "form-control category setPlant", @onchange = "GetDocumentNumber(this.value)" })
                            @Html.ValidationMessageFor(model => model.category_id, "", new { Class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.plant_id, "Plant *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("plant_id", (System.Web.Mvc.SelectList)ViewBag.plantlist, "--Select--", htmlAttributes: new { @class = "form-control validinput removedisabled selectedbycategory", @required = true, @disabled = "disabled", @onchange = "GetStorageLocation(this.value)" })
                            @Html.ValidationMessageFor(model => model.plant_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.posting_date, "Posting Date *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.posting_date, new { htmlAttributes = new { @class = "form-control validinput postingdocumentdate" } })
                            @Html.ValidationMessageFor(model => model.posting_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.document_date, "Document Date *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.document_date, new { htmlAttributes = new { @class = "form-control validinput" } })
                            @Html.ValidationMessageFor(model => model.document_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.header_remarks, "Remarks", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.header_remarks, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.header_remarks, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.storage_location_id, "Parent SLoc", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("storage_location_id", Enumerable.Empty<SelectListItem>
                                (), "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.storage_location_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <input type="hidden" id="deleteids" name="deleteids" />
            @*<div class="row">
                    <div class="col-lg-6 col-sm-6">
                        <div class="form-group">
                        </div>
                    </div>
                    <div class="col-lg-6 col-sm-6">
                        <div class="form-group">
                            <div class="col-md-12 col-sm-12 col-xs-12">
                                <button type="button" class="btn btn-primary" id="open_modal" style="float:right"><span class="glyphicon glyphicon-plus"></span>Add Details</button>
                            </div>
                        </div>
                    </div>
                </div>*@

            <div class="row">
                <div class="table-responsive" style="max-height: calc(100vh - 250px); overflow-y: auto;">
                    <table class="table table-responsive table-bordered table-striped" id="ContactGrid">
                        <thead>
                            <tr>
                                <th hidden><label>ID</label></th>
                                <th><label>Sr. No.</label></th>
                                <th><label>Production Order</label></th>
                                <th hidden><label>Out Item ID</label></th>
                                <th><label>Out Item</label></th>
                                <th hidden><label>UoM ID</label></th>
                                <th><label>UoM</label></th>
                                <th hidden><label>SLoc ID</label></th>
                                <th><label>SLoc</label></th>
                                <th hidden><label>Batch ID</label></th>
                                <th><label>Batch No</label></th>
                                <th hidden><label>Tag ID</label></th>
                                <th><label>Tag No</label></th>
                                <th><label>Prod Order Detail ID</label></th>
                                <th><label>PO Req Qty</label></th>
                                <th hidden><label>Reason ID</label></th>
                                <th><label>Reason</label></th>
                                <th><label>Action</label></th>
                            </tr>
                        </thead>

                    </table>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <input type="submit" value="Create" class="btn btn-success" id="create" data-controller="RejectionReceipt" style="float:right" />
                </div>
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
</div>

<div class="modal fade" id="myModal1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content" style="align-content:center;width:900px">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Purchase Order</h4>
            </div>
            <div class="modal-body" style="max-height:500px;overflow-y:auto">
                <div class="row">
                    <div class="col-lg-6 col-sm-6">
                        <div class="form-group">
                            <label class="control-label col-md-4">
                                Select Item
                            </label>
                            <div class="col-md-8 col-sm-8 col-xs-12">
                                @Html.DropDownList("item_id", (System.Web.Mvc.SelectList)ViewBag.itemlist, "--Select--", new { @class = "form-control", @onchange = "GetProductionOrderList(this.value);" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6 col-sm-6">
                        <div class="form-group">
                            <label class="control-label col-md-4">
                                Production Order
                            </label>
                            <div class="col-md-8 col-sm-8 col-xs-12">
                                @Html.DropDownList("prod_order_id1", (System.Web.Mvc.SelectList)ViewBag.ProdOrdList, new { @class = "form-control", multiple = "multiple", }) @*@onchange = "GetProductionOrder(this.value);"*@
                                @*@Html.DropDownList("prod_order_id1", Enumerable.Empty<SelectListItem>
                                    (), new { @class = "form-control ", @multiple = "multiple", @onchange = "GetProductionOrder(this.value)", })*@
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-lg-6 col-sm-6">
                        <div class="form-group">
                            <label class="control-label col-md-4">
                                From Number
                            </label>
                            <div class="col-md-8 col-sm-8 col-xs-12">
                                <input type="number" id="fromnumber" class="form-control" />
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6 col-sm-6">
                        <div class="form-group">
                            <label class="control-label col-md-4">
                                To Number
                            </label>
                            <div class="col-md-8 col-sm-8 col-xs-12">
                                <input type="number" id="tonumber" class="form-control" />
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-lg-10 col-sm-10">
                        <div class="form-group">
                            <label class="control-label col-md-2">
                                Select reason
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                @Html.DropDownList("selectAllReasons", Enumerable.Empty<SelectListItem>(), "--Select--", new { @class = "form-control" })
                            </div>
                            <div class="col-md-2 col-sm-2 col-xs-12">
                                <button class="btn btn-success" onclick="SelectAllReasonsInTable()">Select For All</button>
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <div class="table-responsive" style="max-height: calc(100vh - 250px); overflow-y: auto;">
                            <table class="table table-responsive table-bordered table-striped" id="pogrid">
                                <thead>
                                    <tr>
                                        <th><label hidden>ID</label></th>
                                        <th><label>Sr. No.</label></th>
                                        <th><label>Production Order</label></th>
                                        <th hidden><label>Out Item ID</label></th>
                                        <th><label>Out Item</label></th>
                                        <th hidden><label>UoM ID</label></th>
                                        <th><label>UoM</label></th>
                                        <th hidden><label>SLoc ID</label></th>
                                        <th><label>SLoc</label></th>
                                        <th hidden><label>Plant ID</label></th>
                                        <th hidden><label>Item Batch ID</label></th>
                                        <th><label>Batch No</label></th>
                                        <th hidden><label>Tag ID</label></th>
                                        <th><label>Tag No</label></th>
                                        <th><label>PO Balance Quantity</label></th>
                                        <th><label>Reason</label></th>
                                        <th hidden><label>reason_id</label></th>
                                        <th hidden><label>reason</label></th>
                                        <th><label>Root Cause Details</label></th>
                                        <th><label>Non-Conforming Status</label></th>
                                        <th><input type="checkbox" name="select_all" value="1" id="example-select-all"></th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="addSALES btn btn-primary" disabled="disabled">Add</button>
            </div>
        </div>
    </div>
</div>
<input type="hidden" id="storage_location_id1" />
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Price Details</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Item <span class="required">*</span>
                        </label>

                        <div class="col-md-7">
                            @Html.DropDownList("out_item_id", (System.Web.Mvc.SelectList)ViewBag.itemlist, "---Select---", new
                            {
                            @class = "form-control col-md-7 col-xs-12",
                            @disabled = "disabled",
                            @onchange = "GetUnit(this.value)"
                            })
                        </div>
                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Quantity <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control" name="quantity" id="quantity" onchange="calculate()" readonly="readonly" />
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            UoM  <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("uom_id", (new System.Web.Mvc.SelectList(ViewBag.UOM, "UOM_ID", "UOM_NAME")), "--select--", htmlAttributes: new { @class = "form-control validator", @disabled = "disabled", required = "required" })
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Batch  <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("batch_id", Enumerable.Empty<SelectListItem>(), "---Select---", new { @class = "form-control", @disabled = "disabled", })
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Tag  <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("tag_id", Enumerable.Empty<SelectListItem>(), "--select--", new { @class = "form-control validator", @disabled = "disabled", required = "required" })
                        </div>
                    </div>
                </div>
                <br />
                <div class="modal-footer">
                    <input type="hidden" id="sr_no" />
                    <input type="hidden" id="prod_order_detail_id" />
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="clearmodel();">Close</button>
                    <button type="button" class="add btn btn-primary">Add </button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="loading">Loading&#8230;</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript" src="~/Scripts/jquery.dataTables1.10.9.min.js"></script>
    <script type="text/javascript" src="~/Scripts/1.9.4.jquery.dataTables.min.js"></script>
    <script src="~/Scripts/requirevalidation.js"></script>
    <script src="~/Scripts/jquery.filedrop.js"></script>
    <script type="text/javascript">
    var checkedarray = [];
    $(".loading").hide();
    var error=@Html.Raw(Json.Encode(ViewBag.error));
    if(error !="")
    {
        sweetAlert("",error,"error");
    }
    //$("#create").click(function(){
    //    $("#create").hide();
    //    $(".loading").show();
    //})
    $('[id*=prod_order_id1]').multiselect({
        includeSelectAllOption: false,
        enableFiltering: true,
        maxHeight: '200',
        enableCaseInsensitiveFiltering: true,
        allowClear: true,
        maximumResultsForSearch: 1,
        numberDisplayed: 0,
    });
    $("#item_id").select2({
        placeholder: "Select Item",
        allowClear: true
    });
    //$("#tonumber").change(function ()
    $(document).on('change', '#tonumber', function () {
        var fromnumber = parseFloat($("#fromnumber").val());
        var tonumber = parseFloat($("#tonumber").val());

        if (fromnumber <= tonumber) {

            checkedarray.length = 0;
            while (fromnumber <= tonumber) {
                var index = fromnumber;
                $("#batchselect" + index).prop('checked', true);
                checkedarray.push(index - 1);
                $('.addSALES ').removeAttr('disabled');
                fromnumber = fromnumber + 1;
            }
        }
        else {
            swal("", "Enter From number less then To number.", "error")
        }
    })
    $("#purchaseorder").on("click", function (event) {
        var t = $('#pogrid').DataTable();
        t.fnClearTable();
        $("#prod_order_id1").val("").trigger("change");
        $("#tonumber").val('');
        $("#fromnumber").val("");
        $('#myModal1').modal('show');
        $('#example-select-all').attr('checked', false);
    })
    $("#plant_id").select2({
        placeholder: "Select Plant",
        allowClear: true
    });
    $("#out_item_id").select2({
        placeholder: "Select Item",
        allowClear: true
    });
    //$("#prod_order_id1").select2({
    //    placeholder: "Select Purchase Order",
    //    allowClear: true
    //});

    $(document).ready(function () {
        document.getElementById('posting_date').valueAsDate = new Date();
        document.getElementById('document_date').valueAsDate = new Date();

    });
    function calculate() {
        var qty = $("#quantity").val();
        if (qty = "") {
            qty = 1;
        }
        var rate = $("#rate").val();
        if (rate = "") {
            rate = 1;
        }
        $("#value").val(qty * rate);
    }
    function onSelect2(args) {
        var id = "";
        var id = args.value.split("-")[0];
        GetUnit(id);
    }
    function GetUnit(id) {

        if (id != '') {
            $.ajax({
                type: 'GET',
                url: "@Url.Action("GetUnitofItem", "Generic")",
                data: { id: id },
            success: function (ITEM) {
                $('#uom_id').val(ITEM.item);
            },
            error: function (emp) {
                $('#uom_id').val('');
            }
        });
    }
    else {
                $('#uom_id').val('');
    }

    }
    $('#open_modal').click(function () {
        if ($("#Vendor_code").val() == '') {
            swal("", "Select Vendor.", "error");
        }
        else {
            $('#myModal').modal('show');
            clearmodel();
        }
    });

    $(".add").on("click", function (event) {
        var t = $('#ContactGrid').DataTable()
        var rowCount = t.fnGetData().length;
        var item_id = $("#out_item_id").val();
        var item_name = $('#out_item_id option:selected').text();
        var quantity = $("#quantity").val();
        var uom_id = $("#uom_id").val();
        var uom_name = $('#uom_id').find('option:selected').text();
        var sloc_id = $("#storage_location_id").val();
        var sloc_name = $('#storage_location_id').find('option:selected').text();
        var batch_id = $("#batch_id").val();
        var batch_no = $('#batch_id').find('option:selected').text();
        var tag_id = $("#tag_id").val();
        var tag_no = $('#tag_id').find('option:selected').text();
        var prod_order_detail_id = $("#prod_order_detail_id").val();
        if (item_id == '') {
            swal("", "Please Select Item Name.", "error");
            return false;
        }
        if (uom_id == '') {
            swal("", "Please Select UOM Name.", "error");
            return false;
        }
        if (quantity == '') {
            swal("", "Please Enter Quantity.", "error");
            return false;
        }
        if (batch_no == '') {
            swal("", "Please Enter Batch.", "error");
            return false;
        }
        if (tag_no == '') {
            swal("", "Please Enter Tag.", "error");
            return false;
        }
        if ($("#sr_no").val() == "") {
            t.fnAddData(['0', rowCount + 1, prod_order_no, item_id, item_name, uom_id, uom_name, sloc_id, sloc_name, batch_id, batch_no, tag_id, tag_no, prod_order_detail_id, quantity, ''
            ]);
        }
        else {
            var cc = $("#sr_no").val();
            cc = parseInt(cc) - 1;
            t.fnUpdate(['0', cc + 1, prod_order_no, item_id, item_name, uom_id, uom_name, sloc_id, sloc_name, batch_id, batch_no, tag_id, tag_no, prod_order_detail_id, quantity, ''], cc)
        }
        clearmodel();
        return true;
    });
    function clearmodel() {
        $("#sr_no").val('');
        $("#out_item_id").val('').trigger('change');
        $("#uom_id").val('');
        $("#quantity").val('');
        $("#batch_no").val('');
        // $("#discount_type_id").val('');
        $("#tag_no").val('');
    }
    $('#ContactGrid').DataTable({
        "bPaginate": false,
        "ordering": false,
        "bfooter": false,
        "info": false,
        "bLengthChange": false,
        "bAutoWidth": false,
        "bFilter": false,
        "bSort": false,
        aoColumns: [
            { sname: "a", bVisible: false },
            { sname: "b" },
            { sname: "c" },
            { sname: "d", bVisible: false },
            { sname: "e" },
            { sname: "f", bVisible: false },
            { sname: "g", bVisible: true },
            { sname: "h", bVisible: false },
            { sname: "i" },
            { sname: "j", bVisible: false },
            { sname: "k", bVisible: true },
            { sname: "l", bVisible: false },
            { sname: "m" },
            { sname: "n", bVisible: true },
            { sname: "o", bVisible: true },
            { sname: "p", bVisible: false },
            { sname: "q", bVisible: true },
            {
                sname: "r", sWidth: "8%",
                bSortable: false,
                mRender: function (data, type, full) {
                    return '<img class="edit" src="../images/writing_file.png" height="20px" width="25px" alt="Edit" onclick="editRow(' + full[1] + ');" /><img class="delete" src="../images/remove.png" height="20px" width="25px" alt="Delete" onclick="deleteRow(' + full[1] + ');" />';
                }
            }]

    });
    function editRow() {
        $('#myModal').modal('show');
        var t = $('#ContactGrid').DataTable()
        var cc = parseInt(arguments[0]) - 1;
        $("#sr_no").val(t.fnGetData(cc)[1])
        $("#prod_order_detail_id").val(t.fnGetData(cc)[12]);
        $("#out_item_id").val(t.fnGetData(cc)[2]).trigger('change');
        $("#quantity").val(t.fnGetData(cc)[13]);
        $('#uom_id').val(t.fnGetData(cc)[5]);
        $('#batch_id').val(t.fnGetData(cc)[8]);
        $('#tag_id').val(t.fnGetData(cc)[10]);
    }
    $('#ContactGrid').on('click', '.delete', function () {

        var t = $('#ContactGrid').DataTable();
        var id = $(this).parent('td').parent('tr').index();
        var deleteids = t.fnGetData(id)[1];
        swal({
            title: "Are you sure?",

            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Yes, delete it!",
            closeOnConfirm: true
        },
         function (isConfirm) {
             if (isConfirm) {
                 $("#deleteids").val(deleteids + "~");
                 t.fnDeleteRow(id);
             }
         });
    });

    //function TabletoJeson() {
    //    var t1 = $('#ContactGrid').DataTable()
    //    var rowCount = t1.fnGetData().length;
    //    $("#ProdReceiptDetails").empty();
    //    for (i = 0; i < rowCount; i++) {
    //        $("#ProdReceiptDetails").append('<input type="hidden" id="prod_receipt_detail_id' + i + '" name="prod_receipt_detail_id" value="' + t1.fnGetData(i)[0] + '">');
    //        $("#ProdReceiptDetails").append('<input type="hidden" id="out_item_id' + i + '" name="out_item_id" value="' + t1.fnGetData(i)[2] + '">');
    //        $("#ProdReceiptDetails").append('<input type="hidden" id="uom_id' + i + '" name="uom_id"  value="' + t1.fnGetData(i)[4] + '">');
    //        $("#ProdReceiptDetails").append('<input type="hidden" id="sloc_id' + i + '" name="sloc_id" value="' + t1.fnGetData(i)[6] + '">');
    //        $("#ProdReceiptDetails").append('<input type="hidden" id="batch_id' + i + '" name="batch_id" value="' + t1.fnGetData(i)[8] + '">');
    //        $("#ProdReceiptDetails").append('<input type="hidden" id="tag_id' + i + '" name="tag_id" value="' + t1.fnGetData(i)[10] + '">');
    //        $("#ProdReceiptDetails").append('<input type="hidden" id="prod_order_detail_id' + i + '" name="prod_order_detail_id"  value="' + t1.fnGetData(i)[12] + '">');
    //        $("#ProdReceiptDetails").append('<input type="hidden" id="po_quantity' + i + '" name="po_quantity"  value="' + t1.fnGetData(i)[13] + '">');
    //    }
    //}

    function GetStorageLocation(id) {
        if (id == "") {
            id = 0;
        }
        $.ajax({
            url: "@Url.Action("GetStorageLocation", "Generic")",
            type: "GET",
        dataType: "JSON",
        data: { id: id },
        cache: false,
        success: function (storage) {
            $("#storage_location_id").html(""); // clear before appending new list
            $("#storage_location_id").append($('<option></option>').val('0').html("---Select---"));
            $.each(storage, function (i, cycle) {
                $("#storage_location_id").append(
                $('<option></option>').val(cycle.storage_location_id).html(cycle.storage_location_name));
            });
            $("#storage_location_id").val($("#storage_location_id1").val()).trigger('change');
        }
    });
    }

    $('#pogrid').DataTable({
        "bPaginate": false,
        "ordering": false,
        "bfooter": false,
        "info": false,
        "bLengthChange": false,
        "bAutoWidth": false,
        "bFilter": false,
        "bSort": false,
        "columns": [
            { "data": "prod_order_detail_id", bVisible: false },
              { "data": "rowIndex", bVisible: true },
              { "data": "prod_order_no", bVisible: true },
              { "data": "out_item_id", bVisible: false },
              { "data": "out_item_name", bVisible: true },
              { "data": "uom_id", bVisible: false },
              { "data": "uom_name", bVisible: true },
              { "data": "sloc_id", bVisible: false },
              { "data": "sloc_name", bVisible: true },
              { "data": "plant_id", bVisible: false },
              { "data": "batch_id", bVisible: false },
              { "data": "batch_number", bVisible: true },
              { "data": "tag_id", bVisible: false },
              { "data": "tag_no", bVisible: true },
              { "data": "balance_qty", bVisible: true },
              { "data": "reason", bVisible: true, "title": "Reason",sClass:"right","bSortable": false, "defaultContent": "",
                  mRender:function (data, type, full) {
                      if(type=="display"){
                          var options = '<option value="0">--Select--</option>' ;
                         // console.log(reason_list);
                          $.each(reason_list, function (i, cycle) {
                              options = options + '<option value='+cycle.REASON_DETERMINATION_ID+'>'+cycle.REASON_DETERMINATION_NAME+'</option>';
                          });
                          var x = '<select class="form-control reasonSeparatedGrid" data-index=' + ((full.rowIndex) - 1) +' id="reason'+ (full.rowIndex) +'">'+
                                  options
                                  +'<select/>';
                          //$('#sloc'+ (full.rowIndex) +'').val(full.reason).trigger('change');
                          return x ;
                      }
                  }
              },
              { "data": "reason_id",  "bSortable": true,"defaultContent": "", bVisible: false},
              { "data": "reason",  "bSortable": true,"defaultContent": "", bVisible: false},
              { "data": "root_cause_details", bVisible: true },
              { "data": "nc_status_desc", bVisible: true },
              { "data": "rowIndex", sWidth: "4%", 'render': function (data, type, full) { return '<input type="checkbox" id="batchselect' + full.rowIndex + '" data-index=' + (full.rowIndex - 1) + '  class="price check"/>' } },

        ]
    });
    $(document).on('change', '.reasonSeparatedGrid', function () {
        var t = $('#pogrid').DataTable();
        var index = $(this).attr('data-index');
        var reason_id = $(this).find('option:selected').val();
        var reason = $(this).find('option:selected').text();
        var parsedIndex = parseInt(index);
        t.fnUpdate(reason_id, parseInt(index), 16);
        t.fnUpdate(reason, parseInt(index), 17);
    })
    function reasonList(){

        $.ajax({
            url: '@Url.Action("GetReasonListByCode", "Generic")',
            type: "GET",
            dataType: "JSON",
            async: false,
            cache:false,
            data : {code : 'REJECTION_RECEIPT'},
            success: function (storage) {
                //console.log(storage)
                reason_list = storage;
                var mk = '<option value="0">--select--</option>';
                //$("#"+ reason + i).empty();
                for (var x = 0; x < storage.length; x++) {
                    mk += '<option value= "' + storage[x].REASON_DETERMINATION_ID + '">' + storage[x].REASON_DETERMINATION_NAME + '</option>';
                }
                //$("#"+reason+ i).append(mk);
                $("#selectAllReasons").empty();
                $("#selectAllReasons").append(mk);
            }
        });
    }

    $(document).on('change', '.quant', function () {
        var t = $('#pogrid').DataTable();
        var index = $(this).attr('data-index');
        var _quant_id = $(this).val();
        var _quant = $(this).find('option:selected').text();
        if (_quant_id != '') {
            _quant = (_quant);
        }
        var parsedIndex = parseInt(index) - 1;
        t.fnUpdate(_quant_id, parsedIndex, 12);
        // t.fnUpdate(_ntag_reason, parsedIndex, 18);

    })
    //function GetProductionOrder(poid) {

    //});
    //}
    $("#prod_order_id1").change(function () {
        var t = $('#pogrid').DataTable();
        t.fnClearTable();
        //if (poid == "") {
        //    poid = 0;
        //}
        var poid = "";
        var poidlist = $("#prod_order_id1").val();
        if (poidlist != null) {
            for (var j = 0; poidlist.length > j; j++) {
                poid = poid + poidlist[j] + ",";
            }
        }
        poid = poid.slice(0, -1)
        $("#prod_order_id").val(poid);
        var rowCount = t.fnGetData().length;
        var i = 1;
        $.ajax({
            url: "@Url.Action("RejectionItems", "RejectionReceipt")",
            type: "GET",
            dataType: "JSON",
            data: { id: poid },
            success: function (poid) {
                //console.log(poid);
                reasonList();
                t.fnAddData(poid);
            }
        });
    });
    $('#example-select-all').on('click', function () {
        if ($(this).hasClass('allChecked')) {
            $('input[type="checkbox"]', '#pogrid').prop('checked', false);
        } else {
            $('input[type="checkbox"]', '#pogrid').prop('checked', true);
        }
        $(this).toggleClass('allChecked');

        checkedarray.length = 0;
        var t = $('#pogrid').DataTable();
        var trlen = t.fnGetData().length;
        if ($(this).is(':checked')) {
            if (trlen > 0) {
                for (var j = 0; j <= trlen - 1; j++) {
                    checkedarray.push(j);
                }
            }
        }
        else {
            checkedarray.length = 0;
        }
    });
    $(document).on('change', 'input[type="checkbox"]', function () {
        if ($('.check').is(':checked')) {
            $('.addSALES ').removeAttr('disabled');
        }
        else {
            $('.addSALES ').attr('disabled', true);
        }
    });
    $(document).on('click', '.check', function () {
        var index = $(this).attr('data-index');
        var t = $('#pogrid').DataTable();
        if ($(this).is(':checked')) {
            checkedarray.push(index);
        }
        else {
            var checkedIndex = checkedarray.indexOf(parseInt(index));
            checkedarray.splice(checkedIndex, 1);
        }
    });

    $(".addSALES").on("click", function (event) {
        $("#prod_order_id").html(""); // clear before appending new list
        $("#prod_order_id").append($('<option></option>').val(0).html("---Select---"));
        $("#prod_order_id").append(
                   $('<option></option>').val($("#prod_order_id1").val()).html($("#prod_order_id1 option:selected").text()));
        $("#prod_order_id").val($("#prod_order_id1").val()).trigger('change');
        var tt = $("#prod_order_id1").val();

        var s = $('#pogrid').DataTable();
        var rowCount4 = s.fnGetData().length;
        var index = $(this).attr('data-index');

        for (var i = 0,k=1; i < rowCount4; i++,k++) {
            var rowdata = s.fnGetData(i);
            if ($("#batchselect" + rowdata.rowIndex).is(':checked')) {
                if ($("#reason" + rowdata.rowIndex).val() == 0) {
                    swal("", "Please Select  Reason", "error");
                    return false;
                }
            }
        }

        var t = $('#ContactGrid').DataTable();
        t.fnClearTable();
        var isFalse = false;
        var i = 0;
        var j = 0;
        $("#ProdReceiptDetails").empty();

        for (var l = 0; l <= checkedarray.length - 1; l++) {
            var j = checkedarray[l];

            var req_qty = $("#reqq_qty" + (l + 1)).val();
            $("#plant_id").val(s.fnGetData(j, 9)).trigger('change');
            //$.filter_category('category_id',$("#plant_id").val(),1226);
            $("#storage_location_id1").val(s.fnGetData(j, 7));
            try {
                t.fnAddData(['0', i + 1, s.fnGetData(j, 2), s.fnGetData(j, 3), s.fnGetData(j, 4), s.fnGetData(j, 5), s.fnGetData(j, 6),
                    s.fnGetData(j, 7), s.fnGetData(j, 8), s.fnGetData(j, 10), s.fnGetData(j, 11), s.fnGetData(j, 12),
                    s.fnGetData(j, 13), s.fnGetData(j, 0), 1,s.fnGetData(j, 16),s.fnGetData(j, 17), '']);

                $("#ProdReceiptDetails").append('<input type="hidden" id="reject_receipt_detail_id' + i + '" name="reject_receipt_detail_id" value="' + t.fnGetData(i)[0] + '">');
                $("#ProdReceiptDetails").append('<input type="hidden" id="prod_order_no' + i + '" name="prod_order_no" value="' + t.fnGetData(i)[2] + '">');
                $("#ProdReceiptDetails").append('<input type="hidden" id="out_item_id' + i + '" name="out_item_id" value="' + t.fnGetData(i)[3] + '">');
                $("#ProdReceiptDetails").append('<input type="hidden" id="uom_id' + i + '" name="uom_id"  value="' + t.fnGetData(i)[5] + '">');
                $("#ProdReceiptDetails").append('<input type="hidden" id="sloc_id' + i + '" name="sloc_id" value="' + t.fnGetData(i)[7] + '">');
                $("#ProdReceiptDetails").append('<input type="hidden" id="batch_id' + i + '" name="batch_id" value="' + t.fnGetData(i)[9] + '">');
                $("#ProdReceiptDetails").append('<input type="hidden" id="tag_id' + i + '" name="tag_id" value="' + t.fnGetData(i)[11] + '">');
                $("#ProdReceiptDetails").append('<input type="hidden" id="prod_order_detail_id' + i + '" name="prod_order_detail_id"  value="' + t.fnGetData(i)[13] + '">');
                $("#ProdReceiptDetails").append('<input type="hidden" id="po_quantity' + i + '" name="po_quantity"  value="' + t.fnGetData(i)[14] + '">');
                $("#ProdReceiptDetails").append('<input type="hidden" id="reason_id' + i + '" name="reason_id"  value="' + t.fnGetData(i)[15] + '">');
                i = i + 1;
            }
            catch (exception) {
                checkedarray.length = 0;
                alert(exception.message);
            }
            isFalse = true;
        }

        if (isFalse == true) {
            $('#myModal1').modal('hide');
            checkedarray.length = 0;
        }
    });
    function GetProductionOrderList(itemid){
        $.ajax({
            url: "@Url.Action("GetProductionOrderList", "ProductionReceipt")",
            type: "GET",
        data: { item_id: itemid , entity_id : 'rejection_receipt' },
        success: function (data) {
            var st;
            st = "";
            $.each(data, function (i, cycle) {
                st += "<option value=" + cycle.Value + ">" + cycle.Text + "</option>";
            });
            $("#prod_order_id1").html(st).show();
            $("#prod_order_id1").multiselect('rebuild');
            //console.log(data)
        }
    });
    }
    function SelectAllReasonsInTable() {
        var id = $("#selectAllReasons").val();
        if (id == 0) {
            swal("", "Please Select  Reason", "error");
            return false;
        }
        else {
            $('.reasonSeparatedGrid').val(id);
            //var reason = $(".reasonSeparatedGrid").find('option:selected').text();
            var reason = $("#selectAllReasons").find('option:selected').text();
            var t = $('#pogrid').DataTable();
            for (i = 0; t.length >= 0; ++i) {
                t.fnUpdate(id, parseInt(i), 16);
                t.fnUpdate(reason, parseInt(i), 17);
                //var id1 = "reason" + i;
                //$("#"+id1).val(id);
            }
        }
    }
    </script>
}
