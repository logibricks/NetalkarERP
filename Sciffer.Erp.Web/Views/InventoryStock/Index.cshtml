
@using Sciffer.Erp.Domain.ViewModel

@{
    ViewBag.Title = "Index";
}
<br /><br /><br />
<div>
    @(Html.EJ().Grid<inv_Inventory_stock_vm>("Searching")
        .Datasource(ds => ds.URL(Url.Action("GetIndexData", "Generic", new { @ctrl_name = "InventoryStock" }))
         .EnableCaching()
        .CachingPageSize(4)
        .TimeTillExpiration(120000)
        .Adaptor(AdaptorType.UrlAdaptor))
        .EditSettings(edit => { edit.AllowAdding().AllowDeleting().AllowEditing().EditMode(EditMode.InlineFormTemplate); })
        .ToolbarSettings(toolBar => toolBar.ShowToolbar().ToolbarItems(items =>
        {
            items.AddTool(ToolBarItems.Add);
            items.AddTool(ToolBarItems.Edit);
            items.AddTool(ToolBarItems.ExcelExport);
            items.AddTool(ToolBarItems.PrintGrid);
        }))
          .ContextMenuSettings(contextMenu =>
          {
              contextMenu.EnableContextMenu();
              contextMenu.DisableDefaultItems();
              contextMenu.CustomContextMenuItems(new List<Syncfusion.JavaScript.Models.CustomContexMenuItems>() { new Syncfusion.JavaScript.Models.CustomContexMenuItems() { Id = "MyMenu", Text = "Print Report" } }); // CustomContext menu items
          })
        .Mappers(map => map.ExportToExcelAction(Url.Action("ExportToExcel", "Generic", new { ctrlname = "InventoryStock" }))
        .ExportToPdfAction(Url.Action("ExportToPdf", "Generic", new { ctrlname = "InventoryStock" })).ExportToWordAction(Url.Action("ExportToWord", "Generic", new { ctrlname = "InventoryStock" })))
        .AllowSorting()
       .AllowPaging().PageSettings(a => a.PageSize(20))
        .IsResponsive()
        .AllowFiltering()
        .ShowColumnChooser()
        .AllowReordering()
         .AllowScrolling()
        .ScrollSettings(col => { col.Width("100%"); })
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .Columns(col =>
        {
            col.Field("inventory_stock_id").Width("15%").HeaderText("ID").IsPrimaryKey(true).Visible(false).Add();
            col.Field("category_id").Width("15%").HeaderText("Category").Visible(false).Add();
            col.Field("number").Width("15%").HeaderText("Number").Add();            
            col.Field("plant_name").Width("15%").HeaderText("Plant Name").Add();
            col.Field("slocname").Width("15%").HeaderText("SLoc Name").Add();
            col.Field("bucket_name").Width("15%").HeaderText("Bucket Name").Add();
            col.Field("posting_date").Width("15%").HeaderText("Posting Date").Visible(true).Add();           
            col.Field("document_date").Width("15%").HeaderText("Document Date").Add();            
            col.Field("ref1").Width("15%").HeaderText("Ref1").Add();
        }).ClientSideEvents(eve =>
        {
            eve.ActionBegin("actionBegin");
            eve.RightClick("rightClick");
            eve.ContextClick("contextclick");
        })
    )
</div>
<style>
    .e-editedrow {
        display: none;
    }

    .e-editcell {
        display: none;
    }
</style>

<script type="text/javascript">

    function actionBegin(args) {
        if (args.requestType == "beginedit") {
            location.href = "@Url.Action("Edit", "InventoryStock")?id=" + args.rowData.inventory_stock_id;
        }
        if (args.requestType == "add") {
            location.href = "@Url.Action("Create", "InventoryStock")";
        }
        if (args.requestType == "delete") {
            location.href = "@Url.Action("Delete", "InventoryStock")?id=" + args.rowData.inventory_stock_id;
        }
    }
    function contextclick(args) {
        if (args.text == "Print Report") {
            var url = "@Url.Action("Pdf", "InventoryStock")?id=" + this.getSelectedRecords()[0].inventory_stock_id;
            window.open(url);
        }

    };
    $(document).ready(function () {
        var doc_no = '@ViewBag.doc';
        if (doc_no != '') {
            if (doc_no != 0) {
                sweetAlert("", doc_no + " Saved successfully!", "success");
            }
        }
    });

    $(document).ready(function () {
        var num = '@Html.ViewBag.num';
        if (num != '') {
            if (num != undefined) {
                sweetAlert("", num + " Saved successfully.", "success");
            }
        }
    });
    ViewBag.num = TempData["data"];
</script>

