@model Sciffer.Erp.Domain.ViewModel.pur_requisition_vm
@using Newtonsoft.Json
@{
    ViewBag.Title = "Create";
}



@using (Html.BeginForm("Edit", "PurchaseRequisition", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="margin-top:10px;">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(a => a.pur_requisition_id)
        <div class="form-group">
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.category_id, "Category *", htmlAttributes: new { Class = "control-label col-md-4 " })
                        <div class="col-md-5 col-sm-5 col-xs-12">
                            <input type="hidden" id="is_active" name="is_active" value="true" />
                            @Html.DropDownList("category_id", (System.Web.Mvc.SelectList)ViewBag.categorylist, htmlAttributes: new { Class = "form-control removedisabled", @onchange = "GetDocumentNumber(this.value)" })
                            @Html.ValidationMessageFor(model => model.category_id, "", new { Class = "text-danger" })
                        </div>
                        <div class="col-md-3 col-sm-3 col-xs-12">
                            @Html.LabelFor(model => model.pur_requisition_number, new { @class = "control-label col-md-4 hidden" })
                            @Html.EditorFor(model => model.pur_requisition_number, new { htmlAttributes = new { @class = "form-control validation removedisabled" } })
                            @Html.ValidationMessageFor(model => model.pur_requisition_number, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.pur_requisition_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.pur_requisition_date, new { htmlAttributes = new { @class = "form-control validinput", @required = true } })
                            @Html.ValidationMessageFor(model => model.pur_requisition_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div class="panel panel-body" role="tabpanel" data-example-id="togglable-tabs">
            <ul id="myTab" class="nav nav-tabs bar_tabs" role="tablist">
                <li class="active"><a data-toggle="tab" href="#sectionA">General</a></li>
                <li><a data-toggle="tab" href="#sectionB">Line Item</a></li>
                <li><a data-toggle="tab" href="#sectionC">Status</a></li>
                <li><a data-toggle="tab" href="#sectionD">Information</a></li>
            </ul>
            <div class="tab-content">
                <div id="sectionA" class="tab-pane fade in active" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.business_unit_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("business_unit_id", (System.Web.Mvc.SelectList)ViewBag.businesslist, "---Select---", new { @class = "form-control validinput", @required = true })
                                    @Html.ValidationMessageFor(model => model.business_unit_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.plant_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("plant_id", (System.Web.Mvc.SelectList)ViewBag.plantlist, "---Select---", new { @class = "form-control validinput", @required = true, @onchange = "GetStorageLocation(this.value)" })
                                    @Html.ValidationMessageFor(model => model.plant_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.delivery_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.delivery_date, new { htmlAttributes = new { @class = "form-control validinput", @required = true } })
                                    @Html.ValidationMessageFor(model => model.delivery_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.source_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("source_id", (System.Web.Mvc.SelectList)ViewBag.sourcelist, "---Select---", new { @class = "form-control validinput", @required = true })
                                    @Html.ValidationMessageFor(model => model.source_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                <div id="sectionB" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">

                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                          
                        </div>
                    </div>
                    <div class="row">
                        <div class="table-responsive">
                            <table class="table table-responsive table-bordered table-striped" id="ContactGrid">
                                <thead>
                                    <tr>
                                        <th hidden><label>ID</label></th>
                                        <th><label>Sr. No.</label></th>
                                        <th><label>Item Code</label></th>
                                        <th><label>Item Description</label></th>
                                        <th><label>Delivery Date</label></th>
                                        <th><label>Quantity</label></th>
                                        <th hidden><label>UOM ID</label></th>
                                        <th><label>UoM</label></th>
                                        <th><label>Info Price</label></th>
                                        <th hidden><label>Sloc ID</label></th>                                       
                                        <th><label>Sloc</label></th>
                                        <th><label>Vendor Id</label></th>
                                        <th><label>Vendor</label></th>
                                        <th hidden><label>Delete</label></th>
                                    </tr>
                                </thead>

                            </table>
                        </div>
                    </div>
                    <div class="row collapse" id="inv_detail">
                        <div class="table-responsive">
                            <span>Stock Status</span>
                            <button type="button" id="btn_close" style="float:right">&times;</button>
                            <table class="table table-responsive table-bordered table-striped" id="StockGrid">
                                <thead>
                                    <tr>
                                        <th><label>Plant</label></th>
                                        <th><label>Storage Location</label></th>
                                        <th><label>On PR</label></th>
                                        <th><label>Qty ( On Hand )</label></th>
                                        <th><label>Value</label></th>

                                    </tr>
                                </thead>
                                <tbody></tbody>

                            </table>
                        </div>
                    </div>
                </div>
                <div id="sectionC" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.status_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("status_id", (System.Web.Mvc.SelectList)ViewBag.status_list, "---Select---", new { @class = "form-control validinput", @required = true })
                                    @Html.ValidationMessageFor(model => model.status_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sectionD" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.internal_remarks, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.internal_remarks, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.internal_remarks, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.remarks, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.remarks, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.remarks, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <input type="hidden" id="productdetail" name="productdetail" />
                        <input type="hidden" id="formdetail" name="formdetail" />
                        <input type="hidden" id="deleteids" name="deleteids" />
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.attachement, "Attachment", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    <input type="file" class="form-control" id="FileUpload" name="FileUpload" accept="application/pdf, image/*" />
                                    @Html.ValidationMessageFor(model => model.attachement, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

       
        <!-- Modal -->
    
    </div>
                                        }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script src="~/Scripts/RemoveUnexpectedFile.js"></script>
<script src="~/Scripts/requirevalidation.js"></script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            document.getElementById('pur_requisition_date').valueAsDate = new Date();
        });
        $("#business_unit_id").select2({
            placeholder: "Select Business unit",
            allowClear: true
        });
        $("#plant_id").select2({
            placeholder: "Select Plant",
            allowClear: true
        });
        $("#ITEM_ID").select2({
            placeholder: "Select Item",
            allowClear: true
        });
        $("#storage_location_id").select2({
            placeholder: "Select Storage Location Id",
            allowClear: true
        });
        $("#vendor_id").select2({
            placeholder: "Select Vendor Id",
            allowClear: true
        });

        function codeAddress() {
            var t = $('#ContactGrid').DataTable();
            var pl_detail = @Html.Raw(JsonConvert.SerializeObject(this.Model));
            var i=1;
            $.each(pl_detail.pur_requisition_detail, function(key, value) {
                var input = value.delivery_date;
                var result = input.substring(0, 10);
                console.log(value);
                t.fnAddData([value.pur_requisition_detail_id,i,value.REF_ITEM.ITEM_ID,value.REF_ITEM.ITEM_NAME+"-"+value.REF_ITEM.ITEM_CODE,result, value.quantity, value.REF_UOM.UOM_ID, value.REF_UOM.UOM_NAME, value.info_price, value.REF_STORAGE_LOCATION.storage_location_id,value.REF_STORAGE_LOCATION.storage_location_name+"-"+value.REF_STORAGE_LOCATION.description,value.REF_VENDOR.VENDOR_ID,value.REF_VENDOR.VENDOR_CODE+"-"+value.REF_VENDOR.VENDOR_NAME,''

                ]);
                i=i+1;
            });
            $("#category_id").prop('disabled',true);
            $("#pur_requisition_number").prop('disabled',true);
            $("#pur_requisition_date").prop('disabled',true);
        }
        window.onload = codeAddress;


        $('#ContactGrid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            aoColumns: [
                     { sname: "a", sWidth: "7%", bVisible: false},
                     { sname: "b", sWidth: "6%"},
                     { sname: "c", bVisible: false},
                     { sname: "d", sWidth: "6%" },
                     { sname: "e", sWidth: "12%" },
                     { sname: "f", sWidth: "6%" },
                     { sname: "g", bVisible: false },
                     { sname: "h", sWidth: "10%" },
                     { sname: "i", sWidth: "10%" },
                     { sname: "j", sWidth: "10%", bVisible: false },
                     { sname: "k", sWidth: "10%" },
                     { sname: "l", sWidth: "10%", bVisible: false },
                     { sname: "m", sWidth: "10%" },

                     {
                         sname: "n", sWidth: "7%",bVisible: false,
                         bSortable: false,
                         mRender: function (data, type, full) {
                             return '<img class="edit" src="../images/writing_file.png" height="20px" width="25px" alt="Edit"/><img class="delete" src="../images/remove.png" height="20px" width="25px" alt="Delete"/>';
                         }
                     }]
        });
        function recalculate_row_numbers() {
            var t = $('#ContactGrid').DataTable()
            table_rows = t.fnGetNodes();
            $.each(table_rows, function (index) {
                $("td:first", this).html(index + 1);
                var nn = index + 1;
                $("td:last", this).html('<img class="edit" src="../../Images/writing_file.png" height="20px" width="25px" alt="Edit"  /><img class="delete" src="../../Images/remove.png" height="20px" width="25px" alt="Delete"');
            });
        }

        $(".add").on("click", function (event) {

            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            var item_id = $("#ITEM_ID").val();
            var item_name = $('#ITEM_ID option:selected').text();
            var delevery_date = $("#dte").val();
            var qty = $("#quantity").val();
            var unit_id = $("#UOM").val();
            var unit_name = $("#UOM").find("option:selected").text();
            var sloc = $("#storage_location_id").val();
            var sloc_name = $("#storage_location_id").find("option:selected").text();
            var infoprice = $("#infoprice").val();
            var vendor_id = $("#vendor_id").val();
            var vendor_code = $("#vendor_id").find("option:selected").text();

            if (item_id == '') {
                swal("", "Please Select Item Code.", "error");
                return false;
            }
            if (sloc == '' || sloc == '--Select--') {
                swal("", "Please Select Sloc", "error");
                return false;
            }
            if (delevery_date == '') {
                swal("", "Please Select Delivery Date.", "error");
                return false;
            }
            if (qty == '') {
                swal("", "Please Enter Quantity.", "error");
                return false;
            }
            if (qty == 0) {
                swal("", "Quantity should be greater than zero.", "error");
                return false;
            }
            if (unit_id == '') {
                swal("", "Please select Unit.", "error");
                return false;
            }
            if (vendor_id == '') {
                swal("", "Please select Vendor.", "error");
                return false;
            }
            if ($("#srno").val() == "") {
                t.fnAddData(['',rowCount + 1, item_id, item_name, delevery_date, qty, unit_id, unit_name,  infoprice, sloc,sloc_name,vendor_id,vendor_code, '' ]);
            }
            else {
                var cc = parseInt($("#srno").val());
                t.fnUpdate(['',cc + 1,  item_id, item_name, delevery_date, qty, unit_id, unit_name,infoprice, sloc,sloc_name, vendor_id,vendor_code, ''], cc)
            }
            clearmodel();

            return true;
        });
        function clearmodel() {
            $("#ITEM_ID").val('').trigger('change');
            $("#quantity").val('');
            $("#UOM").val('');
            $("#infoprice").val('');
            $("#srno").val('');
            $("#dte").val('');
            $("#storage_location_id").val('').trigger('change');
            $("#vendor_id").val('').trigger('change');
            document.getElementById("ITEM_ID").removeAttribute("disabled");
        }
        $('#ContactGrid').on('click', '.edit', function () {

            var t = $('#ContactGrid').DataTable();
            var id = $(this).parent('td').parent('tr').index();
            $('#myModal').modal('show');
            $("#srno").val(id);
            var tx = $(t.fnGetData(id)[1]).text();
            $('#ITEM_ID').val(t.fnGetData(id)[1]).trigger('change');

            $('#dte').val(t.fnGetData(id)[4]);
            $('#quantity').val(t.fnGetData(id)[5]);
            $('#UOM').val(t.fnGetData(id)[6]);
            $('#infoprice').val(t.fnGetData(id)[8]);
            $("#storage_location_id").val(t.fnGetData(id)[9]).trigger('change');
            $("#vendor_id").val(t.fnGetData(id)[11]).trigger('change');
            //document.getElementById("ITEM_ID").removeAttribute("disabled");
            document.getElementById("ITEM_ID").setAttribute('disabled', 'disabled');

        });
        $('#ContactGrid').on('click', '.delete', function () {
            var t = $('#ContactGrid').DataTable();
            var id = $(this).parent('td').parent('tr').index();
            var deleteids = t.fnGetData(id)[1];
            swal({
                title: "Are you sure?",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: true
            },
     function (isConfirm) {
         if (isConfirm) {

             $("#deleteids").val(deleteids + "~");
             t.fnDeleteRow(id);
             var len = t.fnGetData().length;
             var i = 1;
             var row = 0;
             if (len > 0) {
                 $('#ContactGrid tbody tr').each(function () {
                     t.fnUpdate(i, row, 1);
                     i++;
                     row++;
                 });
             }
         }
     });
        });
        function onSelect2(args) {
            var id = "";
            var matches = args.value.split("-");
            id = matches[0].trim();
            GetUnit(id);
        }
        function GetUnit(id) {
            if (id != '') {
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetUnitofItem", "Generic")',
                    data: { id: id },
                    success: function (ITEM) {

                        $("#UOM").val(ITEM.item);
                    },
                    error: function (emp) {
                        $('#UOM').val('');
                    }
                });
            }
            else {
                $('#UOM').val('');
            }

        }

        function TabletoJeson() {
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            var str;
            var str1;
            for (i = 0; i < rowCount; i++) {
                str1 = t.fnGetData(i)[0] + ","; //id
                str1 = str1 + t.fnGetData(i)[1] + ","; //srno
                str1 = str1 + t.fnGetData(i)[2] + ",";  //itemcode

                str1 = str1 + t.fnGetData(i)[4] + ",";//date
                str1 = str1 + t.fnGetData(i)[5] + ","; //quantity
                str1 = str1 + t.fnGetData(i)[6] + ",";//uomid
                str1 = str1 + t.fnGetData(i)[8] + ","; // info price
                str1 = str1 + t.fnGetData(i)[9] + ",";//
                str1 = str1 + t.fnGetData(i)[11] + ",";//

                if (i == 0) {
                    str = str1 + "~"
                }
                else {
                    str = str + str1 + "~";
                }
            }
            //alert(str);
           document.getElementsByName("productdetail")[0].value = str;
        }

        $(document).on('click', '#inv_item', function () {
            $('#inv_detail').removeClass('collapse');
            $('#StockGrid tbody tr').remove();
            $.ajax({
                url:'@Url.Action("GetItemStocks", "PurchaseRequisition")?code='+ $(this).text(),
                method: 'post',
                contentType: 'application/json',
                success: function (it) {
                    $(it).each(function (ind, itm) {
                        $('#StockGrid tbody').append('<tr><td>' + itm.plant_name + '</td><td>' + itm.sloc_name + '</td><td></td><td>' + itm.cu_stock + '</td><td></td></tr>')
                    });
                }
            });
        });
        $('#btn_close').click(function () {
            $('#inv_detail').addClass('collapse');
        });

        GetStorageLocation($('#plant_id').val());

        function GetStorageLocation(id) {
            if (id == "") {
                id = 0;
            }
            $.ajax({
                url: '@Url.Action("GetStorageLocation", "SalesInvoice")',
                type: "GET",
                dataType: "JSON",
                data: { id: id },
                success: function (id) {
                    $("#storage_location_id").html(""); // clear before appending new list
                    $("#storage_location_id").append($('<option></option>').val("").html("---Select---"));
                    $.each(id, function (i, cycle) {
                        $("#storage_location_id").append(
                            $('<option></option>').val(cycle.storage_location_id).html(cycle.storage_location_name));
                    });
                }
            });
        }
        function GetDocumentNumber(id) {
            if (id != '') {
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetDocumentNumbering", "Generic")',
                    data: { id: id },
                    success: function (ITEM) {
                        $('#pur_requisition_number').val(ITEM);
                    },
                    error: function (emp) {
                        $('#pur_requisition_number').val('');
                    }
                });
            }
            else {
                $('#pur_requisition_number').val('');
            }
        }
        $("#form0 :input").prop("disabled", true);
    </script>
}



