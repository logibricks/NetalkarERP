@model Sciffer.Erp.Domain.ViewModel.pur_poVM
@using Newtonsoft.Json
@{
    ViewBag.Title = "Create";
}
@using (Html.BeginForm("Edit", "PurchaseOrder", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal" id="form" style="margin-top:10px;">
        <div id="PoHidden"></div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(x => x.po_id)
        <div class="form-group">
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.category_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-4 col-sm-4 col-xs-12">
                            @Html.DropDownList("category_id", (System.Web.Mvc.SelectList)ViewBag.category_list, new { @class = "form-control category validinput removedisabled", @disabled = "disabled", @required = true, @onchange = "GetDocumentNumber(this.value);" })
                            @Html.ValidationMessageFor(model => model.category_id, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.po_no, htmlAttributes: new { @class = "hidden" })
                        <div class="col-md-4 col-sm-4 col-xs-12">
                            @Html.EditorFor(model => model.po_no, new { htmlAttributes = new { @class = "form-control num validinput removedisabled", @disabled = "disabled", @required = true } })
                            @Html.ValidationMessageFor(model => model.po_no, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.status_id, "Status", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("status_id", (System.Web.Mvc.SelectList)ViewBag.status_list, new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true })
                            @Html.ValidationMessageFor(model => model.status_id, "", new { @class = "text-danger" })
                            <label id="status" hidden style="color:#d43f3a;margin-top:-6px"><h4>C A N C E L L E D</h4></label>
                            <label id="closed" hidden style="color:#5cb85c;margin-top:-6px"><h4>C L O S E D</h4></label>
                            <label id="open" hidden style="color:#5cb85c;margin-top:-6px"><h4>O P E N</h4></label>
                        </div>
                    </div>
                    @*<div class="form-group">
                            @Html.LabelFor(model => model.po_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                            <div class="col-md-8 col-sm-8 col-xs-12">
                                @Html.EditorFor(model => model.po_date, new { htmlAttributes = new { @class = "form-control postingdocumentdate validinput", @required = true } })
                                @Html.ValidationMessageFor(model => model.po_date, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.vendor_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12 " })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("vendor_id", (System.Web.Mvc.SelectList)ViewBag.vendor_list, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @onchange = "GetVendorDetails(this.value);" })
                            @Html.ValidationMessageFor(model => model.vendor_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.po_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.po_date, new { htmlAttributes = new { @class = "form-control postingdocumentdate removedisabled validinput", @required = true } })
                            @Html.ValidationMessageFor(model => model.po_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.net_value, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-5 col-sm-5 col-xs-12">
                            @Html.EditorFor(model => model.net_value, new { htmlAttributes = new { @class = "form-control right validinput removedisabled", @type = "number", @required = true, @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.net_value, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3 col-sm-3 col-xs-12">
                            @Html.DropDownList("net_value_currency_id", (System.Web.Mvc.SelectList)ViewBag.currency_list, new { @class = "form-control removedisabled", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.net_value_currency_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.item_service_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12 " })
                        <div class="col-md-4 col-sm-4 col-xs-12">
                            @Html.DropDownList("item_service_id", (System.Web.Mvc.SelectList)ViewBag.item_type, new { @class = "form-control removedisabled", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.item_service_id, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-lg-4 col-sm-4 service">
                            @Html.DropDownList("with_without_service_id", new List<SelectListItem>
                             {
                               new SelectListItem{ Text="---Select---", Value = "0" },
                               new SelectListItem{ Text=" With Service Codes", Value = "1" },
                                new SelectListItem{ Text="Without Service Codes", Value = "2" }
                             }, new { @class = "form-control removedisabled", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.item_service_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.gross_value, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-5 col-sm-5 col-xs-12">
                            @Html.EditorFor(model => model.gross_value, new { htmlAttributes = new { @class = "form-control right validinput removedisabled", @type = "number", @required = true, @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.gross_value, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3 col-sm-3 col-xs-12">
                            @Html.DropDownList("gross_value_currency_id", (System.Web.Mvc.SelectList)ViewBag.currency_list, new { @class = "form-control removedisabled", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.gross_value_currency_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.approval_status, "Approval Status", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12 " })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("approval_status", new List<SelectListItem>
                             {
                                new SelectListItem{ Text="Pending", Value = "0" },
                                new SelectListItem{ Text="Approved", Value = "1" },
                                new SelectListItem{ Text="Rejected", Value = "2" }
                             }, new { @class = "form-control removedisabled", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.approval_status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-body" role="tabpanel" data-example-id="togglable-tabs">
            <ul id="myTab" class="nav nav-tabs bar_tabs" role="tablist">
                <li class="active"><a data-toggle="tab" href="#sectionA">General</a></li>
                <li><a data-toggle="tab" href="#sectionB">Line Item</a></li>
                <li><a data-toggle="tab" href="#sectionG">Delivery Schedule</a></li>
                <li><a data-toggle="tab" href="#sectionC">Vendor</a></li>
                <li><a data-toggle="tab" href="#sectionD">Accounting</a></li>
                <li><a data-toggle="tab" href="#sectionE">Information</a></li>

            </ul>
            <div class="tab-content">
                <div id="sectionA" class="tab-pane fade in active" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.business_unit_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("business_unit_id", (System.Web.Mvc.SelectList)ViewBag.business_list, "---Select---", new { @class = "form-control validinput removedisabled", @required = true })
                                    @Html.ValidationMessageFor(model => model.business_unit_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.plant_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("plant_id", (System.Web.Mvc.SelectList)ViewBag.plant_list, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true, @onchange = "GetStorageLocation(this.value);" })
                                    @Html.ValidationMessageFor(model => model.plant_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.freight_terms_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("freight_terms_id", (System.Web.Mvc.SelectList)ViewBag.freight_list, "---Select---", new { @class = "form-control validinput removedisabled", @required = true })
                                    @Html.ValidationMessageFor(model => model.freight_terms_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.place_of_supply_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("place_of_supply_id", (System.Web.Mvc.SelectList)ViewBag.state_list, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.place_of_supply_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.vendor_quotation_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.vendor_quotation_no, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.vendor_quotation_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.vendor_quotation_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.vendor_quotation_date, new { htmlAttributes = new { @class = "form-control " } })
                                    @Html.ValidationMessageFor(model => model.vendor_quotation_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.valid_until, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.valid_until, new { htmlAttributes = new { @class = "form-control removedisabled" } })
                                    @Html.ValidationMessageFor(model => model.valid_until, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.form_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("form_id", (System.Web.Mvc.SelectList)ViewBag.form_list, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.form_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ref_doc_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.ref_doc_no, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ref_doc_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.delivery_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.delivery_date, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled", } })
                                    @Html.ValidationMessageFor(model => model.delivery_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.is_rcm, "RCM", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.is_rcm, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled", } })
                                    @Html.ValidationMessageFor(model => model.is_rcm, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.responsibility_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("responsibility_id", (System.Web.Mvc.SelectList)ViewBag.employee_list, "---Select---", new { @class = "form-control  ", })
                                    @Html.ValidationMessageFor(model => model.responsibility_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div id="sectionB" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">

                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    <button type="button" class="btn btn-primary" style="float:right" data-toggle="modal" data-target="#myModal"><span class="glyphicon glyphicon-plus"></span>Add Item</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="table-responsive">
                            <table class="table table-responsive table-bordered table-striped" id="ContactGrid">
                                <thead>
                                    <tr>
                                        <th><label>ID</label></th>
                                        <th><label>Sr. No.</label></th>
                                        <th><label>Item ID</label></th>
                                        <th><label>Item</label></th>
                                        <th><label>User Description</label></th>
                                        <th><label>hsn_id</label></th>
                                        <th><label>SAC/HSN Code</label></th>
                                        <th><label>SLoc ID</label></th>
                                        <th><label>SLoc</label></th>
                                        <th class="dt_col_hide"><label>Delivery Date</label></th>
                                        <th class="dt_col_hide"><label>Quantity</label></th>
                                        <th><label>UOM ID</label></th>
                                        <th class="dt_col_hide"><label>UoM</label></th>
                                        <th><label id="unitpricetext"></label></th>
                                        <th><label>Discount</label></th>
                                        <th><label>Eff. Price</label></th>
                                        <th><label>Pur Value</label></th>
                                        <th><label>Taxable Rate</label></th>
                                        <th><label>Taxable Value</label></th>
                                        <th><label>Tax ID</label></th>
                                        <th><label>Tax Code</label></th>
                                        <th><label>Requisition Detail ID</label></th>
                                        <th><label>Action</label></th>
                                        <th>item_type_id</th>
                                    </tr>
                                </thead>

                            </table>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">

                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="table-responsive">
                                <table class="table table-responsive table-bordered table-striped" id="TaxGrid"></table>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sectionG" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row" id="staggered_delivery">
                        <div class="panel panel-default">
                            <div class="panel-heading"></div>
                            <div class="panel-body">
                                <div class="table-responsive">
                                    <input type="hidden" id="items_id" />
                                    <table class="table table-responsive table-bordered table-striped" id="Staggerd_Table">
                                        <thead>
                                            <tr>
                                                <th><label>Sr.No.</label></th>
                                                <th><label>Item</label></th>
                                                <th><label>Date</label></th>
                                                <th><label>Quantity</label></th>
                                                <th><label>ItemId</label></th>
                                                <th><label>Itemqty</label></th>
                                                <th><label>flag</label></th>
                                                <th><label>Detail ID</label></th>
                                                <th><label>Bal Qty</label></th>
                                                <th><label>Action</label></th>
                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row" id="blancket_delivery">
                        <div class="panel panel-default">
                            <div class="panel-heading">Blanket Order</div>


                            <div class="panel-body">
                                <div class="row" style="margin-top:10px;">
                                    <div class="col-lg-6 col-sm-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.maximum_limit_qty, "Maximum Limit Qty. *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                            <div class="col-md-8 col-sm-8 col-xs-12">
                                                @Html.EditorFor(model => model.maximum_limit_qty, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.maximum_limit_qty, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-sm-6">

                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-6 col-sm-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.valid_from_date, "Valid From *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                            <div class="col-md-8 col-sm-8 col-xs-12">
                                                @Html.EditorFor(model => model.valid_from_date, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.valid_from_date, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-sm-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.valid_to_date, "Valid To *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                            <div class="col-md-8 col-sm-8 col-xs-12">
                                                @Html.EditorFor(model => model.valid_to_date, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.valid_to_date, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sectionC" class="tab-pane fade" style="margin-top:10px;">

                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.country_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("country_id", (System.Web.Mvc.SelectList)ViewBag.country_list, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true })
                                    @Html.ValidationMessageFor(model => model.country_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_state_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("billing_state_id", (System.Web.Mvc.SelectList)ViewBag.state_list, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true })
                                    @Html.ValidationMessageFor(model => model.billing_state_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_address, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.billing_address, new { htmlAttributes = new { @class = "form-control ddlform validinput removedisabled", @disabled = "disabled", @required = true } })
                                    @Html.ValidationMessageFor(model => model.billing_address, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_city, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.billing_city, new { htmlAttributes = new { @class = "form-control ddlform validinput removedisabled", @disabled = "disabled", @required = true } })
                                    @Html.ValidationMessageFor(model => model.billing_city, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_pin_code, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.billing_pin_code, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.billing_pin_code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.email_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.email_id, new { htmlAttributes = new { @class = "form-control ddlform email removedisabled", @disabled = "disabled", @type = "email" } })
                                    @Html.ValidationMessageFor(model => model.email_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.gst_in, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.gst_in, new { htmlAttributes = new { @class = "form-control removedisabled validinput", @disabled = "disabled", } })
                                    @Html.ValidationMessageFor(model => model.gst_in, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.gst_vendor_type_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("gst_vendor_type_id", (System.Web.Mvc.SelectList)ViewBag.gst_list, "---Select---", new { @class = "form-control removedisabled validinput", @disabled = "disabled", })
                                    @Html.ValidationMessageFor(model => model.gst_vendor_type_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sectionD" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.payment_cycle_type_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("payment_cycle_type_id", (System.Web.Mvc.SelectList)ViewBag.payment_cycle_type_list, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true, @onchange = "FillPaymentCycle()" })
                                    @Html.ValidationMessageFor(model => model.payment_cycle_type_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.payment_cycle_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("payment_cycle_id", (System.Web.Mvc.SelectList)ViewBag.payment_cycle_list, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true })
                                    @Html.ValidationMessageFor(model => model.payment_cycle_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.payment_terms_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("payment_terms_id", (System.Web.Mvc.SelectList)ViewBag.payment_terms_list, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true })
                                    @Html.ValidationMessageFor(model => model.payment_terms_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6 hidden">
                            <div class="form-group">
                                @Html.LabelFor(model => model.gst_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.gst_no, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.gst_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row hidden">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.pan_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.pan_no, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.pan_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ecc_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.ecc_no, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.ecc_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row hidden">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.vat_tin_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.vat_tin_no, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.vat_tin_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.cst_tin_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.cst_tin_no, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.cst_tin_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row hidden">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.service_tax_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.service_tax_no, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.service_tax_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

                <div id="sectionE" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.internal_remarks, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.internal_remarks, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.internal_remarks, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.remarks_on_document, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.remarks_on_document, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.remarks_on_document, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <input type="hidden" id="productdetail" name="productdetail" />
                        <input type="hidden" id="formdetail" name="formdetail" />
                        <input type="hidden" id="deleteids" name="deleteids" />
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.cancellation_remarks, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.cancellation_remarks, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.cancellation_remarks, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.attachement, "Attachment", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.HiddenFor(a => a.attachement)
                                    <input type="file" class="form-control" id="FileUpload" name="FileUpload" accept="application/pdf, image/*" />
                                    @Html.ValidationMessageFor(model => model.attachement, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.created_by, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("created_by", (System.Web.Mvc.SelectList)ViewBag.user_list, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.created_by, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.created_ts, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.created_ts, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.created_ts, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.modify_by, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("modify_by", (System.Web.Mvc.SelectList)ViewBag.user_list, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.modify_by, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.modify_ts, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.modify_ts, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.modify_ts, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.cancelled_by, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("cancelled_by", (System.Web.Mvc.SelectList)ViewBag.user_list, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.cancelled_by, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.cancelled_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.cancelled_date, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.cancelled_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                <label class="control-label col-md-4" for="first-name">
                                    Cancelled Reason Determination
                                </label>
                                <div class="col-md-8">
                                    @Html.DropDownList("cancellation_reason_id", (System.Web.Mvc.SelectList)ViewBag.cancellationreasonlist, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                    @*@Html.EditorFor(model => model.cancellation_remarks, new { htmlAttributes = new { @class = "form-control" } })*@
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg12 col-sm-12">
            <div class="form-group">
                <div class="col-md-4 col-sm-4 col-xs-5">
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
                </div>
                <div class="col-md-2 col-sm-2 col-xs-2">
                    <input type="button" value="Cancel PO" class="btn btn-danger" data-toggle="modal" data-target="#myCanModal" style="margin-left:25px" id="cancel_pi" />
                </div>
                <div class="col-md-2 col-sm-2 col-xs-2">
                    <input type="button" value="Close PO" class="btn btn-warning" style="margin-left:25px" id="close_po" />
                </div>
                <div class="col-md-4 col-sm-4 col-xs-5">
                    <input type="submit" value="Update" id="create" data-controller="PurchaseOrder" data-id="@Model.po_id" class="btn btn-success" onclick="TabletoJeson();" style="float:right" />
                </div>
            </div>
        </div>
    </div>
        <!-- Modal -->
    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">

                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" onclick="clearmodel();">&times;</button>
                    <h4 class="modal-title">Item Details</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3">
                                Item Type <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                @Html.DropDownList("item_type_id", (System.Web.Mvc.SelectList)ViewBag.item_type, "--Select--", new { @class = "form-control col-md-7 col-xs-12 removedisabled" })
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3">
                                Item <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                @Html.DropDownList("item_id", (System.Web.Mvc.SelectList)ViewBag.item_list, "---Select---", new { @class = "form-control col-md-7 col-xs-12 removedisabled", @onchange = "GetUnit(this.value)", @style = "width: 100%;" })
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                User Description
                            </label>
                            <div class="col-md-7">
                                <textarea class="form-control col-md-7 col-xs-12" id="udescription" rows="3"></textarea>
                            </div>
                        </div>
                    </div>
                    <br class="dt_col_hide" />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                SAC/HSN Code <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                @Html.DropDownList("sac_hsn_id", (System.Web.Mvc.SelectList)ViewBag.hsncodelist, "---Select---", new { @class = "form-control col-md-7 col-xs-12 " })
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row dt_col_hide" id="divsloc">
                        <div class="form-group">
                            <label class="control-label col-md-3">
                                SLoc <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                @Html.DropDownList("sloc_id", Enumerable.Empty<SelectListItem>(), "", new { @class = "form-control col-md-7 col-xs-12 removedisabled", @style = "width: 100%;" })
                            </div>
                        </div>
                    </div>
                    <br class="dt_col_hide" />
                    <div class="row dt_col_hide" id="divdelivery">
                        <div class="form-group">
                            <label class="control-label col-md-3">
                                Delivery Date <span class="required">*</span>
                            </label>
                            <div class="col-md-7">

                                <input type="date" class="form-control col-md-7 col-xs-12" id="dte">
                            </div>
                        </div>
                    </div>
                    <br class="dt_col_hide" />
                    <div class="row dt_col_hide" id="qtext">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Quantity <span class="required">*</span>
                            </label>
                            <div class="col-md-4">
                                <input type="number" class="form-control col-md-7 col-xs-12" id="quantity" onchange="calculation()">
                            </div>
                            <div class="col-md-3">
                                @Html.DropDownList("uom_id", (System.Web.Mvc.SelectList)ViewBag.uom_list, "---Select---", new { @class = "form-control col-md-7 col-xs-12 removedisabled", @disabled = "disabled" })
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name" id="uprice"></label>
                            <div class="col-md-7">
                                <input type="number" class="form-control col-md-7 col-xs-12" id="unitprice" onchange="calculation()">
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Discount (%) <span class="required"></span>
                            </label>
                            <div class="col-md-7">
                                <input type="number" min="0" max="3" class="form-control col-md-7 col-xs-12" id="discount" onchange="calculation()">
                            </div>
                        </div>
                    </div>
                    <br class="dt_col_hide" />
                    <div class="row dt_col_hide">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Effective Unit Price <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <input type="number" class="form-control col-md-7 col-xs-12" id="effectiveprice" disabled>
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Purchase Value <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <input type="number" disabled class="form-control col-md-7 col-xs-12" id="salesvalue" onchange="GetFreightTerms(this.value)">
                            </div>
                        </div>
                    </div>
                    <br class="dt_col_hide" />
                    <div class="row dt_col_hide">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Taxable Rate <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <input type="number" class="form-control col-md-7 col-xs-12" id="assessablerate" onchange="asscalculation()">
                            </div>
                        </div>
                    </div>
                    <br class="dt_col_hide" />
                    <div class="row dt_col_hide">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Taxable Value <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <input type="number" class="form-control col-md-7 col-xs-12" id="assessablevalue" disabled>
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Tax Code <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                @Html.DropDownList("tax_id", (System.Web.Mvc.SelectList)ViewBag.tax_list, "---Select---", new { @class = "form-control col-md-7 col-xs-12 removedisabled" })
                            </div>
                        </div>
                    </div>

                </div>
                <br />
                <div class="modal-footer">
                    <input type="hidden" id="srno" />
                    <input type="hidden" id="detailid" />
                    <input type="hidden" id="actualitemquantity" />
                    <input type="hidden" id="ballitemquantity" />
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="clearmodel();">Close</button>
                    <button type="button" class="add btn btn-primary">Add Item</button>
                    <input type="hidden" id="requisition_detail_id" />
                </div>
            </div>

        </div>
    </div>

    <div class="modal fade" id="DeliveryModal" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" onclick="clearmodeldel();">&times;</button>
                    <h4 class="modal-title">Schedule Details</h4>
                </div>
                <div class="modal-body" style="max-height:500px;overflow:auto">

                    <div class="row" id="divdelivery">
                        <div class="form-group">
                            <label class="control-label col-md-3">
                                Delivery Date <span class="required">*</span>
                            </label>
                            <div class="col-md-7" id="del_datediv">
                                <input type="date" class="form-control col-md-7 col-xs-12" id="del_date">
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row" id="qtext">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Quantity <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <input type="number" class="form-control col-md-7 col-xs-12" id="del_quantity">
                            </div>
                        </div>
                    </div>
                    <br />
                </div>
                <br />
                <div class="modal-footer">
                    <input type="number" id="srnodel" hidden />
                    <input type="number" id="sum_delquantity" hidden />
                    <input type="number" id="sum_balquantity" hidden />
                    <input type="text" id="item_names" hidden />
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="clearmodeldel();">Close</button>
                    <button type="button" class="adddel btn btn-primary">Add Schedule</button>
                </div>
            </div>

        </div>
    </div>

    <div class="modal fade" id="DeliveryModalEdit" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" onclick="clearmodeldel();">&times;</button>
                    <h4 class="modal-title">Schedule Details</h4>
                </div>
                <div class="modal-body" style="max-height:500px;overflow:auto">
                    <div class="row" id="divdelivery">
                        <div class="form-group">
                            <label class="control-label col-md-3">
                                Delivery Date <span class="required">*</span>
                            </label>
                            <div class="col-md-7" id="del_datediv">
                                <input type="date" class="form-control col-md-7 col-xs-12" id="del_date_edit">
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row" id="qtext">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Quantity <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <input type="number" class="form-control col-md-7 col-xs-12" id="del_quantity_edit">
                            </div>
                        </div>
                    </div>
                    <br />
                </div>
                <br />
                <div class="modal-footer">
                    <input type="number" id="srnodel" hidden />
                    <input type="number" id="sum_delquantity" hidden />

                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="clearmodeldel();">Close</button>
                    <button type="button" class="adddeledit btn btn-primary">Add Schedule</button>
                </div>
            </div>

        </div>
    </div>
            <!-- Modal -->
    <div class="modal fade" id="myCanModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h3 class="modal-title" style="text-align:center"><span style="color:red">Are you sure you want to cancel this Purchase Order ? You will not be able to reverse this action. </span></h3>
                </div>
                <div class="modal-body">
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Cancellation Reason <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                @Html.DropDownList("reason_id", (System.Web.Mvc.SelectList)ViewBag.cancellationreasonlist, "---Select---", new { @class = "form-control col-md-7 col-xs-12" })
                                @*@Html.EditorFor(model => model.cancellation_remarks, new { htmlAttributes = new { @class = "form-control" } })*@
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Remarks
                            </label>
                            <div class="col-md-7">
                                <textarea id="cancel_remarks" class="form-control"></textarea>
                            </div>
                        </div>
                    </div>
                    <br />
                </div>
                <br />
                <div class="modal-footer">
                    <input type="hidden" id="srno" />
                    <button type="button" class="btn btn-danger" data-dismiss="modal" onclick="clearmodel();">No</button>
                    <button type="button" class="btn btn-success" id="Cancelled" name="Cancelled" onclick="Cancel_Po();" style="margin-top:-4px">Yes</button>
                </div>
            </div>

        </div>
    </div>
        <!-- End Modal-->
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/RemoveUnexpectedFile.js"></script>
    <script src="~/Scripts/requirevalidation.js"></script>

    <script type="text/javascript">
        var indx = 0;
        var bal_qty = 0;

        function clearmodeldel() {

            if($("#del_quantity").val()!="")
            {
                var st = $('#Staggerd_Table').dataTable();
                var rowCountde = st.fnGetData().length;
                var id = $(this).parent('td').parent('tr').index();
                st.fnUpdate($('#del_date').val(), indx, 2);
                st.fnUpdate(parseFloat($('#del_quantity').val()).toFixed(2), indx, 3);
                st.fnUpdate(0, indx, 6);
                $("#del_quantity").val('');
                $("#del_date").val('');
            }

        }

        $(".adddel").on("click", function (event) {
            var st = $('#Staggerd_Table').dataTable();
            var rowCount = st.fnGetData().length;
            var totdelqty = 0;
            var srnos =  $('#srnodel').val();
            var itemid = $("#items_id").val();


            calculateTotal();
            var val = 0;


            for (i = 0; i < rowCount; i++) {


                if( itemid == st.fnGetData(i)[4])
                {

                    var dt = $('#del_date').val()
                    var dt1 = st.fnGetData(i)[2];

                    if(dt != "" && dt1 != "")
                    {
                        var date = new Date(dt);
                        var date1 = new Date(dt1);
                        var today = new Date();

                        if(date.getTime() === date1.getTime() )
                        {
                            swal("Delivery Date already exist for selected item !!", "", "error");
                            return val = 1;
                        }

                        if(date < today )
                        {
                            swal("Delivery Date should be greater than Today' Date!!", "", "error");
                            return val = 1;
                        }

                    }

                    totdelqty = +$('#sum_delquantity').val()+ +$('#del_quantity').val();
                    var itemqty = st.fnGetData(i)[5];
                    bal_qty  = st.fnGetData(i)[8];
                    if(parseInt(itemqty) <  totdelqty )
                    {
                        swal("Total Qty cannot be greater than Item Qty/ Qty cannot be Zero!!", "", "error");
                        return val = 1;
                    }

                    if( $('#del_quantity').val() == 0)
                    {
                        swal("Qty cannot be Zero!!", "", "error");
                        return val = 1;
                    }

                }


            }

            if(val == 0)
            {

                st.fnAddData([parseInt($('#srnodel').val()),$('#item_names').val(),$('#del_date').val(),parseFloat($('#del_quantity').val()).toFixed(2),itemid,itemqty,0,0,bal_qty,'']);
            $('#DeliveryModal').modal('hide');

            }


        });


        $(".adddeledit").on("click", function (event) {
            var st = $('#Staggerd_Table').dataTable();
            var rowCount = st.fnGetData().length;
            var totdelqty = 0;
            var srnos =  $('#srnodel').val();
            var itemid = $("#items_id").val();


            calculateTotal();
            var val = 0;


            for (i = 0; i < rowCount; i++) {


                if( itemid == st.fnGetData(i)[4] && parseInt(srnos) == st.fnGetData(i)[0])
                {
                 //   var items_name = items.filter(a=>a.Value == st.fnGetData(i)[4]);
                    totdelqty = +$('#sum_delquantity').val()+ +$('#del_quantity_edit').val();
                    var itemqty = st.fnGetData(i)[5];
                    bal_qty  = st.fnGetData(i)[8];


                    var rem_qty = itemqty - $('#sum_balquantity').val();
                    if(totdelqty <= rem_qty )
                    {
                        swal("Total Qty cannot be less than GRN Qty!!", "", "error");
                        return val = 1;
                    }

                    if(totdelqty >  itemqty)
                    {
                        swal("Total Qty cannot be greater than Item Qty!!", "", "error");
                        return val = 1;
                    }

                    if( $('#del_quantity_edit').val() == 0)
                    {
                        swal("Qty cannot be Zero!!", "", "error");
                        return val = 1;
                    }

                }


            }

            if(val == 0)
            {
                    st.fnUpdate($('#del_date_edit').val(), indx, 2);
                    st.fnUpdate(parseFloat($('#del_quantity_edit').val()).toFixed(2), indx, 3);
                    st.fnUpdate(0, indx, 6);
                    $('#DeliveryModalEdit').modal('hide');
            }


        });


        $(document).ready(function(){
            $("#blancket_delivery").hide();
           // $("#staggered_delivery").hide();
            $('#is_rcm').checkboxpicker();
            var error=@Html.Raw(Json.Encode(ViewBag.error));
            if(error !="")
            {
                sweetAlert("",error,"error");
            }
            $("#vendor_id").select2({
                placeholder: "Select Vendor",
                allowClear: true
            });
            $("#plant_id").select2({
                placeholder: "Select Plant",
                allowClear: true
            });
            $("#responsibility_id").select2({
                placeholder: "Select Employee",
                allowClear: true
            });
            $("#business_unit_id").select2({
                placeholder: "Select Business Unit",
                allowClear: true
            });
            $("#item_id").select2({
                placeholder: "Select Item",
                allowClear: true
            });
            $("#tax_id").select2({
                placeholder: "Select Tax",
                allowClear: true
            });
            $("#sloc_id").select2({
                placeholder: "Select SLoc",
                allowClear: true
            });
            var t = $('#ContactGrid').DataTable();
            var t1 = $('#Staggerd_Table').DataTable();
            var pl_detail = @Html.Raw(JsonConvert.SerializeObject(this.Model));
            if(pl_detail.ref_status!=null)
            {
                if(pl_detail.ref_status.status_name =='Cancelled' || pl_detail.ref_status.status_name =='Closed' ){

                    $("#form :input").prop("disabled", true);

                }
                if(pl_detail.ref_status.status_name =='Cancelled' )
                {
                    $("#status_id").hide();
                    $("#status").show();
                }
                else if( pl_detail.ref_status.status_name =='Closed' )
                {
                    $("#status_id").hide();
                    $("#closed").show();
                    $("#create").hide();
                    $("#create").hide();
                    $("#close_po").hide();
                    $("#cancel_pi").hide();

                }
                else if( pl_detail.ref_status.status_name =='Open' )
                {
                    $("#status_id").hide();
                    $("#open").show();
                }
                if(pl_detail.ref_status.status_name!='Open')
                {
                    document.getElementById("po_date").disabled = true;
                    document.getElementById("payment_terms_id").disabled = true;
                }
                else
                {
                    document.getElementById("po_date").disabled = false;
                    document.getElementById("payment_terms_id").disabled = false;
                }
                if(pl_detail.cancellation_remarks!=null)
                {
                    $("#cancel_pi").hide();
                    $("#create").hide();
                }
            }

            var i=1;
            var str="";
            var str1="";
            var tot = 0;
            var tot_qty=0;
            if(pl_detail.is_rcm==true)
            {
                Get_Tax(1);
            }
            else
            {
                Get_Tax(0);
            }


            $.each(pl_detail.pur_po_delivery_detail_vm, function(key, value) {
                var input = value.staggered_date;
                var result = input.substring(0, 10);
                var rc=t1.fnGetData().length;
                t1.fnAddData([value.sr_nos,value.item_code,result,parseFloat(value.staggered_qty).toFixed(2),value.staggered_item_id,value.quantity,'',value.po_staggered_delivery_id,value.del_balance_qty,'']);
               // t1.fnAddData([rc+1,result,parseFloat(value.staggered_qty).toFixed(2),value.po_staggered_delivery_id,'']);
                tot_qty+=value.staggered_qty;
            });
            $("#diff2").val(tot_qty);
            tot_qty=0;
            $.each(pl_detail.pur_po_detail_vm, function(key, value) {
                var input = value.delivery_date;
                var result = input.substring(0, 10);
                t.fnAddData([value.po_detail_id,i,value.item_id,value.item_name,value.user_description,value.hsn_id==null?0:value.hsn_id,value.hsn_code==null?"":value.hsn_code,value.sloc_id,value.sloc_name,result, parseFloat(value.quantity).toFixed(2),
                    value.uom_id, value.uom_name, parseFloat(value.unit_price).toFixed(2), parseFloat(value.discount).toFixed(2), parseFloat(value.eff_unit_price).toFixed(2), parseFloat(value.purchase_value).toFixed(2), parseFloat(value.assesable_rate).toFixed(2),
                    parseFloat(value.assesable_value).toFixed(2),value.tax_code_id,value.tax_name,value.pur_requisition_detail_id,'',value.item_type_id

                ]);
                tot_qty+=value.quantity;

                i=i+1;
                str1 = value.tax_code_id + "~";
                str1 = str1 + value.assesable_value + "~";
                str1 = str1 + value.purchase_value;
                if (i == 0) {
                    str = str1 + ","
                }
                else {
                    str = str + str1 + ",";
                }
                tot = tot + parseFloat(value.purchase_value);
            });
            getnetTotal();
            $("#diff1").val(tot_qty);
            GetTaxDetail(str.slice(0, -1), tot, pl_detail.po_date);
            if(pl_detail.item_service_id!=2)
            {
                $('#uprice').text("Unit Price *");
                $("#unitpricetext").text("Unit Price");
                $('.dt_col_hide').show();
                FillItem(1);
            }
            else
            {
                if(pl_detail.with_without_service_id==2)
                {
                    $('#uprice').text("Price *");
                    $("#unitpricetext").text("Price");
                    $('.dt_col_hide').hide();
                    FillItem(2);
                }
                else
                {
                    $('#uprice').text("Unit Price *");
                    $("#unitpricetext").text("Unit Price");
                    $('.dt_col_hide').show();
                    FillItem(1);
                }
            }

            GetStorageLocation(pl_detail.plant_id);
            var data="";
            $.each(pl_detail.pur_po_form, function(key, value) {
                $("#form_id").val(value.form_id);
            });
            getGST($('#vendor_id').val());
        });

        $(".add").on("click", function (event) {
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            var item_id = $("#item_id").val();
            var detailid= $("#detailid").val();
            var item_name = $("#item_id").find("option:selected").text();
            var slocid = $("#sloc_id").val();
            if (slocid == "") {
                slocid = 0;
            }
            var slocname = $("#sloc_id").find("option:selected").text();
            var userdescription = $("#udescription").val();
            var delevery_date = $("#dte").val();
            var qty = $("#quantity").val();
            var unit_id = $("#uom_id").val();
            if (unit_id == "") {
                unit_id = 0;
            }
            var unit_name = $("#uom_id").find("option:selected").text();
            var unit_price = $("#unitprice").val();
            var discount = $("#discount").val();
            var effectiveprice = $("#effectiveprice").val();
            var salesvalue = $("#salesvalue").val();
            var assessablerate = $("#assessablerate").val();
            var assessablevalue = $("#assessablevalue").val();
            var taxcode = $("#tax_id").find("option:selected").text();
            var taxid = $("#tax_id").val();
            var requisition_detail_id = $("#requisition_detail_id").val();
            var hsn_id = $("#sac_hsn_id").val();
            var hsn = $("#sac_hsn_id :selected").text();
            if(hsn=='---Select---'){hsn=''}
            var item_type_id = $("#item_type_id").val();
            if (requisition_detail_id == "") {
                requisition_detail_id = 0;
            }
            if (item_id == '') {
                swal("", "Please Select Item!", "error");
                return false;
            }
            //calculateTotal();
            //var rem_qty = $('#actualitemquantity').val() - $('#sum_balquantity').val();

            //if(qty <= rem_qty )
            //{
            //    swal("Total Qty cannot be less than GRN Qty!!", "", "error");
            //    return false;
            //}

            if ((slocid == '') && ($('#divsloc').css('display') != 'none')) {
                swal("", "Please select SLoc.", "error");
                return false;
            }
            if ((delevery_date == '') && ($('#divdelivery').css('display') != 'none')) {
                swal("", "Please Select Delivery Date.", "error");
                return false;
            }
            if ((qty == '') && ($("#quantity").prop('disabled') == false)) {
                swal("", "Please Enter Quantity.", "error");
                return false;
            }
            if ((parseFloat(qty) <= 0) && ($("#quantity").prop('disabled') == false)) {
                swal("", "Quantity should be greater than zero.", "error");
                return false;
            }
            if ((unit_id == '') && ($("#qtext").css('display') != 'none')) {
                swal("", "Please select Unit.", "error");
                return false;
            }
            if (unit_price == '') {
                swal("", "Please enter unit price.", "error");
                return false;
            }
            if (salesvalue == '') {
                swal("", "Please enter purchase value.", "error");
                return false;
            }
            if(parseFloat(salesvalue)<=0)
            {
                swal("", "Purchase value should be greater than zero.", "error");
                return false;
            }
            if (taxcode == '') {
                swal("", "Please select tax code.", "error");
                return false;
            }
            if (hsn_id=='') {
                swal("", "SAC/HSN Code is required .", "error");
                return false;
            }
            if (hsn_id=='0') {
                swal("", "SAC/HSN Code is required .", "error");
                return false;
            }
            if (discount == '') {
                discount = 0;
            }
            if(detailid=='')
            {
                detailid=0;
            }
            if ($("#srno").val() == "") {
                t.fnAddData([detailid, rowCount + 1, item_id, item_name, userdescription,hsn_id,hsn, slocid, slocname, delevery_date, parseFloat(qty).toFixed(2), unit_id, unit_name, parseFloat(unit_price).toFixed(2), parseFloat(discount).toFixed(2),
                    parseFloat(effectiveprice).toFixed(2), parseFloat(salesvalue).toFixed(2), parseFloat(assessablerate).toFixed(2), parseFloat(assessablevalue).toFixed(2), taxid, taxcode, requisition_detail_id, '',item_type_id
                ]);

                var st = $('#Staggerd_Table').dataTable();;
                var rowCount1 = st.fnGetData().length;
                st.fnAddData([rowCount + 1,item_name,delevery_date,parseFloat(qty).toFixed(2),item_id,parseFloat(qty).toFixed(2),0,0,parseFloat(qty),''])

            }
            else {
                var cc = $("#srno").val();
                cc = parseInt(cc) - 1;

                if ($('#item_service_id').val() == 2)
                {
                    if ($("#with_without_service_id").val() != 2) {
                    //var st = $('#ContactGrid').dataTable();
                    //var rowCount = st.fnGetData().length;

                    var st = $('#Staggerd_Table').dataTable();
                    var rowCount = st.fnGetData().length;
                    var xx = st.fnGetData(cc)[3];

                    if (parseInt(qty) < parseInt(xx)) {
                        swal("Delivery Qty is greater than Item Qty!!", "", "error");
                        return false;
                    }

                    if (parseInt(qty) > parseInt(xx)) {

                        swal({
                            title: "Are you sure?",
                            text:  "Delivery Qty is not equal to Item Qty!!!" ,
                            type: "warning",
                            showCancelButton: true,
                            confirmButtonClass: "btn-danger",
                            confirmButtonText: "Yes, Save it!",
                            closeOnConfirm: false
                        },
                            function () {

                                t.fnUpdate([detailid, cc + 1, item_id, item_name, userdescription, hsn_id, hsn, slocid, slocname, delevery_date, parseFloat(qty).toFixed(2), unit_id, unit_name, parseFloat(unit_price).toFixed(2), parseFloat(discount).toFixed(2),
                                    parseFloat(effectiveprice).toFixed(2), parseFloat(salesvalue).toFixed(2), parseFloat(assessablerate).toFixed(2), parseFloat(assessablevalue).toFixed(2), taxid, taxcode, requisition_detail_id, '', item_type_id], cc)


                                for (i = 0; i < rowCount; i++) {

                                    if (st.fnGetData(i)[1] == t.fnGetData(cc)[1]) {
                                        st.fnUpdate(parseFloat(qty).toFixed(2), i, 13);
                                    }

                                }

                                clearmodel();
                                getnetTotal();
                                var rowCount1 = t.fnGetData().length;
                                var str;
                                var str1;
                                var tot = 0;
                                var tot_qty = 0;
                                for (i = 0; i < rowCount1; i++) {
                                    str1 = t.fnGetData(i)[19] + "~";
                                    str1 = str1 + t.fnGetData(i)[18] + "~";
                                    str1 = str1 + t.fnGetData(i)[16];
                                    if (i == 0) {
                                        str = str1 + ","
                                    }
                                    else {
                                        str = str + str1 + ",";
                                    }
                                    tot = tot + parseFloat(t.fnGetData(i)[16]);
                                    tot_qty = tot_qty + parseFloat(t.fnGetData(i)[10]);
                                }
                                GetTaxDetail(str.slice(0, -1), tot, $("#po_date").val());
                                swal("Saved!", "Qty has been Saved.", "success");
                            });
                    }
                 
                    if (parseInt(qty) == parseInt(xx)) {


                        t.fnUpdate([detailid, cc + 1, item_id, item_name, userdescription, hsn_id, hsn, slocid, slocname, delevery_date, parseFloat(qty).toFixed(2), unit_id, unit_name, parseFloat(unit_price).toFixed(2), parseFloat(discount).toFixed(2),
                            parseFloat(effectiveprice).toFixed(2), parseFloat(salesvalue).toFixed(2), parseFloat(assessablerate).toFixed(2), parseFloat(assessablevalue).toFixed(2), taxid, taxcode, requisition_detail_id, '', item_type_id], cc)


                        for (i = 0; i < rowCount; i++) {

                            if (st.fnGetData(i)[1] == t.fnGetData(cc)[1]) {
                                st.fnUpdate(parseFloat(qty).toFixed(2), i, 13);
                            }

                        }
                        swal("Saved!", "Qty has been Saved.", "success");

                    }

                    }
                    else {
                        t.fnUpdate([detailid, cc + 1, item_id, item_name, userdescription, hsn_id, hsn, slocid, slocname, delevery_date, parseFloat(qty).toFixed(2), unit_id, unit_name, parseFloat(unit_price).toFixed(2), parseFloat(discount).toFixed(2),
                            parseFloat(effectiveprice).toFixed(2), parseFloat(salesvalue).toFixed(2), parseFloat(assessablerate).toFixed(2), parseFloat(assessablevalue).toFixed(2), taxid, taxcode, requisition_detail_id, '', item_type_id], cc)

                    }

                }
                else
                {
                   
                        var st = $('#Staggerd_Table').dataTable();
                        var rowCount = st.fnGetData().length;
                        var xx = st.fnGetData(cc)[3];

                        if (parseInt(qty) < parseInt(xx)) {
                            swal("Delivery Qty is greater than Item Qty!!", "", "error");
                            return false;
                        }

                        if (parseInt(qty) > parseInt(xx)) {

                            swal({
                                title: "Are you sure?",
                                text: "Delivery Qty is not equal to Item Qty!!!",
                                type: "warning",
                                showCancelButton: true,
                                confirmButtonClass: "btn-danger",
                                confirmButtonText: "Yes, Save it!",
                                closeOnConfirm: false
                            },
                                function () {

                                    t.fnUpdate([detailid, cc + 1, item_id, item_name, userdescription, hsn_id, hsn, slocid, slocname, delevery_date, parseFloat(qty).toFixed(2), unit_id, unit_name, parseFloat(unit_price).toFixed(2), parseFloat(discount).toFixed(2),
                                        parseFloat(effectiveprice).toFixed(2), parseFloat(salesvalue).toFixed(2), parseFloat(assessablerate).toFixed(2), parseFloat(assessablevalue).toFixed(2), taxid, taxcode, requisition_detail_id, '', item_type_id], cc)


                                    for (i = 0; i < rowCount; i++) {

                                        if (st.fnGetData(i)[0] == t.fnGetData(cc)[1]) {
                                            st.fnUpdate(parseFloat(qty).toFixed(2), i, 5);
                                        }

                                    }

                                    clearmodel();
                                    getnetTotal();
                                    var rowCount1 = t.fnGetData().length;
                                    var str;
                                    var str1;
                                    var tot = 0;
                                    var tot_qty = 0;
                                    for (i = 0; i < rowCount1; i++) {
                                        str1 = t.fnGetData(i)[19] + "~";
                                        str1 = str1 + t.fnGetData(i)[18] + "~";
                                        str1 = str1 + t.fnGetData(i)[16];
                                        if (i == 0) {
                                            str = str1 + ","
                                        }
                                        else {
                                            str = str + str1 + ",";
                                        }
                                        tot = tot + parseFloat(t.fnGetData(i)[16]);
                                        tot_qty = tot_qty + parseFloat(t.fnGetData(i)[10]);
                                    }
                                    GetTaxDetail(str.slice(0, -1), tot, $("#po_date").val());
                                    swal("Saved!", "Qty has been Saved.", "success");
                                });
                        }
                        if (parseInt(qty) == parseInt(xx)) {


                            t.fnUpdate([detailid, cc + 1, item_id, item_name, userdescription, hsn_id, hsn, slocid, slocname, delevery_date, parseFloat(qty).toFixed(2), unit_id, unit_name, parseFloat(unit_price).toFixed(2), parseFloat(discount).toFixed(2),
                                parseFloat(effectiveprice).toFixed(2), parseFloat(salesvalue).toFixed(2), parseFloat(assessablerate).toFixed(2), parseFloat(assessablevalue).toFixed(2), taxid, taxcode, requisition_detail_id, '', item_type_id], cc)


                            for (i = 0; i < rowCount; i++) {

                                if (st.fnGetData(i)[0] == t.fnGetData(cc)[1]) {
                                    st.fnUpdate(parseFloat(qty).toFixed(2), i, 5);
                                }

                            }
                            swal("Saved!", "Qty has been Saved.", "success");

                        }
                   

                    
                }
  
            }
            if ($('#item_service_id').val() == 2) {
                if($("#with_without_service_id").val()==1)
                {
                    $('.dt_col_hide').show();
                }
                else
                {
                    $('.dt_col_hide').hide();
                }

            }
            else {
                $('.dt_col_hide').show();
            }
            clearmodel();
            getnetTotal();
            var rowCount1 = t.fnGetData().length;
            var str;
            var str1;
            var tot = 0;
            var tot_qty=0;
            for (i = 0; i < rowCount1; i++) {
                str1 = t.fnGetData(i)[19] + "~";
                str1 = str1 + t.fnGetData(i)[18] + "~";
                str1 = str1 + t.fnGetData(i)[16];
                if (i == 0) {
                    str = str1 + ","
                }
                else {
                    str = str + str1 + ",";
                }
                tot = tot + parseFloat(t.fnGetData(i)[16]);
                tot_qty = tot_qty + parseFloat(t.fnGetData(i)[10]);
            }
            GetTaxDetail(str.slice(0, -1), tot, $("#po_date").val());
            $("#diff1").val(tot_qty);
            return true;
        });
    function clearmodel()
    {
        $("#item_id").val('').trigger("change");

        $("#quantity").val('');
        $("#uom_id").val('');
        $("#unitprice").val('');
        $("#dte").val('');
        $("#discount").val('');
        $("#effectiveprice").val('');
        $("#salesvalue").val('');
        $("#assessablerate").val('');
        $("#assessablevalue").val('');
        $("#udescription").val('');
        $("#tax_id").val('').trigger("change");
        $("#sloc_id").val("").trigger("change");
        $("#srno").val('');
        $("#detailid").val('');
        $('#requisition_detail_id').val('');
        $("#sac_hsn_id").val(0);
        $("#item_type_id").val('');
    }
    function calculation() {
        var quantity = $("#quantity").val();
        var unitprice = $("#unitprice").val();
        var discount = $("#discount").val();
        var assessable = $("#assessablerate").val();
        var effectiveprice = 0;
        if (quantity=="")
        {
            quantity = 0;
        }
        if (unitprice=="")
        {
            unitprice = 0;
        }
        if (discount=="")
        {
            effectiveprice = unitprice;
        }
        else
        {
            effectiveprice = unitprice - (unitprice * discount / 100);
        }
        $("#effectiveprice").val(effectiveprice);
        $("#assessablerate").val(effectiveprice);
        $("#salesvalue").val(effectiveprice * quantity);

        var assessable1=$("#assessablerate").val();
        $("#assessablevalue").val(assessable1 * quantity);
    }
    function asscalculation()
    {
        var quantity = $("#quantity").val();
        var assessable1 = $("#assessablerate").val();
        $("#assessablevalue").val(assessable1 * quantity);
    }
    $('#ContactGrid').DataTable({
        "bPaginate": false,
        "ordering": false,
        "bfooter": false,
        "info": false,
        "bLengthChange": false,
        "bAutoWidth": false,
        "bFilter": false,
        "bSort": false,
        aoColumns: [
                { sname: "a", bVisible: false },
                 { sname: "b", sWidth: "5%" },
                 { sname: "c", bVisible: false },
                 { sname: "d" },
                 { sname: "e", sWidth: "12%" },
                 { sname: "hsn_id", bVisible: false },
                 { sname: "hsn", sWidth: "12%" },
                 { sname: "f", bVisible: false },
                 { sname: "g", bVisible: true,sClass: "right" },
                 { sname: "h", sClass: "dt_col_hide", sWidth: "10%" },
                 { sname: "i", sWidth: "8%", sClass: "dt_col_hide right" },
                 { sname: "j", bVisible: false },
                 { sname: "k", sWidth: "8%", sClass: "dt_col_hide" },
                 { sname: "l", sWidth: "8%" ,sClass: "right", bVisible: false},
                 { sname: "m", sWidth: "8%",sClass: "right" , bVisible: false},
                 { sname: "n", sWidth: "8%", sClass: "right" , bVisible: true},
                 { sname: "o", sWidth: "8%",sClass: "right" },
                 { sname: "P", bVisible: false,sClass: "right" },
                 { sname: "q", bVisible: false ,sClass: "right"},
                  { sname: "r", bVisible: false },
                 { sname: "s", bVisible: true },
                 { sname: "t", bVisible: false },
                 {
                     sname: "u", sWidth: "8%",
                     bSortable: false,
                     mRender: function (data, type, full) {
                         return '<img class="edit" src="../images/writing_file.png" height="20px" width="25px" alt="Edit"  /><img class="delete" src="../images/remove.png" height="20px" width="25px" alt="Delete" />';
                     }
                 },
                 { sname: "item_type_id", bVisible: false },
        ]

    });

    $('#ContactGrid').on('click', '.edit', function () {
        var t = $('#ContactGrid').DataTable();
        var id = $(this).parent('td').parent('tr').index();
        $('#myModal').modal('show');
        $("#detailid").val(t.fnGetData(id)[0]);
        $("#srno").val(t.fnGetData(id)[1]);
        $("#item_id").val(t.fnGetData(id)[2]).trigger('change');
        $('#dte').val(t.fnGetData(id)[9]);
        $('#udescription').val(t.fnGetData(id)[4]);
        $('#quantity').val(t.fnGetData(id)[10]);
        $('#actualitemquantity').val(t.fnGetData(id)[10]);

        if(t.fnGetData(id)[11]==0)
        {
            $('#uom_id').val('');
        }
        else
        {
            $('#uom_id').val(t.fnGetData(id)[11]);
        }
        $('#unitprice').val(t.fnGetData(id)[13]);
        $('#discount').val(t.fnGetData(id)[14]);
        $('#effectiveprice').val(t.fnGetData(id)[15]);
        $('#salesvalue').val(t.fnGetData(id)[16]);
        $('#assessablerate').val(t.fnGetData(id)[17]);
        $('#assessablevalue').val(t.fnGetData(id)[18]);
        console.log(t.fnGetData(id)[20] + "---" + t.fnGetData(id)[19]);
        if(t.fnGetData(id)[20]==0)
        {
            $('#tax_id').val("").trigger('change');
        }
        else
        {
            $('#tax_id').val(t.fnGetData(id)[19]).trigger('change');
        }
        var str = t.fnGetData(id)[7];
        if(t.fnGetData(id)[7]==0)
        {
            $('#sloc_id').val('').trigger('change');
        }
        else
        {
            $('#sloc_id').val(t.fnGetData(id)[7]).trigger('change');
        }
        $("#requisition_detail_id").val(t.fnGetData(id)[21]);
        $("#item_type_id").val(t.fnGetData(id)[23]);
        fill_hsnforedit(t.fnGetData(id)[23]);
        $('#sac_hsn_id').val(t.fnGetData(id)[5]);
    });



    $('#ContactGrid').on('click', '.delete', function () {
        var st = $('#Staggerd_Table').dataTable();
        var rowCount1 = st.fnGetData().length;
        var t = $('#ContactGrid').dataTable();

        var id = $(this).parent('td').parent('tr').index();
        //var deleteids = t.fnGetData(id).pur_requisition_detail_id;
        swal({
            title: "Are you sure?",

            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Yes, delete it!",
            closeOnConfirm: true
        },
 function (isConfirm) {
     if (isConfirm) {
         for (j = rowCount1-1; j >= 0; j--) {

             var ctid = t.fnGetData(id)[1];

             if(st.fnGetData(j) != null)
             {
                 var ids = st.fnGetData(j)[0];
                 if(parseInt(ids) == parseInt(ctid))
                 {
                     st.fnDeleteRow(j);
                 }
             }

         }
         t.fnDeleteRow(id);
         $('#sum_delquantity').val('');
         getnetTotal();
         var rowCount = t.fnGetData().length;
         var str="";
         var str1="";
         var tot = 0;
         var tot_qty=0;
         for (i = 0; i < rowCount; i++) {
             str1 = t.fnGetData(i)[19] + "~";
             str1 = str1 + t.fnGetData(i)[18] + "~";
             str1 = str1 + t.fnGetData(i)[16];
             if (i == 0) {
                 str = str1 + ","
             }
             else {
                 str = str + str1 + ",";
             }
             tot = tot + parseFloat(t.fnGetData(i)[16]);
             tot_qty = tot_qty + parseFloat(t.fnGetData(i)[10]);
         }
         GetTaxDetail(str.slice(0, -1), tot, $("#po_date").val());
         $("#diff1").val(tot_qty);
         var len = t.fnGetData().length;
         var len1 = st.fnGetData().length;
         var i = 1;
         var row = 0;
         if (len > 0) {
             $('#ContactGrid tbody tr').each(function () {
                 t.fnUpdate(i, row, 1);
                 i++;
                 row++;
             });
         }

         if (len1 > 0) {
             for (i = 0; i < len; i++) {
                 for (j = 0; j < len1; j++) {

                     if(t.fnGetData()[i][2] == st.fnGetData()[j][4])
                     {
                         st.fnUpdate(t.fnGetData()[i][1], j, 0);
                     }
                 }

             }

         }

     }
 });
    });

    function GetPrice(id)
    {
        if ($("#srno").val() == "") {
            var vendor_id=$("#vendor_id").val();
            $("#unitprice").val("");
            $("#discount").val("");
            $("#effectiveprice").val("");
            $("#assessablerate").val("");
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetVendorItemPrice", "PurchaseOrder")',
                data: { vendor_id: vendor_id,item_id:id },
                async:false,
                success: function (ITEM) {
                    $("#unitprice").val(ITEM.price);
                    if(ITEM.discount_type_id!=2)
                    {
                        $("#discount").val(ITEM.discount);
                    }
                    else
                    {
                        $("#discount").val(ITEM.discount*100/ITEM.price);
                    }
                    $("#effectiveprice").val(ITEM.price_after_discount);
                    $("#assessablerate").val(ITEM.price_after_discount);

                }
            });
        }
    }

    function GetUnit(id) {
            var plant_state_id = $('#place_of_supply_id').val();
            var supply_state_id = $('#billing_state_id').val();
            if (id != '' && $('#item_service_id').val() == 1)
            {
                GetPrice(id);
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetUserDescriptionForItem", "Generic")',
                    data: { id: id },
                    async:false,
                    success: function (ITEM) {
                        $('#uom_id').val(ITEM.UOM_ID);
                        $('#udescription').val(ITEM.user_description);
                        Get_hsn_saclist();
                        $('#sac_hsn_id').val(ITEM.sac_id);
                        if(ITEM.ITEM_CATEGORY_NAME=="Freight")
                        {
                            $("#unitprice").attr("disabled", true);
                            $("#quantity").attr("disabled", true);
                            $("#assessablerate").attr("disabled", true);
                            $("#discount").attr("disabled", true);
                            $("#salesvalue").removeAttr("disabled", true);
                            $("#unitprice").val(parseFloat('1').toFixed(2));
                            $("#discount").val(parseFloat('0').toFixed(2));
                            $("#effectiveprice").val(parseFloat('1').toFixed(2));
                            $("#assessablerate").val(parseFloat('1').toFixed(2));
                            calculation();
                        }
                        else
                        {
                            $("#unitprice").removeAttr("disabled", true);
                            $("#quantity").removeAttr("disabled", true);
                            $("#assessablerate").removeAttr("disabled", true);
                            $("#discount").removeAttr("disabled", true);
                            $("#salesvalue").attr("disabled", true);
                            //$("#unitprice").val('');
                            //$("#discount").val('');
                            //$("#effectiveprice").val('');
                            //$("#assessablerate").val('');
                            $("#quantity").val('1');
                            //$("#assessablevalue").val('');
                            //$("#salesvalue").val('');
                        }
                        try{
                            if(supply_state_id!=''){
                                plant_state_id =parseInt(plant_state_id);
                                if(supply_state_id==plant_state_id){
                                    if(ITEM.within_state_tax_id!=0){
                                        if($("#srno").val()=="")
                                        {
                                            $('#tax_id').val('').trigger('change');
                                            $('#tax_id').val(ITEM.within_state_tax_id).trigger('change');
                                        }
                                    }
                                }
                                else{
                                    if($("#srno").val()=="")
                                    {
                                        $('#tax_id').val('').trigger('change');
                                        $('#tax_id').val(ITEM.inter_state_tax_id).trigger('change');
                                    }
                                }
                            }
                        }catch(msg){console.log(msg.message)}
                    },
                    error: function (emp) {
                        $("#unitprice").removeAttr("disabled", true);
                        $("#quantity").removeAttr("disabled", true);
                        $("#assessablerate").removeAttr("disabled", true);
                        $("#discount").removeAttr("disabled", true);
                        $("#salesvalue").attr("disabled", true);
                        $("#quantity").val('1');
                        $("#discount").val('');
                        $("#effectiveprice").val('');
                        $("#assessablerate").val('');
                        $("#quantity").val('');
                        $("#assessablevalue").val('');
                        $("#salesvalue").val('');
                    }
                });

            }
            else {
                $("#unitprice").removeAttr("disabled", true);
                $("#quantity").removeAttr("disabled", true);
                $("#assessablerate").removeAttr("disabled", true);
                $("#discount").removeAttr("disabled", true);
                $("#salesvalue").attr("disabled", true);
                $("#unitprice").val('');
                $("#discount").val('');
                $("#effectiveprice").val('');
                $("#assessablerate").val('');
                $("#quantity").val('1');
                $("#assessablevalue").val('');
                $("#salesvalue").val('');
            }

        }
    function getnetTotal()
    {
        var t = $('#ContactGrid').DataTable();
        var rowCount = t.fnGetData().length;
        var total = 0;
        for (var i = 0; i < rowCount; i++) {
            total = total + parseFloat(t.fnGetData(i)[16]);
        }
       $("#net_value").val(parseFloat(total).toFixed(2));
       $("#gross_value").val(parseFloat(total).toFixed(2));
    }

    function TabletoJeson() {
        var t = $('#ContactGrid').DataTable()
        var rowCount = t.fnGetData().length;
        var t1 = $('#Staggerd_Table').DataTable()
        var rowCount1 = t1.fnGetData().length;
        $("#PoHidden").empty();
        for (i = 0; i < rowCount; i++) {
            $("#PoHidden").append('<input type="hidden" id="item_id' + i + '" name="item_ids" value=' + t.fnGetData(i)[2] + '>');
            $("#PoHidden").append('<input type="hidden" id="user_description' + i + '" name="user_descriptions" value=' + t.fnGetData(i)[4] + '>');
            $("#PoHidden").append('<input type="hidden" id="sloc_id' + i + '" name="sloc_ids" value=' + t.fnGetData(i)[7] + '>');
            $("#PoHidden").append('<input type="hidden" id="Linedelivery_date' + i + '" name="Linedelivery_dates" value=' + t.fnGetData(i)[9] + '>');
            $("#PoHidden").append('<input type="hidden" id="quantity' + i + '" name="quantitys" value=' + t.fnGetData(i)[10] + '>');
            $("#PoHidden").append('<input type="hidden" id="uom_id' + i + '" name="uom_ids" value=' + t.fnGetData(i)[11] + '>');
            $("#PoHidden").append('<input type="hidden" id="unit_price' + i + '" name="unit_prices" value=' + t.fnGetData(i)[13] + '>');
            $("#PoHidden").append('<input type="hidden" id="discount' + i + '" name="discounts" value=' + t.fnGetData(i)[14] + '>');
            $("#PoHidden").append('<input type="hidden" id="eff_price' + i + '" name="eff_prices" value=' + t.fnGetData(i)[15] + '>');
            $("#PoHidden").append('<input type="hidden" id="pur_value' + i + '" name="pur_values" value=' + t.fnGetData(i)[16] + '>');
            $("#PoHidden").append('<input type="hidden" id="ass_rate' + i + '" name="ass_rates" value=' + t.fnGetData(i)[17] + '>');
            $("#PoHidden").append('<input type="hidden" id="ass_value' + i + '" name="ass_values" value=' + t.fnGetData(i)[18] + '>');
            $("#PoHidden").append('<input type="hidden" id="tax_id' + i + '" name="tax_ids" value=' + t.fnGetData(i)[19] + '>');
            $("#PoHidden").append('<input type="hidden" id="pur_requisition_detail_id' + i + '" name="pur_requisition_detail_ids" value=' + t.fnGetData(i)[21] + '>');
            $("#PoHidden").append('<input type="hidden" id="po_detail_id' + i + '" name="po_detail_ids" value=' + t.fnGetData(i)[0] + '>');
            $("#PoHidden").append('<input type="hidden" id="sac_hsn_id' + i + '" name="sac_hsn_ids" value=' + t.fnGetData(i)[5] + ' >');
            $("#PoHidden").append('<input type="hidden" id="item_type_id' + i + '" name="item_type_ids" value=' + t.fnGetData(i)[23] + ' >');
            $("#PoHidden").append('<input type="hidden" id="detsr' + i + '" name="detsrs" value=' + t.fnGetData(i)[1] + ' >');
            $("#user_description" + i).val( t.fnGetData(i)[4].trim());
        }
        for (i = 0; i < rowCount1; i++) {
            $("#PoHidden").append('<input type="hidden" id="po_staggered_delivery_id' + i + '" name="po_staggered_delivery_id" value=' + t1.fnGetData(i)[7] + ' >');
            $("#PoHidden").append('<input type="hidden" id="staggered_date' + i + '" name="staggered_date" value=' + t1.fnGetData(i)[2] + ' >');
            $("#PoHidden").append('<input type="hidden" id="staggered_qty' + i + '" name="staggered_qty" value=' + t1.fnGetData(i)[3] + ' >');
            $("#PoHidden").append('<input type="hidden" id="staggered_item' + i + '" name="staggered_item" value=' + t1.fnGetData(i)[4] + ' >');
            $("#PoHidden").append('<input type="hidden" id="srnos' + i + '" name="srnos" value=' + t1.fnGetData(i)[0] + ' >');
        }
    }
    function FillItem(id) {
        if (id == "") {
            id = 0;
        }
        else {
            id = id;
        }
        $.ajax({
            url: '@Url.Action("GetItemOrGL", "Generic")',
            type: "GET",
            dataType: "JSON",
            async: false,
            data: { id: id ,item_type_id:$("#item_service_id").val()},
            success: function (item) {
                $("#item_id").html("");
                $("#item_id").append($('<option></option>').val("").html("---Select---"));
                if (id != 2) {
                    $.each(item, function (i, cycle) {
                        $("#item_id").append(
                            $('<option></option>').val(cycle.ITEM_ID).html(cycle.ITEM_NAME));
                    });
                }
                else {
                    $.each(item, function (i, cycle) {
                        $("#item_id").append(
                            $('<option></option>').val(cycle.gl_ledger_id).html(cycle.gl_ledger_name));
                    });
                }

            }
        });
    }
        function GetFreightTerms(value)
        {
            $("#quantity").val(parseFloat(value).toFixed(2));
            $("#assessablevalue").val(parseFloat(value).toFixed(2));
            $("#salesvalue").val(parseFloat(value).toFixed(2));
        }
    function GetStorageLocation(id) {
        if (id == "") {
            id = 0;
        }
        $.ajax({
            url: '@Url.Action("GetStorageLocation", "Generic")',
            type: "GET",
            dataType: "JSON",
            data: { id: id },
            success: function (id) {
                $("#sloc_id").html(""); // clear before appending new list
                $("#sloc_id").append($('<option></option>').val("").html("---Select---"));
                $.each(id, function (i, cycle) {
                    $("#sloc_id").append(
                        $('<option></option>').val(cycle.storage_location_id).html(cycle.storage_location_name));
                });
            }
        });
    }
    $('#net_value_currency_id').change(function () {
        var v = parseInt($(this).val())-1;
        $('#gross_value_currency_id option:eq(' + v + ')').prop('selected', true)
    });
    function GetTaxDetail(taxdetail, amount, dt) {
        $.ajax({
            url:'@Url.Action("GetTaxCalculation", "Generic")',
            type: "GET",
            dataType: "JSON",
            data: {entity:"calculatetax", st: taxdetail, amt: amount, dt: dt, tds_code_id: 0 },
            success: function (Payment_Cycle) {
                $('#TaxGrid tbody').html('');
                $.each(Payment_Cycle, function (i, cycle) {
                    $('#TaxGrid').append('<tbody>');
                    $('#TaxGrid').append('<tr><td>' + cycle.tax_name + '</td><td align="right">' + parseFloat(cycle.tax_value).toFixed(2) + '</td></tr>')
                    $('#TaxGrid').append('</tbody>');
                    $("#gross_value").val(parseFloat(cycle.tax_value).toFixed(2));
                });
            }
        });
    }
        $('#Staggerd_Table').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            aoColumns: [
                    { sname: "a", bVisible: true, sWidth: "5%" },
                     { sname: "e", bVisible: true, },
                     { sname: "b" },
                     { sname: "c", bVisible: true,sClass:"right" },
                     { sname: "f", bVisible: false,sWidth: "8%"  },
                     { sname: "g", bVisible: false,sWidth: "8%"  },
                     { sname: "h", bVisible: false,sWidth: "8%"  },
                     { sname: "i", bVisible: false,sWidth: "8%"  },
                      { sname: "j", bVisible: false,sWidth: "8%"  },
                     {
                         sname: "e", sWidth: "10%",
                         bSortable: false,
                         mRender: function (data, type, full) {
                             return '<img class="editsta" src="../images/writing_file.png" height="20px" width="25px" alt="Edit"  /><img class="deletesta" src="../images/remove.png" height="20px" width="25px" alt="Delete" /><img class="addsta" src="../images/Add.png" height="20px" width="25px" alt="Add" />';
                         }
                     }]

        });

        function calculateTotal(){
            try{

                var c = $('#Staggerd_Table').dataTable();
                var len = c.fnGetData().length;
                var itemid = $("#items_id").val();
                var sr =$('#srnodel').val();
                var _total = 0;
                var _baltot = 0

                for (i = 0; i < len; i++){

                    if( itemid == c.fnGetData(i)[4] && parseInt(sr) == c.fnGetData(i)[0])
                    {
                        _total = _total + parseFloat(c.fnGetData(i)[3]);
                        $('#sum_delquantity').val(parseFloat(_total).toFixed(2));

                    }


                    _baltot = _baltot + parseFloat(c.fnGetData(i)[8]);
                    $('#sum_balquantity').val(parseFloat(_baltot).toFixed(2));

                }

            }catch(msg){console.log(msg.message)}
        }



        $('#Staggerd_Table').on('click', '.addsta', function () {
            var t = $('#Staggerd_Table').dataTable();
           // clearmodeldel();
            var rowCountde = t.fnGetData().length;
            var id = $(this).parent('td').parent('tr').index();
            $("#del_date").prop('disabled', false);
            $("#items_id").val(t.fnGetData(id)[4]);
            $("#item_names").val(t.fnGetData(id)[1]);
            var sr = t.fnGetData(id)[0];
            $('#srnodel').val(sr);
            //t.fnUpdate(0, id, 6);
            $("#del_quantity").val('');
            $("#del_date").val('');
            $('#DeliveryModal').modal('show');
        });

        $('#Staggerd_Table').on('click', '.editsta', function () {
            var t = $('#Staggerd_Table').dataTable();;
            var id = $(this).parent('td').parent('tr').index();
            indx = id;
            $('#DeliveryModalEdit').modal('show');
            var sr = t.fnGetData(id)[0];
            $('#srnodel').val(sr);
            $("#del_date").val(t.fnGetData(id)[2]);
            $("#del_date_edit").val(t.fnGetData(id)[2]);
            $('#del_quantity').val(t.fnGetData(id)[3]);
            $('#del_quantity_edit').val(t.fnGetData(id)[3]);

            $("#items_id").val(t.fnGetData(id)[4]);
            $("#del_date").prop('disabled', true);
            t.fnUpdate(0, id, 3);
            t.fnUpdate(1, id, 6);
        });
        $('#Staggerd_Table').on('click', '.deletesta', function () {

            var t = $('#Staggerd_Table').DataTable();
            var id = $(this).parent('td').parent('tr').index();
            var deleteids = t.fnGetData(id)[1];
            swal({
                title: "Are you sure?",

                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: true
            },
     function (isConfirm) {
         if (isConfirm) {
             t.fnDeleteRow(id);
             var len = t.fnGetData().length;
             var tot_qty=0;
             for (i = 0; i < len; i++)
             {
                 tot_qty+=parseFloat(t.fnGetData(i)[2]);
             }
             $("#diff2").val(tot_qty);
             var i = 1;
             var row = 0;
             if (len > 0) {
                 $('#Staggerd_Table tbody tr').each(function () {
                     t.fnUpdate(i, row, 0);
                     i++;
                     row++;
                 });
             }
         }
     });
        });

        function getGST(id){
            try{
                var vendor_id =  $("#vendor_id").val();
                if(id!=''){
                    $.ajax({
                        type: 'GET',
                        url: "@Url.Action("GetGSTCustomerTypeforGRN", "Generic")",
                        data: { id: id },
                    success: function (gst) {
                        $('#gst_vendor_type_id').val(gst[0]);
                        $('#gst_in').val(gst[1]);
                    }
                });
            }
        }
            catch(ex){console.log(ex.message)}
        }

        $('#item_type_id').change(function(){
            fill_hsn();
        });
        function fill_hsn(){
            var item_type_id = $('#item_type_id').val();
            if(item_type_id==''){item_type_id=0}
            if(item_type_id!=''){
                try{
                    $.ajax({
                        url:'@Url.Action("Get_hsn_sac","Generic")',
                        data:{id:item_type_id},
                        method:'get',
                        async:false,
                        success:function(hsn){
                            $('#sac_hsn_id').empty();
                            $('#sac_hsn_id').append('<option value='+0+'>--Select--</option>');
                            $.each(hsn,function(k,v){
                                $('#sac_hsn_id').append('<option value='+v.id+'>'+v.code+'</option>');
                            });
                        }
                    });
                }
                catch(msg){msg.message}
            }
        };


        function fill_hsnforedit(item_type_id){
            if(item_type_id==''){item_type_id=0}
            if(item_type_id!=''){
                try{
                    $.ajax({
                        url:'@Url.Action("Get_hsn_sac","Generic")',
                        data:{id:item_type_id},
                        method:'get',
                        async:false,
                        success:function(hsn){
                            $('#sac_hsn_id').empty();
                            $('#sac_hsn_id').append('<option value='+0+'>--Select--</option>');
                            $.each(hsn,function(k,v){
                                $('#sac_hsn_id').append('<option value='+v.id+'>'+v.code+'</option>');
                            });
                        }
                    });
                }
                catch(msg){msg.message}
            }
        };



        function Get_hsn_saclist(item_type_id){
            var item_type_id = $('#item_id').val();
            if(item_type_id==''){item_type_id=0}
            if(item_type_id!=''){
                try{
                    $.ajax({
                        url:'@Url.Action("Get_hsn_saclist", "Generic")',
                        data:{id:item_type_id},
                        method:'get',
                        async:false,
                        success:function(hsn){
                            $('#sac_hsn_id').empty();
                            $('#sac_hsn_id').append('<option value='+0+'>--Select--</option>');
                            $.each(hsn,function(k,v){
                                $('#sac_hsn_id').append('<option value='+v.id+'>'+v.code+'</option>');
                            });
                        }
                    });
                }
                catch(msg){msg.message}
            }
        };
        function Get_Tax(id){
            if(id==''){id=0}
            try{
                $.ajax({
                    url:'@Url.Action("GetTaxByRCM", "Generic")',
                    data:{id:id},
                    method:'get',
                    async:false,
                    success:function(hsn){
                        $('#tax_id').empty();
                        $('#tax_id').append('<option></option>');
                        $.each(hsn,function(k,v){
                            $('#tax_id').append('<option value='+v.tax_id+'>'+v.tax_name+'</option>');
                        });
                    }
                });
            }
            catch(msg){msg.message}
        };
        // For onchange of dropdown box set the another dropdown value
        $("#reason_id").change(function(){
            $("#cancellation_reason_id").val($(this).val());
        });
        // For Clear Modal on click of No Button
        function clearmodel() {
            $("#reason_id").val('').trigger("change");
            $("#cancel_remarks").val('');
        }
        // Funcrion for cancellation
        function Cancel_Po()
        {
            if($("#reason_id").val()=="")
            {
                swal("Error!", "Please select the reason for cancellation", "error")
                return false;
            }
            if($("#reason_id").val()==28)
            {
                if($("#cancel_remarks").val()=="")
                {
                    swal("Error!", "Please enter the Remarks for cancellation", "error")
                    return false;

                }

            }
            $.ajax({
                url: '@Url.Action("DeleteConfirmed", "PurchaseOrder")',
                type: "POST",
                dataType: "JSON",
                async:false,
                data: { id: $("#po_id").val(),cancellation_remarks: $("#cancel_remarks").val(),reason_id:$("#reason_id").val()},
                success: function (id) {
                    if(id=="Cancelled")
                    {
                        swal({
                            title: "Cancelled",
                            text: "Your PO " + $("#po_no").val() + " has been cancelled.",
                            type: "success",
                            showCancelButton: false,
                            closeOnConfirm: false,
                            showLoaderOnConfirm: false
                        }, function () {

                            location.href = '@Url.Action("Index", "PurchaseOrder")'

                        });
                    }
                    else
                    {
                        swal("Error", id, "error");
                    }

                }
            });
        }
        $("#close_po").click(function(){
            swal({
                title: "Enter Remarks! *",
                //text: "Write something interesting:",
                type: "input",
                showCancelButton: true,
                closeOnConfirm: false,
                inputPlaceholder: "Write Remarks"
            }, function (inputValue) {
                if (inputValue === false) return false;
                if (inputValue.trim() === "") {
                    swal.showInputError("You need to write Remarks!");
                    return false
                }
                //swal("Nice!", "You wrote: " + inputValue, "success");
                  $.ajax({
                      url: '@Url.Action("CloseConfirmed", "PurchaseOrder")',
                      type: "POST",
                      dataType: "JSON",
                      async:false,
                      data: { id: $("#po_id").val(),remarks:inputValue},
                      success: function (id) {
                          console.log();
                          if(id=="Closed")
                          {
                              swal({
                                  title: "We Need To Get Approval For Closed",
                                  text: "Your PO " + $("#po_no").val() + " has been going for Approval.",
                                  type: "success",
                                  timer: 15000,
                                  showCancelButton: false,
                                  closeOnConfirm: false,
                                  showLoaderOnConfirm: false

                              }, function () {

                                  location.href = '@Url.Action("Index", "PurchaseOrder")'

                              });
                              //  swal("Error", id, "error");
                          }
                          else
                          {
                              swal("Error", id, "error");
                          }

                      }
                  });
            });
            //function (isConfirm) {
            //    if (isConfirm) {

            //    }
            //});
        });
    </script>
}