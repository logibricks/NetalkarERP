@model Sciffer.Erp.Domain.ViewModel.pur_poVM
@using Newtonsoft.Json
@{
    ViewBag.Title = "Create";
}
@using (Html.BeginForm("Edit", "PurchaseOrder", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal" style="margin-top:10px;">
        <div id="PoHidden"></div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(x => x.po_id)
        <div class="form-group">
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.category_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-4 col-sm-4 col-xs-12">
                            @Html.DropDownList("category_id", (System.Web.Mvc.SelectList)ViewBag.category_list, new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true, @onchange = "GetDocumentNumber(this.value);" })
                            @Html.ValidationMessageFor(model => model.category_id, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.po_no, htmlAttributes: new { @class = "hidden" })
                        <div class="col-md-4 col-sm-4 col-xs-12">
                            @Html.EditorFor(model => model.po_no, new { htmlAttributes = new { @class = "form-control num validinput removedisabled", @disabled = "disabled", @required = true } })
                            @Html.ValidationMessageFor(model => model.po_no, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.po_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.po_date, new { htmlAttributes = new { @class = "form-control validinput", @required = true } })
                            @Html.ValidationMessageFor(model => model.po_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.vendor_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12 " })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("vendor_id", (System.Web.Mvc.SelectList)ViewBag.vendor_list, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @onchange = "GetVendorDetails(this.value);" })
                            @Html.ValidationMessageFor(model => model.vendor_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.item_service_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12 " })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("item_service_id", new List<SelectListItem>
                             {
                                new SelectListItem{ Text="Item", Value = "1" },
                                new SelectListItem{ Text="Service", Value = "2" }
                             }, new { @class = "form-control removedisabled", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.item_service_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.net_value, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-5 col-sm-5 col-xs-12">
                            @Html.EditorFor(model => model.net_value, new { htmlAttributes = new { @class = "form-control pull-right validinput removedisabled", @type = "number", @required = true, @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.net_value, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3 col-sm-3 col-xs-12">
                            @Html.DropDownList("net_value_currency_id", (System.Web.Mvc.SelectList)ViewBag.currency_list, new { @class = "form-control removedisabled", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.net_value_currency_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.gross_value, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-5 col-sm-5 col-xs-12">
                            @Html.EditorFor(model => model.gross_value, new { htmlAttributes = new { @class = "form-control pull-right validinput removedisabled", @type = "number", @required = true, @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.gross_value, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3 col-sm-3 col-xs-12">
                            @Html.DropDownList("gross_value_currency_id", (System.Web.Mvc.SelectList)ViewBag.currency_list, new { @class = "form-control removedisabled", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.gross_value_currency_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-body" role="tabpanel" data-example-id="togglable-tabs">
            <ul id="myTab" class="nav nav-tabs bar_tabs" role="tablist">
                <li class="active"><a data-toggle="tab" href="#sectionA">General</a></li>
                <li><a data-toggle="tab" href="#sectionB">Line Item</a></li>
                <li><a data-toggle="tab" href="#sectionC">Vendor</a></li>
                <li><a data-toggle="tab" href="#sectionD">Accounting</a></li>
                <li><a data-toggle="tab" href="#sectionF">Status</a></li>
                <li><a data-toggle="tab" href="#sectionE">Information</a></li>

            </ul>
            <div class="tab-content">
                <div id="sectionA" class="tab-pane fade in active" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.business_unit_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("business_unit_id", (System.Web.Mvc.SelectList)ViewBag.business_list, "---Select---", new { @class = "form-control validinput", @required = true })
                                    @Html.ValidationMessageFor(model => model.business_unit_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.plant_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("plant_id", (System.Web.Mvc.SelectList)ViewBag.plant_list, "---Select---", new { @class = "form-control validinput", @required = true, @onchange = "GetStorageLocation(this.value);" })
                                    @Html.ValidationMessageFor(model => model.plant_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.freight_terms_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("freight_terms_id", (System.Web.Mvc.SelectList)ViewBag.freight_list, "---Select---", new { @class = "form-control validinput", @required = true })
                                    @Html.ValidationMessageFor(model => model.freight_terms_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.delivery_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.delivery_date, new { htmlAttributes = new { @class = "form-control validinput", @required = true } })
                                    @Html.ValidationMessageFor(model => model.delivery_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.vendor_quotation_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.vendor_quotation_no, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.vendor_quotation_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.vendor_quotation_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.vendor_quotation_date, new { htmlAttributes = new { @class = "form-control validinput", @required = true } })
                                    @Html.ValidationMessageFor(model => model.vendor_quotation_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.valid_until, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.valid_until, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.valid_until, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.form_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("form_id", (System.Web.Mvc.SelectList)ViewBag.form_list, "---Select---", new { @class = "form-control " })
                                    @Html.ValidationMessageFor(model => model.form_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sectionB" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">

                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    <button type="button" class="btn btn-primary" style="float:right" data-toggle="modal" data-target="#myModal"><span class="glyphicon glyphicon-plus"></span>Add Item</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="table-responsive">
                            <table class="table table-responsive table-bordered table-striped" id="ContactGrid">
                                <thead>
                                    <tr>
                                        <th hidden><label>ID</label></th>
                                        <th><label>Sr. No.</label></th>
                                        <th hidden><label>Item ID</label></th>
                                        <th><label>Item</label></th>
                                        <th><label>User Description</label></th>
                                        <th hidden><label>SLoc ID</label></th>
                                        <th hidden><label>SLoc</label></th>
                                        <th class="dt_col_hide"><label>Delivery Date</label></th>
                                        <th class="dt_col_hide"><label>Quantity</label></th>
                                        <th hidden><label>UOM ID</label></th>
                                        <th class="dt_col_hide"><label>UoM</label></th>
                                        <th><label id="unitpricetext"></label></th>
                                        <th><label>Discount</label></th>
                                        <th><label>Eff. Price</label></th>
                                        <th><label>Pur Value</label></th>
                                        <th hidden><label>Assessable Rate</label></th>
                                        <th hidden><label>Assessable Value</label></th>
                                        <th hidden><label>Tax</label></th>
                                        <th hidden><label>Tax ID</label></th>
                                        <th><label>Requisition Detail ID</label></th>
                                        <th><label>Action</label></th>
                                    </tr>
                                </thead>

                            </table>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">

                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="table-responsive">
                                <table class="table table-responsive table-bordered table-striped" id="TaxGrid"></table>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sectionC" class="tab-pane fade" style="margin-top:10px;">

                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.country_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("country_id", (System.Web.Mvc.SelectList)ViewBag.country_list, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true })
                                    @Html.ValidationMessageFor(model => model.country_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_state_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("billing_state_id", (System.Web.Mvc.SelectList)ViewBag.state_list, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true })
                                    @Html.ValidationMessageFor(model => model.billing_state_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_address, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.billing_address, new { htmlAttributes = new { @class = "form-control ddlform validinput removedisabled", @disabled = "disabled", @required = true } })
                                    @Html.ValidationMessageFor(model => model.billing_address, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_city, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.billing_city, new { htmlAttributes = new { @class = "form-control ddlform validinput removedisabled", @disabled = "disabled", @required = true } })
                                    @Html.ValidationMessageFor(model => model.billing_city, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_pin_code, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.billing_pin_code, new { htmlAttributes = new { @class = "form-control ddlform validinput pincode removedisabled", @disabled = "disabled", @required = true } })
                                    @Html.ValidationMessageFor(model => model.billing_pin_code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.email_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.email_id, new { htmlAttributes = new { @class = "form-control ddlform email removedisabled", @disabled = "disabled", @type = "email" } })
                                    @Html.ValidationMessageFor(model => model.email_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sectionD" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.payment_cycle_type_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("payment_cycle_type_id", (System.Web.Mvc.SelectList)ViewBag.payment_cycle_type_list, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true, @onchange = "FillPaymentCycle()" })
                                    @Html.ValidationMessageFor(model => model.payment_cycle_type_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.payment_cycle_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("payment_cycle_id", (System.Web.Mvc.SelectList)ViewBag.payment_cycle_list, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true })
                                    @Html.ValidationMessageFor(model => model.payment_cycle_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.payment_terms_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("payment_terms_id", (System.Web.Mvc.SelectList)ViewBag.payment_terms_list, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true })
                                    @Html.ValidationMessageFor(model => model.payment_terms_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.gst_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.gst_no, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.gst_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.pan_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.pan_no, new { htmlAttributes = new { @class = "form-control pan validinput", @required = true } })
                                    @Html.ValidationMessageFor(model => model.pan_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ecc_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.ecc_no, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ecc_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.vat_tin_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.vat_tin_no, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.vat_tin_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.cst_tin_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.cst_tin_no, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.cst_tin_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.service_tax_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.service_tax_no, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.service_tax_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

                <div id="sectionE" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.internal_remarks, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.internal_remarks, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.internal_remarks, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.remarks_on_document, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.remarks_on_document, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.remarks_on_document, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <input type="hidden" id="productdetail" name="productdetail" />
                        <input type="hidden" id="formdetail" name="formdetail" />
                        <input type="hidden" id="deleteids" name="deleteids" />
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.attachement, "Attachment", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.HiddenFor(a => a.attachement)
                                    <input type="file" class="form-control" id="FileUpload" name="FileUpload" accept="application/pdf, image/*" />
                                    @Html.ValidationMessageFor(model => model.attachement, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sectionF" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.status_id, "Status", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("status_id", (System.Web.Mvc.SelectList)ViewBag.status_list, new { @class = "form-control validinput", @required = true })
                                    @Html.ValidationMessageFor(model => model.status_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg12 col-sm-12">
            <div class="form-group">
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <input type="submit" value="Update" id="create" data-controller="PurchaseOrder" data-id="@Model.po_id" class="btn btn-success" onclick="TabletoJeson();" style="float:right" />
                </div>
            </div>
        </div>
    </div>
        <!-- Modal -->
    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">

                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" onclick="clearmodel();">&times;</button>
                    <h4 class="modal-title">Item Details</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3">
                                Item <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                @Html.DropDownList("item_id", (System.Web.Mvc.SelectList)ViewBag.item_list, "---Select---", new { @class = "form-control col-md-7 col-xs-12", @onchange = "GetUnit(this.value)", @style = "width: 100%;" })
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                User Description
                            </label>
                            <div class="col-md-7">
                                <input type="text" class="form-control col-md-7 col-xs-12" id="udescription">
                            </div>
                        </div>
                    </div>
                    <br class="dt_col_hide" />
                    <div class="row dt_col_hide" id="divsloc">
                        <div class="form-group">
                            <label class="control-label col-md-3">
                                SLoc <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                @Html.DropDownList("sloc_id", Enumerable.Empty<SelectListItem>(), "", new { @class = "form-control col-md-7 col-xs-12", @style = "width: 100%;" })
                            </div>
                        </div>
                    </div>
                    <br class="dt_col_hide" />
                    <div class="row dt_col_hide" id="divdelivery">
                        <div class="form-group">
                            <label class="control-label col-md-3">
                                Delivery Date <span class="required">*</span>
                            </label>
                            <div class="col-md-7">

                                <input type="date" class="form-control col-md-7 col-xs-12" id="dte">
                            </div>
                        </div>
                    </div>
                    <br class="dt_col_hide" />
                    <div class="row dt_col_hide" id="qtext">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Quantity <span class="required">*</span>
                            </label>
                            <div class="col-md-4">
                                <input type="number" class="form-control col-md-7 col-xs-12" id="quantity" onchange="calculation()">
                            </div>
                            <div class="col-md-3">
                                @Html.DropDownList("uom_id", (System.Web.Mvc.SelectList)ViewBag.uom_list, "---Select---", new { @class = "form-control col-md-7 col-xs-12" })
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name" id="uprice"></label>
                            <div class="col-md-7">
                                <input type="number" class="form-control col-md-7 col-xs-12" id="unitprice" onchange="calculation()">
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Discount (%) <span class="required"></span>
                            </label>
                            <div class="col-md-7">
                                <input type="number" min="0" max="3" class="form-control col-md-7 col-xs-12" id="discount" onchange="calculation()">
                            </div>
                        </div>
                    </div>
                    <br class="dt_col_hide" />
                    <div class="row dt_col_hide">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Effective Unit Price <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <input type="number" class="form-control col-md-7 col-xs-12" id="effectiveprice" readonly="readonly">
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Purchase Value <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <input type="number" class="form-control col-md-7 col-xs-12" id="salesvalue" readonly="readonly">
                            </div>
                        </div>
                    </div>
                    <br class="dt_col_hide" />
                    <div class="row dt_col_hide">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Assessable Rate <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <input type="number" class="form-control col-md-7 col-xs-12" id="assessablerate" onchange="asscalculation()">
                            </div>
                        </div>
                    </div>
                    <br class="dt_col_hide" />
                    <div class="row dt_col_hide">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Assessable Value <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <input type="number" class="form-control col-md-7 col-xs-12" id="assessablevalue" readonly="readonly">
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Tax Code <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                @Html.DropDownList("tax_id", (System.Web.Mvc.SelectList)ViewBag.tax_list, "---Select---", new { @class = "form-control col-md-7 col-xs-12" })
                            </div>
                        </div>
                    </div>

                </div>
                <br />
                <div class="modal-footer">
                    <input type="hidden" id="srno" />
                    <input type="hidden" id="detailid" />
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="clearmodel();">Close</button>
                    <button type="button" class="add btn btn-primary">Add Item</button>
                    <input type="hidden" id="requisition_detail_id" />
                </div>
            </div>

        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/RemoveUnexpectedFile.js"></script>
    <script src="~/Scripts/requirevalidation.js"></script>

    <script type="text/javascript">
        $(document).ready(function(){
            $("#vendor_id").select2({
                placeholder: "Select Vendor",
                allowClear: true
            });
            $("#plant_id").select2({
                placeholder: "Select Plant",
                allowClear: true
            });
            $("#business_unit_id").select2({
                placeholder: "Select Business Unit",
                allowClear: true
            });
            $("#item_id").select2({
                placeholder: "Select Item",
                allowClear: true
            });
            $("#tax_id").select2({
                placeholder: "Select Tax",
                allowClear: true
            });
            $("#sloc_id").select2({
                placeholder: "Select SLoc",
                allowClear: true
            });
            var t = $('#ContactGrid').DataTable();
            var pl_detail = @Html.Raw(JsonConvert.SerializeObject(this.Model));
            var i=1;
            var str="";
            var str1="";
            var tot = 0;
            $.each(pl_detail.pur_po_detail_vm, function(key, value) {
                //console.log(value);
                var input = value.delivery_date;
                var result = input.substring(0, 10);
                t.fnAddData([value.po_detail_id,i,value.item_id,value.item_name,value.user_description,value.sloc_id,value.sloc_name,result, value.quantity,
                    value.uom_id, value.uom_name, value.unit_price, value.discount, value.eff_unit_price, value.purchase_value, value.assesable_rate,
                    value.assesable_value,value.tax_code_id,value.tax_name,value.pur_requisition_detail_id,''
                ]);
                i=i+1;
                str1 = value.tax_code_id + "~";
                str1 = str1 + value.assesable_value + "~";
                str1 = str1 + value.purchase_value;
                if (i == 0) {
                    str = str1 + ","
                }
                else {
                    str = str + str1 + ",";
                }
                tot = tot + parseFloat(value.purchase_value);
            });
            GetTaxDetail(str.slice(0, -1), tot, pl_detail.po_date);
            if(pl_detail.item_service_id==1)
            {
                $('#uprice').text("Unit Price *");
                $("#unitpricetext").text("Unit Price");
                $('.dt_col_hide').show();
            }
            else
            {
                $('#uprice').text("Price *");
                $("#unitpricetext").text("Price");
                $('.dt_col_hide').hide();
            }
            FillItem(pl_detail.item_service_id);
            GetStorageLocation(pl_detail.plant_id);
            var data="";
            $.each(pl_detail.pur_po_form, function(key, value) {
                $("#form_id").val(value.form_id);
            });
        });

        $(".add").on("click", function (event) {
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            var item_id = $("#item_id").val();
            var item_name = $("#item_id").find("option:selected").text();
            var slocid = $("#sloc_id").val();
            if (slocid == "") {
                slocid = 0;
            }
            var slocname = $("#sloc_id").find("option:selected").text();
            var userdescription = $("#udescription").val();
            var delevery_date = $("#dte").val();
            var qty = $("#quantity").val();
            var unit_id = $("#uom_id").val();
            if (unit_id == "") {
                unit_id = 0;
            }
            var unit_name = $("#uom_id").find("option:selected").text();
            var unit_price = $("#unitprice").val();
            var discount = $("#discount").val();
            var effectiveprice = $("#effectiveprice").val();
            var salesvalue = $("#salesvalue").val();
            var assessablerate = $("#assessablerate").val();
            var assessablevalue = $("#assessablevalue").val();
            var taxcode = $("#tax_id").find("option:selected").text();
            var taxid = $("#tax_id").val();
            var requisition_detail_id = $("#requisition_detail_id").val();
            if (requisition_detail_id == "") {
                requisition_detail_id = 0;
            }
            console.log(requisition_detail_id, slocid, unit_id);

            if (item_id == '') {
                swal("", "Please Select Item!", "error");
                return false;
            }
            if ((slocid == '') && ($('#divsloc').css('display') != 'none')) {
                swal("", "Please select SLoc.", "error");
                return false;
            }
            if ((delevery_date == '') && ($('#divdelivery').css('display') != 'none')) {
                swal("", "Please Select Delivery Date.", "error");
                return false;
            }
            if (qty == '') {
                swal("", "Please Enter Quantity.", "error");
                return false;
            }
            if (qty == 0) {
                swal("", "Quantity should be greater than zero.", "error");
                return false;
            }
            if ((unit_id == '') && ($("#qtext").css('display') != 'none')) {
                swal("", "Please select Unit.", "error");
                return false;
            }
            if (unit_price == '') {
                swal("", "Please enter unit price.", "error");
                return false;
            }
            if (taxcode == '') {
                swal("", "Please select tax code.", "error");
                return false;
            }
            if (discount == '') {
                discount = 0;
            }
            if ($("#srno").val() == "") {
                t.fnAddData(["0", rowCount + 1, item_id, item_name, userdescription, slocid, slocname, delevery_date, qty, unit_id, unit_name, unit_price, discount,
                    effectiveprice, salesvalue, assessablerate, assessablevalue, taxid, taxcode, requisition_detail_id, ''
                ]);
            }
            else {
                var cc = $("#srno").val();
                cc = parseInt(cc) - 1;
                t.fnUpdate(["0", cc + 1, item_id, item_name, userdescription, slocid, slocname, delevery_date, qty, unit_id, unit_name, unit_price, discount,
                    effectiveprice, salesvalue, assessablerate, assessablevalue, taxid, taxcode, requisition_detail_id, ''], cc)
            }
            if ($('#item_service_id').val() == 2) {
                $('.dt_col_hide').hide();
            }
            else {
                $('.dt_col_hide').show();
            }
            clearmodel();
            getnetTotal();
            var rowCount1 = t.fnGetData().length;
            var str;
            var str1;
            var tot = 0;
            for (i = 0; i < rowCount1; i++) {
                str1 = t.fnGetData(i)[17] + "~";
                str1 = str1 + t.fnGetData(i)[16] + "~";
                str1 = str1 + t.fnGetData(i)[14];
                if (i == 0) {
                    str = str1 + ","
                }
                else {
                    str = str + str1 + ",";
                }
                tot = tot + parseFloat(t.fnGetData(i)[14]);
            }
            GetTaxDetail(str.slice(0, -1), tot, $("#po_date").val());
            return true;
        });
    function clearmodel()
    {
        $("#item_id").val('').trigger("change");

        $("#quantity").val('');
        $("#uom_id").val('');
        $("#unitprice").val('');
        $("#dte").val('');
        $("#discount").val('');
        $("#effectiveprice").val('');
        $("#salesvalue").val('');
        $("#assessablerate").val('');
        $("#assessablevalue").val('');
        $("#udescription").val('');
        $("#tax_id").val('').trigger("change");
        $("#sloc_id").val("").trigger("change");
        $("#srno").val('');
        $("#detailid").val('');
        $('#requisition_detail_id').val('');
    }
    function calculation() {
        var quantity = $("#quantity").val();
        var unitprice = $("#unitprice").val();
        var discount = $("#discount").val();
        var assessable = $("#assessablerate").val();
        var effectiveprice = 0;
        if (quantity=="")
        {
            quantity = 0;
        }
        if (unitprice=="")
        {
            unitprice = 0;
        }
        if (discount=="")
        {
            effectiveprice = unitprice;
        }
        else
        {
            effectiveprice = unitprice - (unitprice * discount / 100);
        }
        $("#effectiveprice").val(effectiveprice);
        $("#assessablerate").val(effectiveprice);
        $("#salesvalue").val(effectiveprice * quantity);

        var assessable1=$("#assessablerate").val();
        $("#assessablevalue").val(assessable1 * quantity);
    }
    function asscalculation()
    {
        var quantity = $("#quantity").val();
        var assessable1 = $("#assessablerate").val();
        $("#assessablevalue").val(assessable1 * quantity);
    }
    $('#ContactGrid').DataTable({
        "bPaginate": false,
        "ordering": false,
        "bfooter": false,
        "info": false,
        "bLengthChange": false,
        "bAutoWidth": false,
        "bFilter": false,
        "bSort": false,
        aoColumns: [
                { sname: "a", bVisible: false },
                 { sname: "b", sWidth: "5%" },
                 { sname: "c", bVisible: false },
                 { sname: "d" },
                 { sname: "e", sWidth: "12%" },
                 { sname: "f", bVisible: false },
                 { sname: "g", bVisible: false },
                 { sname: "h", sClass: "dt_col_hide", sWidth: "10%" },
                 { sname: "i", sWidth: "8%", sClass: "dt_col_hide" },
                 { sname: "j", bVisible: false },
                 { sname: "k", sWidth: "8%", sClass: "dt_col_hide" },
                 { sname: "l", sWidth: "8%" },
                 { sname: "m", sWidth: "8%" },
                 { sname: "n", sWidth: "8%" },
                 { sname: "o", sWidth: "8%" },
                 { sname: "P", bVisible: false },
                 { sname: "q", bVisible: false },
                  { sname: "r", bVisible: false },
                 { sname: "s", bVisible: false },
                 { sname: "r", bVisible: true },
                 {
                     sname: "t", sWidth: "8%",
                     bSortable: false,
                     mRender: function (data, type, full) {
                         return '<img class="edit" src="../images/writing_file.png" height="20px" width="25px" alt="Edit"  /><img class="delete" src="../images/remove.png" height="20px" width="25px" alt="Delete" />';
                     }
                 }]

    });

    $('#ContactGrid').on('click', '.edit', function () {
        var t = $('#ContactGrid').DataTable();
        var id = $(this).parent('td').parent('tr').index();
        $('#myModal').modal('show');
        $("#detailid").val(t.fnGetData(id)[0]);
        $("#srno").val(t.fnGetData(id)[1]);
        $("#item_id").val(t.fnGetData(id)[2]).trigger('change');
        $('#dte').val(t.fnGetData(id)[7]);
        $('#udescription').val(t.fnGetData(id)[4]);
        $('#quantity').val(t.fnGetData(id)[8]);
        if(t.fnGetData(id)[9]==0)
        {
            $('#uom_id').val('');
        }
        else
        {
            $('#uom_id').val(t.fnGetData(id)[9]);
        }
        $('#unitprice').val(t.fnGetData(id)[11]);
        $('#discount').val(t.fnGetData(id)[12]);
        $('#effectiveprice').val(t.fnGetData(id)[13]);
        $('#salesvalue').val(t.fnGetData(id)[14]);
        $('#assessablerate').val(t.fnGetData(id)[15]);
        $('#assessablevalue').val(t.fnGetData(id)[16]);
        if(t.fnGetData(id)[18]==0)
        {
            $('#tax_id').val("").trigger('change');
        }
        else
        {
            $('#tax_id').val(t.fnGetData(id)[17]).trigger('change');
        }
        if(t.fnGetData(id)[5]==0)
        {
            $('#sloc_id').val('').trigger('change');
        }
        else
        {
            $('#sloc_id').val(t.fnGetData(id)[5]).trigger('change');
        }
        $("#requisition_detail_id").val(t.fnGetData(id)[19]);
    });

    $('#ContactGrid').on('click', '.delete', function () {
        var t = $('#ContactGrid').DataTable();
        var id = $(this).parent('td').parent('tr').index();
        var deleteids = t.fnGetData(id)[0];
        var del = $("#deleteids").val();
        swal({
            title: "Are you sure?",

            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Yes, delete it!",
            closeOnConfirm: true
        },
 function (isConfirm) {
     if (isConfirm) {

         if (del != '') {
             $("#deleteids").val(del + "" + deleteids + "~");
         }
         else {
             $("#deleteids").val(deleteids + "~");
         }
         t.fnDeleteRow(id);
         getnetTotal();
         var rowCount = t.fnGetData().length;
         var str="";
         var str1="";
         var tot = 0;
         for (i = 0; i < rowCount; i++) {
             str1 = t.fnGetData(i)[18] + "~";
             str1 = str1 + t.fnGetData(i)[16] + "~";
             str1 = str1 + t.fnGetData(i)[14];
             if (i == 0) {
                 str = str1 + ","
             }
             else {
                 str = str + str1 + ",";
             }
             tot = tot + parseFloat(t.fnGetData(i)[14]);
         }
         GetTaxDetail(str.slice(0, -1), tot, $("#po_date").val());
         var len = t.fnGetData().length;
         var i = 1;
         var row = 0;
         if (len > 0) {
             $('#ContactGrid tbody tr').each(function () {
                 t.fnUpdate(i, row, 1);
                 i++;
                 row++;
             });
         }
     }
 });
 });
    function GetUnit(id)
    {
        if (id != '' && $('#item_service_id').val() == 1)
        {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetUnitofItem", "Generic")',
                data: { id: id },
                success: function (ITEM) {
                    console.log();
                    $('#uom_id').val(ITEM.item);
                },
                error: function (emp) {
                    $('#uom_id').val('');
                }
            });
        }
        else
        {
            $('#uom_id').val('');
        }

    }
    function getnetTotal()
    {
        var t = $('#ContactGrid').DataTable();
        var rowCount = t.fnGetData().length;
        var total = 0;
        for (var i = 0; i < rowCount; i++) {
            total = total + parseFloat(t.fnGetData(i)[14]);
        }
        $("#net_value").val(total);
        $("#gross_value").val(total);
    }

    function TabletoJeson() {
        var t = $('#ContactGrid').DataTable()
        var rowCount = t.fnGetData().length;
        var str;
        var str1;
        var str2;
        var str3;
        for (i = 0; i < rowCount; i++) {
            $("#PoHidden").append('<input type="hidden" id="item_id' + i + '" name="item_id">');
            $("#PoHidden").append('<input type="hidden" id="user_description' + i + '" name="user_description">');
            $("#PoHidden").append('<input type="hidden" id="sloc_id' + i + '" name="sloc_id">');
            $("#PoHidden").append('<input type="hidden" id="Linedelivery_date' + i + '" name="Linedelivery_date">');
            $("#PoHidden").append('<input type="hidden" id="quantity' + i + '" name="quantity">');
            $("#PoHidden").append('<input type="hidden" id="uom_id' + i + '" name="uom_id">');
            $("#PoHidden").append('<input type="hidden" id="unit_price' + i + '" name="unit_price">');
            $("#PoHidden").append('<input type="hidden" id="discount' + i + '" name="discount">');
            $("#PoHidden").append('<input type="hidden" id="eff_price' + i + '" name="eff_price">');
            $("#PoHidden").append('<input type="hidden" id="pur_value' + i + '" name="pur_value">');
            $("#PoHidden").append('<input type="hidden" id="ass_rate' + i + '" name="ass_rate">');
            $("#PoHidden").append('<input type="hidden" id="ass_value' + i + '" name="ass_value">');
            $("#PoHidden").append('<input type="hidden" id="tax_id' + i + '" name="tax_id">');
            $("#PoHidden").append('<input type="hidden" id="pur_requisition_detail_id' + i + '" name="pur_requisition_detail_id">');
            $("#PoHidden").append('<input type="hidden" id="po_detail_id' + i + '" name="po_detail_id">');

            $("#item_id" + i).val(t.fnGetData(i)[2]);
            $("#use_description" + i).val(t.fnGetData(i)[4]);
            $("#sloc_id" + i).val(t.fnGetData(i)[5]);
            $("#Linedelivery_date" + i).val(t.fnGetData(i)[7]);
            $("#quantity" + i).val(t.fnGetData(i)[8]);
            $("#uom_id" + i).val(t.fnGetData(i)[9]);
            $("#unit_price" + i).val(t.fnGetData(i)[11]);
            $("#discount" + i).val(t.fnGetData(i)[12]);
            $("#eff_price" + i).val(t.fnGetData(i)[13]);
            $("#pur_value" + i).val(t.fnGetData(i)[14]);
            $("#ass_rate" + i).val(t.fnGetData(i)[15]);
            $("#ass_value" + i).val(t.fnGetData(i)[16]);
            $("#tax_id" + i).val(t.fnGetData(i)[17]);
            $("#pur_requisition_detail_id" + i).val(t.fnGetData(i)[19]);
            $("#po_detail_id").val(t.fnGetData(i)[0]);
        }
    }
    function FillItem(id) {
        if (id == "") {
            id = 0;
        }
        else {
            id = id;
        }
        $.ajax({
            url: '@Url.Action("GetItemOrGL", "Generic")'
            type: "GET",
            dataType: "JSON",
            async: false,
            data: { id: id },
            success: function (item) {
                $("#item_id").html("");
                $("#item_id").append($('<option></option>').val("").html("---Select---"));
                if (id == 1) {
                    $.each(item, function (i, cycle) {
                        $("#item_id").append(
                            $('<option></option>').val(cycle.ITEM_ID).html(cycle.ITEM_NAME));
                    });
                }
                else {
                    $.each(item, function (i, cycle) {
                        $("#item_id").append(
                            $('<option></option>').val(cycle.gl_ledger_id).html(cycle.gl_ledger_name));
                    });
                }

            }
        });
    }
    function GetStorageLocation(id) {
        if (id == "") {
            id = 0;
        }
        $.ajax({
            url: '@Url.Action("GetStorageLocation", "Generic")',
            type: "GET",
            dataType: "JSON",
            data: { id: id },
            success: function (id) {
                $("#sloc_id").html(""); // clear before appending new list
                $("#sloc_id").append($('<option></option>').val("").html("---Select---"));
                $.each(id, function (i, cycle) {
                    $("#sloc_id").append(
                        $('<option></option>').val(cycle.storage_location_id).html(cycle.storage_location_name));
                });
            }
        });
    }
    $('#net_value_currency_id').change(function () {
        var v = parseInt($(this).val())-1;
        $('#gross_value_currency_id option:eq(' + v + ')').prop('selected', true)
    });
    function GetTaxDetail(taxdetail, amount, dt) {
        $.ajax({
            url: '@Url.Action("GetTaxCalculation", "Generic")',
            type: "GET",
            dataType: "JSON",
            data: { st: taxdetail, amt: amount, dt: dt, tds_code_id: 0 },
            success: function (Payment_Cycle) {
                $('#TaxGrid tbody').html('');
                $.each(Payment_Cycle, function (i, cycle) {
                    $('#TaxGrid').append('<tbody>');
                    $('#TaxGrid').append('<tr><td>' + cycle.tax_name + '</td><td align="right">' + cycle.tax_value + '</td></tr>')
                    $('#TaxGrid').append('</tbody>');
                    $("#gross_value").val(cycle.tax_value);
                });
            }
        });
    }
    $("#form0 :input").prop("disabled", true);
    </script>
}

