@using Sciffer.Erp.Domain.ViewModel
@using Syncfusion.JavaScript.Models




@{(Html.EJ().Grid<Report_WithinPlanTrasfer_vm>("Editing")
                                                                        .Datasource((IEnumerable<object>)ViewBag.datasource)
                                                                          .AllowPaging().PageSettings(a=>a.PageSize(20))
                                                                          .AllowFiltering()
                                                                              .FilterSettings(X => X.FilterType(FilterType.Excel))
                                                                          .ShowColumnChooser()
                                                                          .AllowSorting()
                                                                          .AllowScrolling()
                                                                          .Mappers(map => map.ExportToExcelAction(Url.Action("ExportToExcelForReport", "Generic", new { ctrlname = "SalesSummaryReport" }))
                                                                          .ExportToPdfAction(Url.Action("ExportToPdfForReport", "Generic", new { ctrlname = "SalesSummaryReport" })))
                                                                          .ScrollSettings(scroll => { scroll.Width("100%"); })

                                                                      .ToolbarSettings(toolbar =>
                                                                      {
                                                                          toolbar.ShowToolbar().ToolbarItems(items =>
                                                                          {
                                                                              items.AddTool(ToolBarItems.Search);
                                                                              items.AddTool(ToolBarItems.ExcelExport);
                                                                              items.AddTool(ToolBarItems.PrintGrid);
                                                                          });
                                                                      })
                                                              .Columns(col =>
                                                              {
                                                                  col.Field("Doc_Number").Width("10%").HeaderText("Doc Number").Add();
                                                                  col.Field("Doc_Date").Width("10%").HeaderText("Doc Date").Add();
                                                                  col.Field("header_Remarks").Width("10%").HeaderText("Header Remarks").Visible(false).Add();
                                                                  col.Field("Sending_SLOC").Width("10%").HeaderText("Sending Sloc").Visible(false).Add();
                                                                  col.Field("Receiving_SLOC").Width("10%").HeaderText("Receiving Sloc").Visible(false).Add();
                                                                  col.Field("Sending_Bucket").Width("10%").HeaderText("Sending Bucket").Visible(false).Add();
                                                                  col.Field("Receiving_Bucket").Width("10%").HeaderText("Receiving Bucket").Visible(false).Add();
                                                                  col.Field("Item_Code").Width("10%").HeaderText("Item Code").Visible(false).Add();
                                                                  col.Field("Item_Description").Width("10%").HeaderText("Item Description").Visible(false).Add();
                                                                  col.Field("batch").Width("10%").HeaderText("Batch").Visible(false).Add();
                                                                  col.Field("Qty").Width("10%").HeaderText("Qty").Visible(false).Add();
                                                                  col.Field("uoM").Width("10%").HeaderText("Uom").Visible(false).Add();

                                                              })
                                                              .ClientSideEvents(eve => { eve.ActionComplete("complete").EndAdd("EndProcess").EndDelete("EndProcess").EndEdit("EndProcess"); })
                                                              ).Render();}
@Html.EJ().ScriptManager()
<br />

<script type="text/javascript">

    @*$(function () {
        var obj = @Html.Raw(Json.Encode(ViewBag.datasource));
        console.log(obj);
        $("#Editing").ejGrid({
            dataSource: obj,
            allowPaging: true,
            //columns: [

            //],
            //dataBound : function(args){
            //	for (var fld =0; fld < list.length; fld++ ) {
            //	var column = { field: list[fld].value, headerText: list[fld].header, column: "", textAlign: "left", type: "string", visible: true, width: 75 };
            //	this.model.columns.push(column); //add dynamic columns
            //	}
            //	this.columns(this.model.columns);
            //}
        });
    });*@


</script>


