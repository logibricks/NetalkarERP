@using Sciffer.Erp.Domain.ViewModel
@using Syncfusion.JavaScript.Models




@{(Html.EJ().Grid<Report_BudgetActual_vm>("Editing")
                                        .Datasource((IEnumerable<object>)ViewBag.datasource)
                                            .AllowPaging().PageSettings(a=>a.PageSize(20))
                                            .AllowFiltering()
                                                .FilterSettings(X => X.FilterType(FilterType.Excel))
                                            .ShowColumnChooser()
                                            .AllowSorting()
                                            .AllowScrolling()
                                            .Mappers(map => map.ExportToExcelAction(Url.Action("ExportToExcelForReport", "Generic", new { ctrlname = "SalesSummaryReport" }))
                                            .ExportToPdfAction(Url.Action("ExportToPdfForReport", "Generic", new { ctrlname = "SalesSummaryReport" })))
                                            .ScrollSettings(scroll => { scroll.Width("100%"); })

                                        .ToolbarSettings(toolbar =>
                                        {
                                            toolbar.ShowToolbar().ToolbarItems(items =>
                                            {
                                                items.AddTool(ToolBarItems.Search);
                                                items.AddTool(ToolBarItems.ExcelExport);
                                                items.AddTool(ToolBarItems.PrintGrid);
                                            });
                                        })

                                .ShowSummary()

                            .SummaryRow(row =>
                            {
                                row.Title("Total").SummaryColumns(col =>
                                {
                                    col.SummaryType(SummaryType.Sum).DisplayColumn("Budget").DataMember("Budget").Format("{0:n2}").Add();
                                    col.SummaryType(SummaryType.Sum).DisplayColumn("Actuals").DataMember("Actuals").Format("{0:n2}").Add();
                                    col.SummaryType(SummaryType.Sum).DisplayColumn("Difference").DataMember("Difference").Format("{0:n2}").Add();
                                    col.SummaryType(SummaryType.Sum).DisplayColumn("Diff").DataMember("Diff_%").Format("{0:n2}").Add();

                                }).Add();
                            })
                                .Columns(col =>
                                {
                                    col.Field("Gl_Description").Width("10%").HeaderText("Gl Description").Add();
                                    col.Field("Budget").Width("10%").HeaderText("Budget").Add();
                                    col.Field("Actuals").Width("10%").HeaderText("Actuals").Visible(false).Add();
                                    col.Field("Difference").Width("10%").HeaderText("Difference").Visible(false).Add();
                                    col.Field("Diff").Width("10%").HeaderText("Diff %").Visible(false).Add();

                                })
                                    .ClientSideEvents(eve => { eve.ActionComplete("complete").EndAdd("EndProcess").EndDelete("EndProcess").EndEdit("EndProcess"); })
                                    ).Render();}
@Html.EJ().ScriptManager()
<br />

<script type="text/javascript">

    @*$(function () {
        var obj = @Html.Raw(Json.Encode(ViewBag.datasource));
        console.log(obj);
        $("#Editing").ejGrid({
            dataSource: obj,
            allowPaging: true,
            //columns: [

            //],
            //dataBound : function(args){
            //	for (var fld =0; fld < list.length; fld++ ) {
            //	var column = { field: list[fld].value, headerText: list[fld].header, column: "", textAlign: "left", type: "string", visible: true, width: 75 };
            //	this.model.columns.push(column); //add dynamic columns
            //	}
            //	this.columns(this.model.columns);
            //}
        });
    });*@


</script>









