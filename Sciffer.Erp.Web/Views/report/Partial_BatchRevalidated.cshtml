@using Sciffer.Erp.Domain.ViewModel
@using Syncfusion.JavaScript.Models




@{(Html.EJ().Grid<Report_BatchRevalidated_vm>("Editing")
                                                                      .Datasource((IEnumerable<object>)ViewBag.datasource)
                                                                        .AllowPaging().PageSettings(a=>a.PageSize(20))
                                                                        .AllowFiltering()
                                                                            .FilterSettings(X => X.FilterType(FilterType.Excel))
                                                                        .ShowColumnChooser()
                                                                        .AllowSorting()
                                                                        .AllowScrolling()
                                                                        .Mappers(map => map.ExportToExcelAction(Url.Action("ExportToExcelForReport", "Generic", new { ctrlname = "SalesSummaryReport" }))
                                                                        .ExportToPdfAction(Url.Action("ExportToPdfForReport", "Generic", new { ctrlname = "SalesSummaryReport" })))
                                                                        .ScrollSettings(scroll => { scroll.Width("100%"); })

                                                                    .ToolbarSettings(toolbar =>
                                                                    {
                                                                        toolbar.ShowToolbar().ToolbarItems(items =>
                                                                        {
                                                                            items.AddTool(ToolBarItems.Search);
                                                                            items.AddTool(ToolBarItems.ExcelExport);
                                                                            items.AddTool(ToolBarItems.PrintGrid);
                                                                        });
                                                                    })
                                                            .Columns(col =>
                                                            {
                                                                col.Field("Doc_Date").Width("10%").Width("10%").HeaderText("Doc Date").Add();
                                                                col.Field("Item_Code").Width("10%").HeaderText("Item Code").Add();
                                                                col.Field("Item_Description").Width("10%").HeaderText("Item Description").Visible(false).Add();
                                                                col.Field("PLANT").Width("10%").HeaderText("PLANT").Visible(false).Add();
                                                                col.Field("BATCH").Width("10%").HeaderText("BATCH").Visible(false).Add();
                                                                col.Field("sLOC").Width("10%").HeaderText("SLOC").Visible(false).Add();
                                                                col.Field("Bucket").Width("10%").HeaderText("Bucket").Visible(false).Add();
                                                                col.Field("Qty_in_STock").Width("10%").HeaderText("Qty in STock").Visible(false).Add();
                                                                col.Field("Accepted_Qty").Width("10%").HeaderText("Accepted Qty").Visible(false).Add();
                                                                col.Field("Rejected_Qty").Width("10%").HeaderText("Rejected Qty").Visible(false).Add();
                                                                col.Field("oRIGINAL_sled").Width("10%").HeaderText("ORIGINAL sled").Visible(false).Add();
                                                                col.Field("New_Expiry_Date").Width("10%").HeaderText("New Expiry Date").Visible(false).Add();

                                                            })
                                                            .ClientSideEvents(eve => { eve.ActionComplete("complete").EndAdd("EndProcess").EndDelete("EndProcess").EndEdit("EndProcess"); })
                                                            ).Render();}
@Html.EJ().ScriptManager()
<br />

<script type="text/javascript">

    @*$(function () {
        var obj = @Html.Raw(Json.Encode(ViewBag.datasource));
        console.log(obj);
        $("#Editing").ejGrid({
            dataSource: obj,
            allowPaging: true,
            //columns: [

            //],
            //dataBound : function(args){
            //	for (var fld =0; fld < list.length; fld++ ) {
            //	var column = { field: list[fld].value, headerText: list[fld].header, column: "", textAlign: "left", type: "string", visible: true, width: 75 };
            //	this.model.columns.push(column); //add dynamic columns
            //	}
            //	this.columns(this.model.columns);
            //}
        });
    });*@


</script>



