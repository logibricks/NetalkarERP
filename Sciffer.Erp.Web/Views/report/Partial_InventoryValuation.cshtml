@using Sciffer.Erp.Domain.ViewModel
@using Syncfusion.JavaScript.Models




@{(Html.EJ().Grid<Report_InventoryValuationReport_vm>("Editing")
                                        .Datasource((IEnumerable<object>)ViewBag.datasource)
                                        .AllowFiltering()
                                            .FilterSettings(X => X.FilterType(FilterType.Excel))
                                        .ShowColumnChooser()
                                        .AllowSorting()
                                        .AllowScrolling()
                                        .Mappers(map => map.ExportToExcelAction(Url.Action("ExportToExcelForReport", "Generic", new { ctrlname = "InventoryValuationReport" }))
                                        .ExportToPdfAction(Url.Action("ExportToPdfForReport", "Generic", new { ctrlname = "InventoryValuationReport" })))
                                       .ScrollSettings(scroll => { scroll.Width("100%").Height("50%"); })

                                    .ToolbarSettings(toolbar =>
                                    {
                                        toolbar.ShowToolbar().ToolbarItems(items =>
                                        {
                                            items.AddTool(ToolBarItems.Search); 
                                            items.AddTool(ToolBarItems.ExcelExport);
                                            items.AddTool(ToolBarItems.PrintGrid);
                                        });
                                    })
                            .Columns(col =>
                            {
                                col.Field("item_code").Width("10%").HeaderText("Item Code").Add();
                                col.Field("ITEM_NAME").Width("10%").HeaderText("Item Description").Add();
                                col.Field("PLANT_CODE").Width("10%").HeaderText("Plant Code").Add();
                                col.Field("PLANT_NAME").Width("10%").HeaderText("Plant Description").Add();
                                col.Field("UOM_NAME").Width("10%").HeaderText("UoM").Add();
                                col.Field("costing_method").Width("10%").HeaderText("Costing Method").Add();
                                col.Field("qty").Width("10%").HeaderText("Qty").Format("{0:n2}").TextAlign(TextAlign.Right).Format("{0:n2}").Add();
                                col.Field("rate").Width("10%").HeaderText("Rate").Format("{0:n2}").TextAlign(TextAlign.Right).Format("{0:n2}").Add();
                                col.Field("value").Width("10%").HeaderText("Value").Format("{0:n2}").TextAlign(TextAlign.Right).Format("{0:n2}").Add();
                                col.Field("control_account").Width("10%").HeaderText("Control Account Code").Add();
                                col.Field("control_account_name").Width("10%").HeaderText("Control Account Description").Add();
                            })
                            .ClientSideEvents(eve => { eve.ActionComplete("complete").EndAdd("EndProcess").EndDelete("EndProcess").EndEdit("EndProcess"); })
                            ).Render();}
@Html.EJ().ScriptManager()
<br />

<script type="text/javascript">
</script>



