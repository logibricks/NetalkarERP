@using Sciffer.Erp.Domain.ViewModel
@using Syncfusion.JavaScript.Models




@{(Html.EJ().Grid<Report_QCParametersReport_vm>("Editing")
                                                          .Datasource((IEnumerable<object>)ViewBag.datasource)
                                                            .AllowPaging().PageSettings(a=>a.PageSize(20))
                                                            .AllowFiltering()
                                                                .FilterSettings(X => X.FilterType(FilterType.Excel))
                                                            .ShowColumnChooser()
                                                            .AllowSorting()
                                                            .AllowScrolling()
                                                            .Mappers(map => map.ExportToExcelAction(Url.Action("ExportToExcelForReport", "Generic", new { ctrlname = "SalesSummaryReport" }))
                                                            .ExportToPdfAction(Url.Action("ExportToPdfForReport", "Generic", new { ctrlname = "SalesSummaryReport" })))
                                                            .ScrollSettings(scroll => { scroll.Width("100%"); })

                                                        .ToolbarSettings(toolbar =>
                                                        {
                                                            toolbar.ShowToolbar().ToolbarItems(items =>
                                                            {
                                                                items.AddTool(ToolBarItems.Search);
                                                                items.AddTool(ToolBarItems.ExcelExport);
                                                                items.AddTool(ToolBarItems.PrintGrid);
                                                            });
                                                        })
                                                .Columns(col =>
                                                {
                                                    col.Field("Doc_Number").Width("10%").HeaderText("Doc Number").Add();
                                                    col.Field("Posting_Date").Width("10%").HeaderText("Posting Date").Add();
                                                    col.Field("Item_Code").Width("10%").HeaderText("Item Code").Visible(false).Add();
                                                    col.Field("Item_Description").Width("10%").HeaderText("Item Description").Visible(false).Add();
                                                    col.Field("Batch").Width("10%").HeaderText("Batch").Visible(false).Add();
                                                    col.Field("Qty").Width("10%").HeaderText("Qty").Visible(false).Add();
                                                    col.Field("Plant").Width("10%").HeaderText("Plant").Visible(false).Add();
                                                    col.Field("Base_DOcument").Width("10%").HeaderText("Base DOcument").Visible(false).Add();
                                                    col.Field("Doc_Category1").Width("10%").HeaderText("Doc Category").Visible(false).Add();
                                                    col.Field("Doc_Number1").Width("10%").HeaderText("Doc Number").Visible(false).Add();
                                                    col.Field("Posting_Date1").Width("10%").HeaderText("Posting Date").Visible(false).Add();
                                                    col.Field("Paramater_Name").Width("10%").HeaderText("Paramater Name").Visible(false).Add();
                                                    col.Field("Parameter_Range").Width("10%").HeaderText("Parameter Range").Visible(false).Add();
                                                    col.Field("Actual_Value").Width("10%").HeaderText("Actual Value").Visible(false).Add();
                                                    col.Field("Method_used").Width("10%").HeaderText("Method used").Visible(false).Add();
                                                    col.Field("Checked_by").Width("10%").HeaderText("Checked by").Visible(false).Add();
                                                    col.Field("Document_Ref").Width("10%").HeaderText("Document Ref").Visible(false).Add();
                                                    col.Field("Pass_Fail").Width("10%").HeaderText("Pass / Fail").Visible(false).Add();

                                                })
                                                .ClientSideEvents(eve => { eve.ActionComplete("complete").EndAdd("EndProcess").EndDelete("EndProcess").EndEdit("EndProcess"); })
                                              ).Render();}
@Html.EJ().ScriptManager()
<br />

<script type="text/javascript">

    @*$(function () {
        var obj = @Html.Raw(Json.Encode(ViewBag.datasource));
        console.log(obj);
        $("#Editing").ejGrid({
            dataSource: obj,
            allowPaging: true,
            //columns: [

            //],
            //dataBound : function(args){
            //	for (var fld =0; fld < list.length; fld++ ) {
            //	var column = { field: list[fld].value, headerText: list[fld].header, column: "", textAlign: "left", type: "string", visible: true, width: 75 };
            //	this.model.columns.push(column); //add dynamic columns
            //	}
            //	this.columns(this.model.columns);
            //}
        });
    });*@


</script>


