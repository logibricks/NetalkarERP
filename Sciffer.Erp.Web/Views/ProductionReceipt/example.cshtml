@model Sciffer.Erp.Domain.Model.prod_receipt
@{
    ViewBag.Title = "Create";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div id="ProdReceiptDetails"></div>
    <div class="form-horizontal">
        <div class="modal-body">
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.prod_order_id, "Production Order", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("prod_order_id", Enumerable.Empty<SelectListItem>(), "---Select---", new { @class = "form-control validinput removedisabled", @required = true, @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.prod_order_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        <input type="button" value="Select Production Order" name="purchaseorder" id="purchaseorder" class="btn btn-primary" />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.category_id, "Category *", htmlAttributes: new { Class = "control-label col-md-4 " })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            <input type="hidden" id="is_active" name="is_active" value="true" />
                            @Html.DropDownList("category_id", (System.Web.Mvc.SelectList)ViewBag.categorylist, htmlAttributes: new { Class = "form-control", @onchange = "GetDocumentNumber(this.value)" })
                            @Html.ValidationMessageFor(model => model.category_id, "", new { Class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.plant_id, "Plant *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("plant_id", (System.Web.Mvc.SelectList)ViewBag.plantlist, "--Select--", htmlAttributes: new { @class = "form-control validinput removedisabled", @required = true, @disabled = "disabled", @onchange = "GetStorageLocation(this.value)" })
                            @Html.ValidationMessageFor(model => model.plant_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.posting_date, "Posting Date *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.posting_date, new { htmlAttributes = new { @class = "form-control validinput" } })
                            @Html.ValidationMessageFor(model => model.posting_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.document_date, "Document Date *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.document_date, new { htmlAttributes = new { @class = "form-control validinput" } })
                            @Html.ValidationMessageFor(model => model.document_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.header_remarks, "Remarks", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.header_remarks, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.header_remarks, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.storage_location_id, "Parent SLoc", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("storage_location_id", Enumerable.Empty<SelectListItem>(), "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.storage_location_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <input type="hidden" id="deleteids" name="deleteids" />
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        <div class="col-md-12 col-sm-12 col-xs-12">
                            <button type="button" class="btn btn-primary" id="open_modal" style="float:right"><span class="glyphicon glyphicon-plus"></span>Add Details</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="table-responsive" style="max-height: calc(100vh - 250px); overflow-y: auto;">
                    <table class="table table-responsive table-bordered table-striped" id="ContactGrid">
                        <thead>
                            <tr>
                                <th><label>ID</label></th>
                                <th><label>Sr. No.</label></th>
                                <th><label>Out Item ID</label></th>
                                <th><label>Out Item</label></th>
                                <th><label>UoM ID</label></th>
                                <th><label>UoM</label></th>
                                <th><label>SLoc ID</label></th>
                                <th><label>SLoc</label></th>
                                <th><label>Quantity</label></th>
                                <th><label>Prod Order Detail ID</label></th>
                                <th><label>PO Req Qty</label></th>
                                <th><label>Action</label></th>
                            </tr>
                        </thead>

                    </table>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <input type="submit" value="Create" class="btn btn-success" id="create" data-controller="PriceList" onclick="TabletoJeson();" style="float:right" />
                </div>
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
</div>

<div class="modal fade" id="myModal1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content" style="align-content:center;width:900px">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Purchase Order</h4>
            </div>
            <div class="modal-body" style="max-height:500px;overflow-y:auto">
                <div class="row">
                    <div class="col-lg-6 col-sm-6">
                        <div class="form-group">
                            <label class="control-label col-md-4">
                                Production Order
                            </label>
                            <div class="col-md-8 col-sm-8 col-xs-12">
                                @Html.DropDownList("prod_order_id1", (System.Web.Mvc.SelectList)ViewBag.ProdOrdList, "--Select--", new { @class = "form-control", @onchange = "GetProductionOrder(this.value);" })
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <div class="table-responsive" style="max-height: calc(100vh - 250px); overflow-y: auto;">
                            <table class="table table-responsive table-bordered table-striped" id="pogrid">
                                <thead>
                                    <tr>
                                        <th><label>ID</label></th>
                                        <th><label>Sr. No.</label></th>
                                        <th><label>Out Item ID</label></th>
                                        <th><label>Out Item</label></th>
                                        <th><label>UoM ID</label></th>
                                        <th><label>UoM</label></th>
                                        <th><label>SLoc ID</label></th>
                                        <th><label>SLoc</label></th>
                                        <th><label>Plant ID</label></th>
                                        <th><label>Item Batch ID</label></th>
                                        <th><label>PO Balance Quantity</label></th>
                                        <th><label>Machine Ok Quantity</label></th>
                                        <th><label>Quantity Value</label></th>
                                        <th><label>Req Value</label></th>
                                        <th><input type="checkbox" name="select_all" value="1" id="example-select-all"></th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="addSALES btn btn-primary" disabled="disabled">Add</button>
            </div>
        </div>
    </div>
</div>
<input type="hidden" id="storage_location_id1" />
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Price Details</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Item <span class="required">*</span>
                        </label>

                        <div class="col-md-7">
                            @Html.DropDownList("out_item_id", (System.Web.Mvc.SelectList)ViewBag.itemlist, "---Select---", new
                       {
                           @class = "form-control col-md-7 col-xs-12",
                           @onchange = "GetUnit(this.value)"
                       })
                        </div>
                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Quantity <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control" name="quantity" id="quantity" onchange="calculate()" />
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            UoM  <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("uom_id", (new System.Web.Mvc.SelectList(ViewBag.UOM, "UOM_ID", "UOM_NAME")), "--select--", htmlAttributes: new { @class = "form-control validator", required = "required" })
                        </div>
                    </div>
                </div>

                <br />

                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Batch <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <input type="text" class="form-control" name="batch_no" id="batch_no" onchange="calculate()" />
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Tag <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <input type="text" class="form-control" name="tag_no" id="tag_no" onchange="calculate()" />
                        </div>
                    </div>
                </div>
                <br />
                <div class="modal-footer">
                    <input type="hidden" id="sr_no" />
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="clearmodel();">Close</button>
                    <button type="button" class="add btn btn-primary">Add </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript" src="~/Scripts/jquery.dataTables1.10.9.min.js"></script>
    <script type="text/javascript" src="~/Scripts/1.9.4.jquery.dataTables.min.js"></script>
    <script src="~/Scripts/requirevalidation.js"></script>
    <script src="~/Scripts/jquery.filedrop.js"></script>
    <script type="text/javascript">
        var checkedarray = [];
        $("#purchaseorder").on("click", function (event) {
            var t = $('#pogrid').DataTable();
            t.fnClearTable();
            //$("#po_number").val('').trigger("change");
            //$("#po_id1").val("").trigger("change");
            //$("#vendor_id1").val("").trigger("change");
            $('#myModal1').modal('show');
            $('#example-select-all').attr('checked', false);
        })
        $("#plant_id").select2({
            placeholder: "Select Plant",
            allowClear: true
        });
        $("#out_item_id").select2({
            placeholder: "Select Item",
            allowClear: true
        });
        $("#prod_order_id").select2({
            placeholder: "Select Purchase Order",
            allowClear: true
        });

        $(document).ready(function () {
            document.getElementById('posting_date').valueAsDate = new Date();
            document.getElementById('document_date').valueAsDate = new Date();

        });
        function calculate() {
            var qty = $("#quantity").val();
            if (qty = "") {
                qty = 1;
            }
            var rate = $("#rate").val();
            if (rate = "") {
                rate = 1;
            }
            $("#value").val(qty * rate);
        }
        function onSelect2(args) {
            var id = "";
            var id = args.value.split("-")[0];
            GetUnit(id);
        }
        function GetUnit(id) {

            if (id != '') {
                $.ajax({
                    type: 'GET',
                    url: "@Url.Action("GetUnitofItem", "Generic")",
                    data: { id: id },
                    success: function (ITEM) {
                        $('#uom_id').val(ITEM.item);
                    },
                    error: function (emp) {
                        $('#uom_id').val('');
                    }
                });
            }
            else {
                $('#uom_id').val('');
            }

        }
        $('#open_modal').click(function () {
            if ($("#Vendor_code").val() == '') {

                swal("", "Select Vendor.", "error");

            }
            else {
                $('#myModal').modal('show');
                clearmodel();
            }
        });

        $(".add").on("click", function (event) {
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            var item_id = $("#out_item_id").val();
            var item_name = $('#out_item_id option:selected').text();
            var quantity = $("#quantity").val();
            var uom_id = $("#uom_id").val();
            var uom_name = $('#uom_id').find('option:selected').text();
            var batch_no = $("#batch_no").text();
            var tag_no = $("#tag_no").text();

            if (item_id == '') {
                swal("", "Please Select Item Name.", "error");
                return false;
            }
            if (uom_id == '') {
                swal("", "Please Select UOM Name.", "error");
                return false;
            }
            if (quantity == '') {
                swal("", "Please Enter Quantity.", "error");
                return false;
            }
            if ($("#sr_no").val() == "") {
                t.fnAddData(['', rowCount + 1, item_id, item_name, quantity, uom_id, uom_name, batch_no, tag_no, ''
                ]);
            }
            else {
                var cc = $("#sr_no").val();
                cc = parseInt(cc) - 1;
                t.fnUpdate(['', cc + 1, item_id, item_name, quantity, uom_id, uom_name, batch_no, tag_no, ''], cc)
            }
            clearmodel();
            return true;
        });
        function clearmodel() {
            $("#sr_no").val('');
            $("#out_item_id").val('').trigger('change');
            $("#uom_id").val('');
            $("#quantity").val('');
            $("#batch_no").val('');
            // $("#discount_type_id").val('');
            $("#tag_no").val('');
        }
        $('#ContactGrid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            aoColumns: [
                { sname: "a", bVisible: true },
                { sname: "b" },
                { sname: "c", bVisible: true },
                { sname: "d" },
                { sname: "e" },
                { sname: "f", bVisible: true },
                { sname: "g" },
                { sname: "h" },
                { sname: "i" },
                { sname: "f", bVisible: true },
                { sname: "j" },
                {
                    sname: "l", sWidth: "8%",
                    bSortable: false,
                    mRender: function (data, type, full) {
                        return '<img class="edit" src="../images/writing_file.png" height="20px" width="25px" alt="Edit" onclick="editRow(' + full[1] + ');" /><img class="delete" src="../images/remove.png" height="20px" width="25px" alt="Delete" onclick="deleteRow(' + full[1] + ');" />';
                    }
                }]

        });
        function editRow() {
            $('#myModal').modal('show');
            var t = $('#ContactGrid').DataTable()
            var cc = parseInt(arguments[0]) - 1;

            $("#prod_receipt_detail_id").val(t.fnGetData(cc)[0]);
            $("#sr_no").val(t.fnGetData(cc)[1]);
            $("#out_item_id").val(t.fnGetData(cc)[2]).trigger('change');
            $("#quantity").val(t.fnGetData(cc)[4]);
            $('#uom_id').val(t.fnGetData(cc)[5]);
            $('#batch_no').val(t.fnGetData(cc)[7]);
            $('#tag_no').val(t.fnGetData(cc)[8]);

        }
        $('#ContactGrid').on('click', '.delete', function () {

            var t = $('#ContactGrid').DataTable();
            var id = $(this).parent('td').parent('tr').index();


            var deleteids = t.fnGetData(id)[1];
            swal({
                title: "Are you sure?",

                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: true
            },
             function (isConfirm) {
                 if (isConfirm) {

                     $("#deleteids").val(deleteids + "~");
                     t.fnDeleteRow(id);
                 }
             });
        });

        function TabletoJeson() {
            var t1 = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            $("#ProdReceiptDetails").empty();
            for (i = 0; i < rowCount; i++) {

                $("#ProdReceiptDetails").append('<input type="hidden" id="prod_receipt_detail_id' + i + '" name="prod_receipt_detail_id" value="' + t1.fnGetData(i)[0] + '">');
                $("#ProdReceiptDetails").append('<input type="hidden" id="out_item_id' + i + '" name="out_item_id" value="' + t1.fnGetData(i)[2] + '">');
                $("#ProdReceiptDetails").append('<input type="hidden" id="uom_id' + i + '" name="uom_id"  value="' + t1.fnGetData(i)[4] + '">');
                $("#ProdReceiptDetails").append('<input type="hidden" id="sloc_id' + i + '" name="sloc_id" value="' + t1.fnGetData(i)[6] + '">');
                $("#ProdReceiptDetails").append('<input type="hidden" id="prod_order_detail_id' + i + '" name="prod_order_detail_id"  value="' + t1.fnGetData(i)[12] + '">');
                $("#ProdReceiptDetails").append('<input type="hidden" id="po_quantity' + i + '" name="po_quantity"  value="' + t1.fnGetData(i)[11] + '">');
            }
        }

        function GetStorageLocation(id) {
            if (id == "") {
                id = 0;
            }
            $.ajax({
                url: "@Url.Action("GetStorageLocation", "Generic")",
                type: "GET",
                dataType: "JSON",
                data: { id: id },
                cache: false,
                success: function (storage) {
                    $("#storage_location_id").html(""); // clear before appending new list
                    $("#storage_location_id").append($('<option></option>').val('0').html("---Select---"));
                    $.each(storage, function (i, cycle) {
                        $("#storage_location_id").append(
                        $('<option></option>').val(cycle.storage_location_id).html(cycle.storage_location_name));
                    });
                    $("#storage_location_id").val($("#storage_location_id1").val()).trigger('change');
                }
            });
        }

        $('#pogrid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            "columns": [
                  { "data": "prod_order_detail_id", bVisible: true },
                  { "data": "rowIndex", bVisible: true },
                  { "data": "out_item_id", bVisible: true },
                  { "data": "out_item_name", bVisible: true },
                  { "data": "uom_id", bVisible: true },
                  { "data": "uom_name", bVisible: true },
                  { "data": "sloc_id", bVisible: true },
                  { "data": "sloc_name", bVisible: true },
                  { "data": "plant_id", bVisible: true },
                  { "data": "batch_id", bVisible: true },
                  { "data": "balance_qty", bVisible: true },
                  { "data": "machine_qunatity", bVisible: true },
                  { "data": "rowIndex", bVisible: true },
                  { "data": "rowIndex", sWidth: "10%", 'render': function (data, type, full) { return '<input type="number" id="reqq_qty' + data + '" class="quant form-control" data-index=' + data + ' />' } },
                  { "data": "rowIndex", sWidth: "4%", 'render': function (data, type, full) { return '<input type="checkbox" id="batchselect1" data-index=' + (full.rowIndex - 1) + '  class="price check"/>' } },
            ]
        });
        $(document).on('change', '.quant', function () {
            var t = $('#pogrid').DataTable();
            var index = $(this).attr('data-index');
            var _quant_id = $(this).val();
            var _quant = $(this).find('option:selected').text();
            if (_quant_id != '') {
                _quant = (_quant);
            }
            var parsedIndex = parseInt(index) - 1;
            t.fnUpdate(_quant_id, parsedIndex, 12);
            // t.fnUpdate(_ntag_reason, parsedIndex, 18);

        })

        function GetProductionOrder(poid) {
            var t = $('#pogrid').DataTable();
            t.fnClearTable();
            if (poid == "") {
                poid = 0;
            }
            var rowCount = t.fnGetData().length;
            var i = 1;
            $.ajax({
                url: "@Url.Action("ProductionOrderItems", "ProductionReceipt")",
                type: "GET",
                dataType: "JSON",
                data: { id: poid },
                success: function (poid) {
                    //console.log(poid);
                    t.fnAddData(poid);
                }
            });
        }
        $('#example-select-all').on('click', function () {
            if ($(this).hasClass('allChecked')) {
                $('input[type="checkbox"]', '#pogrid').prop('checked', false);
            } else {
                $('input[type="checkbox"]', '#pogrid').prop('checked', true);
            }
            $(this).toggleClass('allChecked');

            checkedarray.length = 0;
            var t = $('#pogrid').DataTable();
            var trlen = t.fnGetData().length;
            if ($(this).is(':checked')) {
                if (trlen > 0) {
                    for (var j = 0; j <= trlen - 1; j++) {
                        checkedarray.push(j);
                    }
                }
            }
            else {
                checkedarray.length = 0;
            }
        });
        $(document).on('change', 'input[type="checkbox"]', function () {
            if ($('.check').is(':checked')) {
                $('.addSALES ').removeAttr('disabled');
            }
            else {
                $('.addSALES ').attr('disabled', true);
            }
        });
        $(document).on('click', '.check', function () {
            var index = $(this).attr('data-index');
            var t = $('#pogrid').DataTable();
            if ($(this).is(':checked')) {
                checkedarray.push(index);
            }
            else {
                var checkedIndex = checkedarray.indexOf(parseInt(index));
                checkedarray.splice(checkedIndex, 1);
            }
        });

        $(".addSALES").on("click", function (event) {
            $("#prod_order_id").html(""); // clear before appending new list
            $("#prod_order_id").append($('<option></option>').val(0).html("---Select---"));
            $("#prod_order_id").append(
                       $('<option></option>').val($("#prod_order_id1").val()).html($("#prod_order_id1 option:selected").text()));
            $("#prod_order_id").val($("#prod_order_id1").val()).trigger('change');
            var tt = $("#prod_order_id1").val();

            var s = $('#pogrid').DataTable();
            var rowCount4 = s.fnGetData().length;
            var t = $('#ContactGrid').DataTable();
            t.fnClearTable();
            var isFalse = false;
            var i = 0;
            var j = 0;

            for (var k = 0; k <= checkedarray.length - 1; k++) {
                var i = checkedarray[k];
                var txt = s.fnGetData(i, 12);
                //console.log(checkedarray[k], s.fnGetData(i , 11), s.fnGetData(i , 12))
                if (txt == '') {
                    swal("", "Req Quantity cannot be left blank!", "error");
                    return isFalse;
                }
                if (txt == '0') {
                    swal("", "Req Quantity cannot be zero!", "error");
                    return isFalse;
                }
                if (txt == '0.00') {
                    swal("", "Req Quantity cannot be zero!", "error");
                    return isFalse;
                }
                if (txt > s.fnGetData(i, 11)) {
                    swal("", "Req quantity should be less than Machine Ok quantity!", "error");
                    return isFalse;
                }
            }

            for (var l = 0; l <= checkedarray.length - 1; l++) {
                var j = checkedarray[l];

                var req_qty = $("#reqq_qty" + (l + 1)).val();
                $("#plant_id").val(s.fnGetData(j, 8)).trigger('change');
                $("#storage_location_id1").val(s.fnGetData(j, 6));
                try {
                    t.fnAddData(['0', i + 1, s.fnGetData(j, 2), s.fnGetData(j, 3), s.fnGetData(j, 4), s.fnGetData(j, 5),
                        s.fnGetData(j, 6), s.fnGetData(j, 7), s.fnGetData(j, 11),
                        s.fnGetData(j, 0), req_qty, '']);
                    i = i + 1;
                }
                catch (exception) {
                    checkedarray.length = 0;
                    alert(exception.message);
                }
                isFalse = true;
            }

            if (isFalse == true) {
                $('#myModal1').modal('hide');
                checkedarray.length = 0;
            }
        });
    </script>
}
