@using Sciffer.Erp.Domain.Model
@{
    ViewBag.Title = "Index";
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
<br /><br /><br />
<div>
    @Html.EJ().Dialog("ErrorList").Title("ErrorList").ShowOnInit(false)
    @(Html.EJ().Grid<REF_DEPARTMENT>("Grid")
         .Datasource(ds => ds.Json((IEnumerable<object>)ViewBag.Datasource).RemoveURL(Url.Action("InlineDelete", "BusinessUnit")).InsertURL(Url.Action("InlineInsert", "Department")).UpdateURL(Url.Action("InlineInsert", "Department"))
                       .Adaptor(AdaptorType.RemoteSaveAdaptor).Offline(false))
        .EditSettings(edit => { edit.AllowAdding().AllowDeleting().AllowEditing().EditMode(EditMode.InlineFormTemplate).InlineFormTemplateID("#template").ShowDeleteConfirmDialog(true); })
        .EnableAltRow().AllowPaging()
        .PageSettings(p => { p.PageSize(10); })
        .EnableAltRow()

        .ToolbarSettings(toolbar =>
        {
            toolbar.ShowToolbar().ToolbarItems(items =>
            {
                items.AddTool(ToolBarItems.Add);
                items.AddTool(ToolBarItems.Edit);
                items.AddTool(ToolBarItems.Update);
                items.AddTool(ToolBarItems.Cancel);
                items.AddTool(ToolBarItems.ExcelExport);
                items.AddTool(ToolBarItems.PrintGrid);
            });
        })
        .Mappers(map => map.ExportToExcelAction(Url.Action("ExportToExcel", "Generic", new { ctrlname = "Department" })))
        .AllowSorting()
      .AllowPaging().PageSettings(a => a.PageSize(20))
        .IsResponsive()
        .AllowFiltering()
        .ShowColumnChooser()
        .AllowReordering()
        .AllowScrolling()
        .ScrollSettings(col => { col.Width("100%"); })
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .Columns(col =>
        {
            col.Field("DEPARTMENT_ID").Width("15%").HeaderText("ID").IsPrimaryKey(true).Width(80).Visible(false).Add();
            col.Field("DEPARTMENT_NAME").Width("15%").HeaderText("Department Code").ValidationRules(val => val.AddRule("required", true)).Add();
            col.Field("DEPARTMENT_DESCRIPTION").Width("15%").HeaderText("Department  Description").ValidationRules(val => val.AddRule("required", true)).Add();
           

        })
        .ClientSideEvents(eve => { eve.ActionComplete("complete").EndAdd("EndProcess").EndDelete("EndProcess").EndEdit("EndProcess"); })
    )
</div>
<script id="template" type="text/template">

    <div>
        <div class="row">

            <div class="col-lg-6 col-md-6 col-xs-12">
                <input type="hidden" id="DEPARTMENT_ID" name="DEPARTMENT_ID" value="{{: DEPARTMENT_ID}}" class="form-control" />
            </div>
        </div>
        <div class="row">
            <div class="col-lg-2 col-md-2 col-xs-12" style="text-align: right;">
                Department Code *
            </div>
            <div class="col-lg-6 col-md-6 col-xs-12">
                <input type="text" id="DEPARTMENT_NAME" name="DEPARTMENT_NAME" value="{{: DEPARTMENT_NAME}}" class="form-control" />
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-lg-2 col-md-2 col-xs-12" style="text-align: right;">
                Department Description *
            </div>
            <div class="col-lg-6 col-md-6 col-xs-12">
                <input type="text" id="DEPARTMENT_DESCRIPTION" name="DEPARTMENT_DESCRIPTION" value="{{: DEPARTMENT_DESCRIPTION}}" class="form-control" />
            </div>
        </div>
    </div>
</script>

<script type="text/javascript">
    var flag = true;
    function complete(args) {
        if (args.requestType == "beginedit") {

            document.getElementById('DEPARTMENT_NAME').setAttribute('disabled', 'disabled');
            document.getElementById('DEPARTMENT_DESCRIPTION').setAttribute('disabled', 'disabled');
        }
        if (args.requestType == "save") {
            if (args.data.text == 'duplicate') {
                sweetAlert("", "Department already exists!", "error");
                if (args.model.dataSource.dataSource.json[0].DEPARTMENT_ID == null) {
                    args.model.dataSource.dataSource.json = args.model.dataSource.dataSource.json.splice(1, args.model.dataSource.dataSource.json.length);
                }
            }
            var gridObj = $("#Grid").ejGrid("instance");
            gridObj.refreshContent();
        }
    }

    function EndProcess() {
        var gridObj = $("#Grid").ejGrid("instance");
        gridObj.refreshContent();
    }
</script>
