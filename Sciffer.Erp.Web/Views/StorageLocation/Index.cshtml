@using Sciffer.Erp.Domain.Model
@{
    ViewBag.Title = "Index";
}
<br /><br /><br />
<div> 
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    @Html.EJ().Dialog("ErrorList").Title("ErrorList").ShowOnInit(false)
    @(Html.EJ().Grid<storage_vm>("Grid")
        .Datasource(ds => ds.Json((IEnumerable<object>)ViewBag.Datasource).RemoveURL(Url.Action("InlineDelete", "StorageLocation")).InsertURL(Url.Action("InlineInsert", "StorageLocation")).UpdateURL(Url.Action("InlineInsert", "StorageLocation"))
                       .Adaptor(AdaptorType.RemoteSaveAdaptor).Offline(false))
        .EditSettings(edit => { edit.AllowAdding().AllowDeleting().AllowEditing().EditMode(EditMode.InlineFormTemplate).InlineFormTemplateID("#template").ShowDeleteConfirmDialog(true); })
        .EnableAltRow().AllowPaging()
        .PageSettings(p => { p.PageSize(10); })
        .EnableAltRow()
        .ToolbarSettings(toolbar =>
        {
            toolbar.ShowToolbar().ToolbarItems(items =>
            {
                items.AddTool(ToolBarItems.Add);
                items.AddTool(ToolBarItems.Edit);

                items.AddTool(ToolBarItems.Update);
                items.AddTool(ToolBarItems.Cancel);
                items.AddTool(ToolBarItems.ExcelExport);

                items.AddTool(ToolBarItems.PrintGrid);
            });
        })
        .Mappers(map => map.ExportToExcelAction(Url.Action("ExportToExcel", "Generic", new { ctrlname = "StorageLocation" })))       
        .AllowSorting()
        .AllowPaging()
        .IsResponsive()
        .AllowFiltering()
        .ShowColumnChooser()
        .AllowReordering()
          .AllowScrolling()
        .ScrollSettings(col => { col.Width("100%"); })
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .Columns(col =>
        {
            col.Field("storage_location_id").Width("15%").HeaderText("ID").IsPrimaryKey(true).Width(80).Visible(false).Add();
            col.Field("plant_name").Width("15%").HeaderText("Plant").Add();
            col.Field("storage_location_name").Width("15%").HeaderText("SLoc Code").ValidationRules(x=>x.AddRule("required",true)).Add();
            col.Field("plant_id").Width("15%").HeaderText("Plant").Visible(false).ValidationRules(x => x.AddRule("required", true)).Add();
            col.Field("description").Width("15%").HeaderText("SLoc Description").ValidationRules(v => v.AddRule("required", true)).Add();//Validation rule in Portuguese language 
            col.Field("is_blocked").Width("15%").HeaderText("Blocked").Visible(false).Add();

        })
        .ClientSideEvents(eve => { eve.ActionComplete("complete").EndAdd("EndProcess").EndDelete("EndProcess").EndEdit("EndProcess"); })
    )
    
</div>
<style>
 
</style>
<script id="template" type="text/template">

    <div>
        <div class="row">

            <div class="col-lg-6 col-md-6 col-xs-12">
                <input type="hidden" id="storage_location_id" name="storage_location_id" value="{{: storage_location_id}}" class="form-control" />
            </div>
        </div>

        <div class="row">
            <div class="col-lg-2 col-md-2 col-xs-12" style="text-align: right;">
                Plant *
            </div>
            <div class="col-lg-6 col-md-6 col-xs-12">
                @Html.DropDownList("plant_id", (new System.Web.Mvc.SelectList(ViewBag.plant, "PLANT_ID", "PLANT_NAME")), "--select--", htmlAttributes: new { @class = "form-control" })
               
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-lg-2 col-md-2 col-xs-12" style="text-align: right;">
                SLoc Code *
            </div>
            <div class="col-lg-6 col-md-6 col-xs-12">
                <input type="text" id="storage_location_name" name="storage_location_name" value="{{: storage_location_name}}" class="form-control" />
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-lg-2 col-md-2 col-xs-12" style="text-align: right;">
                SLoc Description *
            </div>
            <div class="col-lg-6 col-md-6 col-xs-12">
                <input type="text" id="description" name="description" value="{{: description}}" class="form-control" />
                
            </div>
        </div>
        <br />

        <div class="row">
            <div class="col-lg-2 col-md-2 col-xs-12" style="text-align: right;">
                Blocked
            </div>
            <div class="col-md-6 col-sm-6 col-xs-12">
                <input type="checkbox" id="is_blocked" name="is_blocked">
            </div>
        </div>
    </div>
</script>
<script type="text/javascript">
   // document.getElementById('storage_location_name').removeAttribute('style');
            var flag = true;
            function complete(args) {
                if (args.requestType == "add") {
                    $('#is_blocked').checkboxpicker();
                    $("#plant_id").select2({
                        maximumSelectionLength: 4,
                        placeholder: "Select Plant",
                        allowClear: true

                    });
                }
                if (args.requestType == "beginedit") {
                    
                    $("#plant_id").val(args.rowData.plant_id);

                    document.getElementById('plant_id').setAttribute('disabled', 'disabled');
                    document.getElementById('storage_location_name').setAttribute('disabled', 'disabled');
                    document.getElementById('description').setAttribute('disabled', 'disabled');
                    if (args.rowData.is_blocked == true) {
                        //Check
                        document.getElementById('is_blocked').setAttribute('checked', 'checked');
                    }
                    else {
                        //UnCheck
                        document.getElementById('is_blocked').removeAttribute('checked');
                    }
                    $('#is_blocked').checkboxpicker();
                    $("#plant_id").select2({
                        maximumSelectionLength: 4,
                        placeholder: "Select Plant",
                        allowClear: true

                    });

                }
                if (args.requestType == "save") {
                    if (args.data.text == 'duplicate') {
                        sweetAlert("", "Storage location already exists!", "error");
                        if (args.model.dataSource.dataSource.json[0].storage_location_id == null) {
                            args.model.dataSource.dataSource.json = args.model.dataSource.dataSource.json.splice(1, args.model.dataSource.dataSource.json.length);
                        }
                    }
                    var gridObj = $("#Grid").ejGrid("instance");
                    gridObj.refreshContent();
                }
            }

            function EndProcess() {
                var gridObj = $("#Grid").ejGrid("instance");           
                gridObj.refreshContent();
            }
</script>



