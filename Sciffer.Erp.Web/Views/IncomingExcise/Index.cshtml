
@using Sciffer.Erp.Domain.ViewModel

@{
    ViewBag.Title = "Index";
}
<br /><br /><br />
<div>
    @(Html.EJ().Grid<pur_incoming_excise_vm>("Searching")
        .Datasource(ds => ds.URL(Url.Action("GetIndexData", "Generic", new { @ctrl_name = "IncomingExcise" }))
         .EnableCaching()
        .CachingPageSize(4)
        .TimeTillExpiration(120000)
        .Adaptor(AdaptorType.UrlAdaptor))
        .EditSettings(edit => { edit.AllowAdding().AllowDeleting().AllowEditing().EditMode(EditMode.InlineFormTemplate); })
        .ToolbarSettings(toolBar => toolBar.ShowToolbar().ToolbarItems(items =>
        {
            items.AddTool(ToolBarItems.Add);
            items.AddTool(ToolBarItems.Edit);
            items.AddTool(ToolBarItems.ExcelExport);
            items.AddTool(ToolBarItems.PrintGrid);
        }))

        .ContextMenuSettings(contextMenu =>
        {
            contextMenu.EnableContextMenu();
            contextMenu.DisableDefaultItems();
            contextMenu.CustomContextMenuItems(new List<Syncfusion.JavaScript.Models.CustomContexMenuItems>() { new Syncfusion.JavaScript.Models.CustomContexMenuItems() { Id = "MyMenu", Text = "Print Report" } }); // CustomContext menu items                     
        })

        .Mappers(map => map.ExportToExcelAction(Url.Action("ExportToExcel", "Generic", new { ctrlname = "IncomingExcise" })))
        .AllowSorting()
       .AllowPaging().PageSettings(a => a.PageSize(20))
        .IsResponsive()
        .AllowFiltering()
        .ShowColumnChooser()
        .AllowReordering()
         .AllowScrolling()
        .ScrollSettings(col => { col.Width("100%"); })
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .Columns(col =>
        {
            col.Field("incoming_excise_id").Width("15%").HeaderText("ID").IsPrimaryKey(true).Width(80).Visible(false).Add();
            col.Field("document_numbring_name").Width("15%").HeaderText("Category").Add();
            col.Field("incoming_excise_number").Width("15%").HeaderText("Number").Add();
            col.Field("incoming_excise_posting_date").Width("15%").HeaderText("Posting Date").Format("{0:dd/MM/yyyy}").Add();
            col.Field("grn_no").Width("15%").HeaderText("GRN No").Visible(false).Add();
            col.Field("vendor_code").Width("15%").HeaderText("Vendor Code").Visible(false).Add();
            col.Field("vendor_name").Width("15%").HeaderText("Vendor Name").Visible(false).Add();
            col.Field("excise_ref_no").Width("15%").HeaderText("Tax Document Ref No.").Add();
            col.Field("excise_ref_date").Width("15%").HeaderText("Tax Document Ref Date").Format("{0:dd/MM/yyyy}").Add();
            col.Field("incoming_excise_net_value").Width("15%").HeaderText("Net Value").Visible(false).Add();
            col.Field("net_currency_name").Width("15%").HeaderText("Net Currency").Visible(false).Add();
            col.Field("incoming_excise_gross_value").Width("15%").HeaderText("Gross Value").Visible(false).Add();
            col.Field("gross_currency_name").Width("15%").HeaderText("Gross Currency").Visible(false).Add();
            col.Field("business_code").Width("15%").HeaderText("Business Unit Code").Visible(false).Add();
            col.Field("business_unit_name").Width("15%").HeaderText("Business Unit Description").Visible(false).Add();
            col.Field("plant_code").Width("15%").HeaderText("Plant Code").Visible(false).Add();
            col.Field("plant_name").Width("15%").HeaderText("Plant Description").Visible(false).Add();
            col.Field("freight_terms_name").Width("15%").HeaderText("Freight Terms").Visible(false).Add();
            col.Field("delivery_date").Width("15%").HeaderText("Delivery Date").Visible(false).Add();
            col.Field("vendor_doc_no").Width("15%").HeaderText("Vendor Document Number").Visible(false).Add();
            col.Field("vendor_doc_date").Width("15%").HeaderText("Vendor Document Date").Format("{0:dd/MM/yyyy}").Visible(false).Add();
            col.Field("gate_entry_number").Width("15%").HeaderText("Gate Entry Number").Visible(false).Add();
            col.Field("gate_entry_date").Width("15%").HeaderText("Gate Entry Date").Format("{0:dd/MM/yyyy}").Visible(false).Add();
            col.Field("billing_address").Width("15%").HeaderText("Billing Address").Visible(false).Add();
            col.Field("billing_city").Width("15%").HeaderText("Billing City").Visible(false).Add();
            col.Field("billing_pin_code").Width("15%").HeaderText("Billing Pin Code").Visible(false).Add();
            col.Field("country_name").Width("15%").HeaderText("Billing Country").Visible(false).Add();
            col.Field("state_name").Width("15%").HeaderText("Billing State").Visible(false).Add();
            col.Field("payment_cycle_type_name").Width("15%").HeaderText("Payment Cycle Type").Visible(false).Add();
            col.Field("payment_cycle_name").Width("15%").HeaderText("Payment Cycle").Visible(false).Add();
            col.Field("payment_terms_name").Width("15%").HeaderText("Payment Terms").Visible(false).Add();
            col.Field("gst_no").Width("15%").HeaderText("GST No").Visible(false).Add();
            col.Field("pan_no").Width("15%").HeaderText("PAN No").Visible(false).Add();
            col.Field("ecc_no").Width("15%").HeaderText("ECC No").Visible(false).Add();
            col.Field("vat_tin_no").Width("15%").HeaderText("VAT TIN No").Visible(false).Add();
            col.Field("cst_tin_no").Width("15%").HeaderText("CST TIN No").Visible(false).Add();
            col.Field("service_tax_no").Width("15%").HeaderText("Service Tax No").Visible(false).Add();
            col.Field("cancellation_remarks").Width("15%").HeaderText("Cancellation Remarks").Visible(false).Add();
        }).ClientSideEvents(eve =>
        {
            eve.ActionBegin("actionBegin");
            eve.RightClick("rightClick");
            eve.ContextClick("contextclick");
        })
    )
</div>
<style>
    .e-editedrow {
        display: none;
    }

    .e-editcell {
        display: none;
    }
</style>

<script type="text/javascript">

    function actionBegin(args) {
        if (args.requestType == "beginedit")
        {
            location.href = "@Url.Action("Edit", "IncomingExcise")?id=" + args.rowData.incoming_excise_id;
        }
        if (args.requestType == "add") {
            location.href = "@Url.Action("Create", "IncomingExcise")"
        }
    }
    function rightClick(args) {
        location.href = "@Url.Action("Details", "IncomingExcise")?id=" + args.data.incoming_excise_id;
    }
    function contextclick(args) {
        if (args.text == "Print Report") {
            var url = '@Url.Action("Pdf", "IncomingExcise")?id=' + this.getSelectedRecords()[0].incoming_excise_id;
            window.open(url);
        }
    };
    $(document).ready(function () {
        var doc_no = '@ViewBag.doc';
        if (doc_no != '') {
            if (doc_no != 0) {
                sweetAlert("", doc_no , "success");
            }
        }
    });
</script>

