@model Sciffer.Erp.Domain.ViewModel.pla_transferVM
@using Newtonsoft.Json
@{
    ViewBag.Title = "Create";
}


@using (Html.BeginForm("Create", "WithinPlantTransfer", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal" style="margin-top:10px;">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(a=>a.pla_transfer_id)
        <div class="form-group">
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.category_id, new { @class = "control-label col-md-4" })
                        <div class="col-md-5 col-sm-5 col-xs-12">
                            @Html.DropDownList("category_id", (System.Web.Mvc.SelectList)ViewBag.category_list, new { @class = "form-control category",  @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.category_id, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.pla_transfer_number, new { @class = "control-label col-md-4 hidden" })
                        <div class="col-md-3 col-sm-3 col-xs-12">
                            @Html.EditorFor(model => model.pla_transfer_number, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.pla_transfer_number, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.pla_posting_date, new { @class = "control-label col-md-4" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.pla_posting_date, new { htmlAttributes = new { @class = "form-control  ",  @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.pla_posting_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.pla_document_date, new { @class = "control-label col-md-4" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.pla_document_date, new { htmlAttributes = new { @class = "form-control ", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.pla_document_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.plant_id, new { @class = "control-label col-md-4" })
                        <div class="col-md-8 col-sm-8 col-xs-12">

                            @Html.ValidationMessageFor(model => model.plant_id, "", new { @class = "text-danger" })
                            @Html.DropDownList("plant_id", (System.Web.Mvc.SelectList)ViewBag.plant_list, "--Select--", htmlAttributes: new { @class = "form-control  ", @disabled = "disabled" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.pla_send_sloc, new { @class = "control-label col-md-4" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("pla_send_sloc", (System.Web.Mvc.SelectList)ViewBag.receive_loc, "---Select---", new { @class = "form-control ", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.pla_send_sloc, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.pla_receive_sloc, new { @class = "control-label col-md-4" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("pla_receive_sloc", (System.Web.Mvc.SelectList)ViewBag.receive_loc, "---Select---", new { @class = "form-control ", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.pla_receive_sloc, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.pla_send_bucket, new { @class = "control-label col-md-4" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.ValidationMessageFor(model => model.pla_send_bucket, "", new { @class = "text-danger" })
                            @Html.DropDownList("pla_send_bucket", (System.Web.Mvc.SelectList)ViewBag.bucket_list, "--Select--", htmlAttributes: new { @class = "form-control ", @disabled = "disabled" })

                        </div>
                    </div>
                </div>


                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.pla_receive_bucket, new { @class = "control-label col-md-4" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.ValidationMessageFor(model => model.pla_receive_bucket, "", new { @class = "text-danger" })
                            @Html.DropDownList("pla_receive_bucket", (System.Web.Mvc.SelectList)ViewBag.bucket_list, "--Select--", htmlAttributes: new { @class = "form-control", @disabled = "disabled" })

                        </div>
                    </div>
                </div>

            </div>

            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.remarks_on_document, new { @class = "control-label col-md-4" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.remarks_on_document, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.remarks_on_document, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>
        </div>


        <div class="panel panel-body" role="tabpanel" data-example-id="togglable-tabs">
            <ul id="myTab" class="nav nav-tabs bar_tabs" role="tablist">
                <li class="active"><a data-toggle="tab" href="#sectionA">Items Details</a></li>
                <li><a data-toggle="tab" href="#sectionC">Information</a></li>
            </ul>
            <div class="tab-content">
                <div id="sectionA" class="tab-pane fade in active" style="margin-top:10px;">
                    <div class="row">
                        <div id="error_div"></div>
                        <div class="table-responsive" style="max-height: calc(100vh - 300px); overflow-y: auto;">
                            <table class="table table-responsive table-bordered table-striped" id="line_items_grid"></table>
                        </div>
                    </div>
                </div>
                <div id="sectionB" class="tab-pane fade hidden" style="margin-top:10px;">
                    <div class="row">
                        <div class="table-responsive">
                            <table class="table table-responsive table-bordered table-striped" id="SelectedBatch"></table>
                        </div>
                    </div>
                </div>
                <div id="sectionC" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.pla_attachment, "Attachment", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    <input type="file" class="form-control" id="FileUpload" name="FileUpload" accept="application/pdf, image/*" disabled />
                                    @Html.ValidationMessageFor(model => model.pla_attachment, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

  
    //Batch Details Modal
    <div class="modal fade" id="BatchModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content" style="align-content:center;width:900px">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Batch Details</h4>
                </div>
                <br />
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label class="control-label col-md-3">
                                Item *
                            </label>
                            <div class="col-md-8">
                                @Html.DropDownList("batch_item_id", (System.Web.Mvc.SelectList)ViewBag.Item_list, "---Select---", new { @class = "form-control col-md-8 col-xs-12", @disabled = "disabled" })
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <label class="col-sm-3">
                            Quantity
                        </label>
                        <div class="col-md-8">
                            <input type="text" id="batch_quantity" class="form-control" readonly="readonly" />
                        </div>
                    </div>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="form-group">
                            <div class="table-responsive" style="max-height: calc(100vh - 300px); overflow-y: auto;">
                                <table class="table table-responsive table-bordered table-striped" id="batch_grid"></table>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/RemoveUnexpectedFile.js"></script>
    <script src="~/Scripts/requirevalidation.js"></script>



    <script type="text/javascript">
        $(document).ready(function () {
            document.getElementById('pla_posting_date').valueAsDate = new Date();
            document.getElementById('pla_document_date').valueAsDate = new Date();
            $("#items_id").select2({
                placeholder: "Select Item",
                allowClear: true
            });
            let details = @Html.Raw(JsonConvert.SerializeObject(this.Model.inter_pla_transfer_detail_vm));
            let item_details = $("#line_items_grid").DataTable();
            item_details.fnAddData(details);
        });


        //DataTable for Line Item Grid
        $('#line_items_grid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            "columns": [
                  { "data": "", sWidth: "5%", "title": "Sr No.", "defaultContent": "", "bSortable": false },
                  { "data": "pla_transfer_detail_id", "title": "ID", "bSortable": false, bVisible: false },
                  { "data": "item_id", "title": "Item ID", "bSortable": false, bVisible: false },
                  { "data": "item_code", "title": "Item Code", "bSortable": false, bVisible: true },
                  { "data": "item_desc", "title": "Item Description", "bSortable": false },
                  { "data": "uom_name", bVisible: true, "title": "UoM", "bSortable": true },
                  { "data": "sloc_name", bVisible: true, "title": "SLoc", "bSortable": false },
                  { "data": "bucket_name", bVisible: true, "title": "Bucket", "bSortable": false },
                  { "data": "rate", bVisible: true, "title": "Rate", "bSortable": false },
                  { "data": "issue_quantity", bVisible: true, "title": "Issue Quantity", "bSortable": false },
                  { "data": "value", bVisible: true, "title": "Value", "bSortable": false },
                  {
                      "data": "", sWidth: "2%", "title": 'Action',
                      mRender: function (data, type, full) {
                          let table = $('#line_items_grid').DataTable();
                          let rowIndex = 0;
                          if (table.fnGetData().length > 1) {
                              rowIndex = parseInt($('#line_items_grid tr:last td:first').html());
                          }
                          return '<img class="editRow" src="../images/writing_file.png" id="batch' + rowIndex + '" data-index=' + rowIndex + ' height="20px" width="25px" alt="Batch" />'
                      }
                  },
            ],
            "fnRowCallback" : function(nRow, aData, iDisplayIndex){
                $("td:first", nRow).html(iDisplayIndex +1);
                return nRow;
            }
        });



        //DataTable for BatchGrid
        $('#batch_grid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            "columns": [
                  { "data": "rowIndex", sWidth: "5%", "title": "Sr No.", "defaultContent": "", "bSortable": false },
                  { "data": "pla_transfer_batch_id", bVisible: false, "title": "ID", "bSortable": false },
                  { "data": "batch_number", bVisible: true, "title": "Batch Number", "bSortable": false,"render":function(data){if(data=='null'){data=''}return data} },
                  { "data": "issue_batch_quantity", bVisible: true, "title": "Quantity", sClass: "right", "bSortable": false },
            ]
        });




        //function to show batch modal
        $('#line_items_grid').on('click','.editRow',function(){
            let line_item = $('#line_items_grid').DataTable();
            let index = $(this).closest('tr').index();
            let pla_transfer_detail_id = line_item.fnGetData(index).pla_transfer_detail_id;
            getBatchUsingItemSlocPlant(pla_transfer_detail_id);
            let inte_id = line_item.fnGetData(index).item_id;
            $('#batch_item_id').val(inte_id);
            $('#BatchModal').modal('show');
        });
        //function to fill batch modal grid
       function getBatchUsingItemSlocPlant(pla_transfer_detail_id) {
            var t = $("#batch_grid").DataTable();
            $.ajax({
                url: '@Url.Action("getinter_pla_transfer_batch", "InterPlantTransfer")',
                type: "GET",
                data: { id: pla_transfer_detail_id,ctrl_name:"withinplantransfer" },
                success: function (batch) {
                    t.fnClearTable();
                    t.fnAddData(batch);
                    let batch_qty = 0;
                    $.each(batch,function(i,qty){
                        batch_qty =parseFloat(qty.issue_batch_quantity)+batch_qty;
                    });
                    $('#batch_quantity').val(parseFloat(batch_qty).toFixed(2));
                }
            });
        }


       
       
    </script>
}


