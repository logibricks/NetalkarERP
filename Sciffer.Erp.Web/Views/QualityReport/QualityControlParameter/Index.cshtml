@using Sciffer.Erp.Domain.ViewModel
@{
    ViewBag.Title = "Quality Control Paramter";
}
<h2>Quality Control Parameter</h2>
<hr />
<div>
    @(Html.EJ().Grid<mfg_qc_vm>("Searching")
        // .Datasource(ds => ds.URL(Url.Action("GetItems", "Items")).RemoveURL(Url.Action("InlineDelete", "Items")).Adaptor(AdaptorType.RemoteSaveAdaptor))

        .Datasource(ds => { ds.Json((IEnumerable<object>)ViewBag.QualityController).RemoveURL(Url.Action("Delete", "QualityControlParameter")).Adaptor(AdaptorType.RemoteSaveAdaptor); })
        .EditSettings(edit => { edit.AllowAdding().AllowDeleting().AllowEditing().EditMode(EditMode.InlineFormTemplate).ShowDeleteConfirmDialog(true); })
        .EnableAltRow().AllowPaging()
        .PageSettings(p => { p.PageSize(12); })
        .ToolbarSettings(toolBar => toolBar.ShowToolbar().ToolbarItems(items =>
        {
            items.AddTool(ToolBarItems.Add);
            items.AddTool(ToolBarItems.Edit);
            items.AddTool(ToolBarItems.ExcelExport);
            items.AddTool(ToolBarItems.PrintGrid);
        }))
        .Mappers(map => map.ExportToExcelAction(Url.Action("ExportToExcel", "Generic", new { ctrlname = "QualityControlParameter" })))
        .AllowSorting()
        .AllowPaging()
        .IsResponsive()
        .AllowFiltering()
        .ShowColumnChooser()
        .AllowReordering()
        .AllowScrolling()
        .ScrollSettings(col => { col.Width("100%"); })
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .Columns(col =>
        {
            col.Field("mfg_qc_id").Width("15%").HeaderText("ID").IsPrimaryKey(true).Width(80).Visible(false).ShowInColumnChooser(false).Add();
            col.Field("item_id").Width("15%").Visible(false).ShowInColumnChooser(false).HeaderText("Item Id").Add();
            col.Field("item_code").Width("15%").HeaderText("Item Code").Add();
            col.Field("machine_id").Width("15%").Visible(false).ShowInColumnChooser(false).HeaderText("Machine Id").Add();
            col.Field("machine_code").Width("15%").HeaderText("Machine Code").Add();
            col.Field("frequency").Width("15%").HeaderText("Frequency").Add();

        }).ClientSideEvents(eve =>
        {
            eve.ActionBegin("actionBegin");
            eve.RightClick("rightClick");
        })
    )
</div>
<style>
    .e-editedrow {
        display: none;
    }

    .e-editcell {
        display: none;
    }
</style>

<script type="text/javascript">

    function actionBegin(args) {
        if (args.requestType == "beginedit") {
            location.href = "@Url.Action("Edit", "QualityControlParameter")?id=" + args.rowData.mfg_qc_id;
        }
        if (args.requestType == "add") {
            location.href = "@Url.Action("Create", "QualityControlParameter")"
        }
    }
    @*function rightClick(args) {
        location.href = "@Url.Action("Details", "QualityControlParameter")?id="+ args.data.ITEM_ID;
    }*@

</script>
