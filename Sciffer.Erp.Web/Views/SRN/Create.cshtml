@model Sciffer.Erp.Domain.ViewModel.pur_srn_vm
@{
    ViewBag.Title = "Create";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal" style="margin-top:10px;">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div id="PoHidden"></div>
        <div class="form-group">
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.category_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("category_id", (System.Web.Mvc.SelectList)ViewBag.category_list, new { @class = "form-control category validinput setPlant", @required = true, @onchange = "GetDocumentNumber(this.value);" })
                            @Html.ValidationMessageFor(model => model.category_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        <div class="col-md-4 col-sm-4 col-xs-12">
                            <input type="button" value="Select Purchase Order" name="purchaseorder" id="purchaseorder" class="btn btn-primary" />
                        </div>
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("po_id", Enumerable.Empty<SelectListItem>(),"---Select---", new { @class = "form-control" })
                        </div>
                   </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.vendor_id, "Vendor *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("vendor_id", (System.Web.Mvc.SelectList)ViewBag.vendor_list, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.vendor_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.posting_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.posting_date, new { htmlAttributes = new { @class = "form-control postingdocumentdate postingdate", @onchange = "changeDate();", @required = true } })
                            @Html.ValidationMessageFor(model => model.posting_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
             <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.net_value, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-5 col-sm-5 col-xs-12">
                            @Html.EditorFor(model => model.net_value, new { htmlAttributes = new { @class = "form-control right  removedisabled", @disabled = "disabled", @type = "number" } })
                            @Html.ValidationMessageFor(model => model.net_value, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3 col-sm-3 col-xs-12">
                            @Html.DropDownList("net_currency_id", (System.Web.Mvc.SelectList)ViewBag.currency_list, new { @class = "form-control postingcurrency removedisabled", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.net_currency_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.gross_value, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-5 col-sm-5 col-xs-12">
                            @Html.EditorFor(model => model.gross_value, new { htmlAttributes = new { @class = "form-control right  removedisabled", @disabled = "disabled", @type = "number" } })
                            @Html.ValidationMessageFor(model => model.gross_value, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3 col-sm-3 col-xs-12">
                            @Html.DropDownList("gross_currency_id", (System.Web.Mvc.SelectList)ViewBag.currency_list, new { @class = "form-control postingcurrency removedisabled", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.gross_currency_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-body" role="tabpanel" data-example-id="togglable-tabs">
            <ul id="myTab" class="nav nav-tabs bar_tabs" role="tablist">
                <li class="active"><a data-toggle="tab" href="#sectionA">General</a></li>
                <li><a data-toggle="tab" href="#sectionB">Line Item</a></li>
                <li><a data-toggle="tab" href="#sectionC">Vendor</a></li>
                <li><a data-toggle="tab" href="#sectionD">Accounting</a></li>
                <li><a data-toggle="tab" href="#sectionE">Status</a></li>
                <li><a data-toggle="tab" href="#sectionF">Information</a></li>
            </ul>
            <div class="tab-content">
                <div id="sectionA" class="tab-pane fade in active" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.business_unit_id, "Business Unit *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("business_unit_id", (System.Web.Mvc.SelectList)ViewBag.business_list, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled", })
                                    @Html.ValidationMessageFor(model => model.business_unit_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.plant_id, "Plant *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("plant_id", (System.Web.Mvc.SelectList)ViewBag.plant_list, "---Select---", new { @class = "form-control removedisabled selectedbycategory", @disabled = "disabled", @onchange = "GetStorageLocation(this.value)" })
                                    @Html.ValidationMessageFor(model => model.plant_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.freight_terms_id, "Freight Terms *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("freight_terms_id", (System.Web.Mvc.SelectList)ViewBag.freight_list, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.freight_terms_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.place_of_supply_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("place_of_supply_id", (System.Web.Mvc.SelectList)ViewBag.state_list, "---Select---", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.place_of_supply_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.vendor_doc_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.vendor_doc_no, new { htmlAttributes = new { @class = "form-control validinput" } })
                                    @Html.ValidationMessageFor(model => model.vendor_doc_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.vendor_doc_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.vendor_doc_date, new { htmlAttributes = new { @class = "form-control validinput" } })
                                    @Html.ValidationMessageFor(model => model.vendor_doc_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.gate_entry_number, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.gate_entry_number, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.gate_entry_number, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.gate_entry_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.gate_entry_date, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.gate_entry_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.delivery_date, "Delivery Date ", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.delivery_date, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.delivery_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                           
                        </div>
                    </div>

                </div>
                <div id="sectionB" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">

                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="table-responsive">
                            <table class="table table-responsive table-bordered table-striped" id="ContactGrid">
                                <thead>
                                    <tr>
                                        <th hidden><label>ID</label></th>
                                        <th><label>SR No.</label></th>
                                        <th hidden><label>Item ID</label></th>
                                        <th><label>Item</label></th>
                                        <th hidden><label>hsn_id</label></th>
                                        <th><label>SAC/HSN Code</label></th>
                                        <th><label>User Description</label></th>
                                        <th><label>Storage Location ID</label></th>
                                        <th><label>Storage Location</label></th>
                                        <th><label>Delivery Date</label></th>
                                        <th><label>Quantity</label></th>
                                        <th hidden><label>UOM ID</label></th>
                                        <th><label>UOM</label></th>
                                        <th><label>Unit Price</label></th>
                                        <th><label>Discount</label></th>
                                        <th><label>Eff. Price</label></th>
                                        <th><label>Purchase Value</label></th>
                                        <th hidden><label>Tax ID</label></th>
                                        <th><label>Tax Code</label></th>
                                        <th hidden><label>Po Detail ID</label></th>
                                        <th hidden><label>Balance Quantity</label></th>
                                        <th hidden><label>Del Detail ID</label></th>
                                        <th><label>Action</label></th>
                                    </tr>
                                </thead>

                            </table>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">

                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="table-responsive">
                                <table class="table table-responsive table-bordered table-striped" id="TaxGrid"></table>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sectionC" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_address, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.billing_address, new { htmlAttributes = new { @class = "form-control ddlform removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.billing_address, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_city, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.billing_city, new { htmlAttributes = new { @class = "form-control ddlform removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.billing_city, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_pin_code, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.billing_pin_code, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled", } })
                                    @Html.ValidationMessageFor(model => model.billing_pin_code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.country_id, "Billing Country *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("country_id", (System.Web.Mvc.SelectList)ViewBag.country_list, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled", })
                                    @Html.ValidationMessageFor(model => model.country_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_state_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("billing_state_id", (System.Web.Mvc.SelectList)ViewBag.state_list, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled", })
                                    @Html.ValidationMessageFor(model => model.billing_state_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.email_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.email_id, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled", } })
                                    @Html.ValidationMessageFor(model => model.email_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.gst_in, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.gst_in, new { htmlAttributes = new { @class = "form-control removedisabled validinput", @disabled = "disabled", } })
                                    @Html.ValidationMessageFor(model => model.gst_in, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.gst_vendor_type_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("gst_vendor_type_id", (System.Web.Mvc.SelectList)ViewBag.gst_list, "---Select---", new { @class = "form-control removedisabled validinput", @disabled = "disabled", })
                                    @Html.ValidationMessageFor(model => model.gst_vendor_type_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sectionD" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.payment_cycle_type_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("payment_cycle_type_id", (System.Web.Mvc.SelectList)ViewBag.payment_cycle_type_list, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true, @onchange = "FillPaymentCycle()" })
                                    @Html.ValidationMessageFor(model => model.payment_cycle_type_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.payment_cycle_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("payment_cycle_id", (System.Web.Mvc.SelectList)ViewBag.payment_cycle_list, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true })
                                    @Html.ValidationMessageFor(model => model.payment_cycle_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.payment_terms_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("payment_terms_id", (System.Web.Mvc.SelectList)ViewBag.payment_terms_list, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true })
                                    @Html.ValidationMessageFor(model => model.payment_terms_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6 hidden">
                            <div class="form-group">
                                @Html.LabelFor(model => model.gst_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.gst_no, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.gst_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row hidden">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.pan_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.pan_no, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.pan_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ecc_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.ecc_no, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.ecc_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row hidden">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.vat_tin_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.vat_tin_no, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.vat_tin_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.cst_tin_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.cst_tin_no, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.cst_tin_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row hidden">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.service_tax_no, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.service_tax_no, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.service_tax_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                <div id="sectionE" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.status_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("status_id", (System.Web.Mvc.SelectList)ViewBag.status_list, null, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.status_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                <div id="sectionF" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.internal_remarks, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.internal_remarks, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.internal_remarks, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.remarks_on_doc, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.remarks_on_doc, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.remarks_on_doc, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>                       
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.attachment, "Attachment", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    <input type="file" class="form-control" id="FileUpload" name="FileUpload" accept="application/pdf, image/*" />
                                    @Html.ValidationMessageFor(model => model.attachment, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg12 col-sm-12">
            <div class="form-group">
                <div class="col-md-12 col-sm-12 col-xs-12">                    
                    <input type="button" value="Create" class="btn btn-success" data-controller="SRN" id="create1" onclick="TabletoJeson();" style="float:right" />
                </div>
            </div>
        </div>
    </div>
    <!-- Modal -->
    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">

                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Items Detail</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3">
                                Item <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                @Html.DropDownList("item_id", (System.Web.Mvc.SelectList)ViewBag.item_list, "---Select---", new { @class = "form-control col-md-7 col-xs-12 removedisabled", @disabled = "disabled" })
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                SAC/HSN Code <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                @Html.DropDownList("sac_hsn_id", (System.Web.Mvc.SelectList)ViewBag.hsncodelist, "---Select---", new { @class = "form-control col-md-7 col-xs-12", @disabled = "disabled" })
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                User Description <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <textarea class="form-control col-md-7 col-xs-12" id="user_description" readonly="readonly" rows="3"></textarea>
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3">
                                Delivery Date <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <input type="date" class="form-control col-md-7 col-xs-12" id="dte" readonly="readonly">
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3">
                                Storage Location <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                @Html.DropDownList("storage_location_id", Enumerable.Empty<SelectListItem>(), "---Select---", new { @class = "form-control col-md-7 col-xs-12", @style = "width: 100%;", @disabled = "disabled" })
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Quantity <span class="required">*</span>
                            </label>
                            <div class="col-md-4">
                                <input type="number" class="form-control col-md-7 col-xs-12" id="quantity" onchange="calculation()">
                            </div>
                            <div class="col-md-3">
                                @Html.DropDownList("uom_id", (System.Web.Mvc.SelectList)ViewBag.uom_list, "---Select---", new { @class = "form-control col-md-7 col-xs-12", @disabled = "disabled" })
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Unit Price <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <input type="number" class="form-control col-md-7 col-xs-12" readonly="readonly" id="unitprice" onchange="calculation()">
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Discount (%) <span class="required"></span>
                            </label>
                            <div class="col-md-7">
                                <input type="number" min="0" max="3" class="form-control col-md-7 col-xs-12" readonly="readonly" id="discount" onchange="calculation()">
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Effective Unit Price <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <input type="number" class="form-control col-md-7 col-xs-12" id="effectiveprice" readonly="readonly">
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Purchase Value <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                <input type="number" class="form-control col-md-7 col-xs-12" id="salesvalue" readonly="readonly">
                            </div>
                        </div>
                    </div>
                    <br />    
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="first-name">
                                Tax Code <span class="required">*</span>
                            </label>
                            <div class="col-md-7">
                                @Html.DropDownList("tax_id", (System.Web.Mvc.SelectList)ViewBag.tax_list, "---Select---", new { @class = "form-control col-md-7 col-xs-12", @disabled = "disabled" })
                            </div>
                        </div>
                    </div>
                    <br />
                </div>
                <br />
                <div class="modal-footer">
                    <input type="hidden" id="srno" />
                    <input type="hidden" id="detailid" />
                    <input type="hidden" id="po_detail_id" name="po_detail_id" />
                    <input type="hidden" id="po_staggered_delivery_id" name="po_staggered_delivery_id" />
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="clearmodel();">Close</button>
                    <button type="button" class="add btn btn-primary">Add Item</button>
                    <input type="hidden" id="balanceQuantity" />
                    <input type="hidden" id="batch_managed" />
                </div>
            </div>

        </div>
    </div>
    <div class="modal fade" id="myModal1" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content" style="align-content:center;width:900px">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Purchase Order</h4>
                </div>
                <div class="modal-body" style="max-height:500px;overflow-y:auto">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                <label class="control-label col-md-4">
                                    Vendor
                                </label>
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("vendor_id1", (System.Web.Mvc.SelectList)ViewBag.vendor_list, "---Select---", new { @class = "form-control", @onchange = "GetPOList(this.value);" })
                                    @Html.ValidationMessageFor(model => model.vendor_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                <label class="control-label col-md-3">
                                    Purchase Order
                                </label>
                                <div class="col-md-9 col-sm-9 col-xs-12">
                                    @Html.DropDownList("po_id1", Enumerable.Empty<SelectListItem>(), "---Select---", new { @class = "form-control", @onchange = "GetQuotationProduct(this.value);" })
                                    @Html.ValidationMessageFor(model => model.vendor_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <div class="table-responsive">
                                <table class="table table-responsive table-bordered table-striped" id="pogrid">
                                    <thead>
                                        <tr>
                                            <th hidden><label>ID</label></th>
                                            <th><label>Sr. No.</label></th>
                                            <th hidden><label>Item Code</label></th>
                                            <th><label>Item</label></th>
                                            <th><label>Delivery Date</label></th>
                                            <th><label>Quantity</label></th>
                                            <th hidden><label>UOM ID</label></th>
                                            <th><label>UOM</label></th>
                                            <th hidden><label>Unit Price</label></th>
                                            <th hidden><label>Discount</label></th>
                                            <th><label>Eff. Price</label></th>
                                            <th><label>Purchase Value</label></th>
                                            <th hidden><label>Tax Code</label></th>
                                            <th><label>Balance Quantity</label></th>
                                            <th hidden><label>Tax Name</label></th>
                                            <th hidden><label>storage location id</label></th>
                                            <th hidden><label>Storage Location</label></th>
                                            <th hidden><label>PO Detail ID</label></th>
                                            <th hidden><label>User Description</label></th>
                                            <th><label>SRN Quantity</label></th>
                                            <th hidden>grn_quantity</th>
                                            <th>hsn_id</th>
                                            <th>SAC/HSN Code</th>
                                            <th hidden>Staggered_delivery_id</th>
                                            <th><input type="checkbox" name="select_all" value="1" id="example-select-all"></th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="addSALES btn btn-primary" disabled="disabled">Add</button>
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/RemoveUnexpectedFile.js"></script>
    <script src="~/Scripts/requirevalidation.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            document.getElementById('posting_date').valueAsDate = new Date();
            var error=@Html.Raw(Json.Encode(ViewBag.error));
            if(error !="")
            {
                sweetAlert("",error,"error");
            }
            $("#vendor_id1").select2({
                placeholder: "Select Vendor",
                allowClear: true
            });
            $("#po_id1").select2({
                placeholder: "Select Purchase Order",
                allowClear: true
            });
            $("#category_id").select2({
                placeholder: "Select category",
                allowClear: true
            });
        });
       
        // Set category_id on change plant
        function GetDocumentCategory(id) {
            if (id == "") {
                id = 0;
            }
            $.ajax({
                url: '@Url.Action("GetCategoryListByPlant", "Generic")',
                type: "GET",
                dataType: "JSON",
                data: { id: 72,plant_id:id },
                success: function (id) {
                    $("#category_id").html(""); // clear before appending new list
                    $.each(id, function (i, cycle) {
                        $("#category_id").append(
                            $('<option></option>').val(cycle.document_numbring_id).html(cycle.category));
                    });
                }
            });
        }
        function JSONDate(dateStr) {
            var m, day;
            jsonDate = dateStr;
            var d = new Date(parseInt(jsonDate.substr(6)));
            m = d.getMonth() + 1;
            if (m < 10)
                m = '0' + m
            if (d.getDate() < 10)
                day = '0' + d.getDate()
            else
                day = d.getDate();
            return (d.getFullYear() + '/' + m + '/' + day);
        }

        function GetQuotationProduct(poid) {
            var t = $('#pogrid').DataTable();
            t.fnClearTable();
            if (poid == "") {
                poid = 0;
            }
            var rowCount = t.fnGetData().length;
            var i = 1;
            var j = 0;
            $.ajax({
                url: "@Url.Action("GetPOProductForGRN", "GRN")",
                type: "GET",
                dataType: "JSON",
                data: { id: poid ,posting_date : $("#posting_date").val()  },
                success: function (poid) {
                    $.each(poid, function (key, cycle) {
                        var month = new Date(cycle.delivery_date).getMonth() + 1;
                        if (month < 10) {
                            month = '0' + month;
                        }
                        if (cycle.user_description == "") {
                            cycle.user_description = cycle.item_name;
                        }
                        var d = new Date(cycle.delivery_date).getFullYear() + "-" + month + "-" + new Date(cycle.delivery_date).getDate();
                        t.fnAddData([cycle.po_id,
                            i,
                            cycle.item_id,
                            cycle.item_name,
                            d,
                            parseFloat(cycle.quantity).toFixed(2),
                            cycle.uom_id,
                            cycle.uom_name,
                            parseFloat(cycle.unit_price).toFixed(2),
                            parseFloat(cycle.discount).toFixed(2),
                            parseFloat(cycle.eff_unit_price).toFixed(2),
                            parseFloat(cycle.eff_unit_price * cycle.quantity).toFixed(2),
                            cycle.tax_code_id,
                            parseFloat(cycle.balance_quantity).toFixed(2),
                            cycle.tax_name,
                            cycle.sloc_id,
                            cycle.sloc_name,
                            cycle.po_detail_id,
                            cycle.user_description,
                            '<input type="hidden" value="' + i + '" id="txtentity' + i + '"><input type="number" id="txt' + i + '" class="form-control grn_quantity" data-index='+(i-1)+' />',
                            '', '','<select class="form-control hsn" data-index='+(i-1)+' id="hsn_id'+i+'"></select>',cycle.po_staggered_delivery_id,''
                        ]);

                        var item_id =cycle.item_id;
                        if(item_id!=''){
                            try{
                                $.ajax({
                                    url:'@Url.Action("Get_hsn_saclist", "Generic")',
                                    data:{id:item_id},
                                    method:'get',
                                    async:false,
                                    success:function(hsn){
                                        $("#hsn_id" + i).append(
                                          $('<option></option>').val(0).html('--Select--'));
                                        $.each(hsn,function(k,v){
                                            $("#hsn_id" + i).append(
                                            $('<option></option>').val(v.id).html(v.code));
                                        });
                                    },
                                    error: function (xhr) {
                                        console.log(xhr.message);
                                    }
                                });
                                $(".hsn").select2();
                            }

                            catch(msg){msg.message}
                        }
                        $("#hsn_id" + i).val(cycle.hsn_id).trigger("change");
                        t.fnUpdate(cycle.hsn_id,j,21);
                        i = i + 1;
                        j = j+1;
                    });

                }
            });

        }


        $('#example-select-all').on('click', function () {
            if ($(this).hasClass('allChecked')) {
                $('input[type="checkbox"]', '#pogrid').prop('checked', false);
            } else {
                $('input[type="checkbox"]', '#pogrid').prop('checked', true);
            }
            $(this).toggleClass('allChecked');
        });
        $(document).on('change', 'input[type="checkbox"]', function () {
            if ($('.check').is(':checked')) {
                $('.addSALES ').removeAttr('disabled');
            }
            else {
                $('.addSALES ').attr('disabled', true);
            }
        });
        $('#salesbutton').click(function () {
            $('.addSALES ').attr('disabled', true);
            $('#example-select-all').attr('checked', false);
        });

        $('a[data-toggle="modal"]').on('shown.bs.modal', function (e) {
            $($.fn.dataTable.tables(true)).DataTable()
               .columns.adjust();
        });
        $('#pogrid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "jQueryUI": true,
            "bProcessing": true,

            columnDefs: [{
                orderable: false,
                className: 'select-checkbox',
                targets: 1
            }],
            aoColumns: [
                    { sname: "id", bVisible: false },
                    { sname: "sr_no", bVisible: true },
                    { sname: "item_id", bVisible: false },
                    { sname: "item" },
                    { sname: "delivery_date", sWidth: "11%", bVisible: true },
                    { sname: "quantity", sWidth: "8%", sClass:"right" },
                    { sname: "uom_id", bVisible: false },
                    { sname: "uom", sWidth: "8%" },
                    { sname: "unit_price", sWidth: "8%", bVisible: false, sClass:"right"  },
                    { sname: "discount", bVisible: true, bVisible: false , sClass:"right"},
                    { sname: "eff_price", bVisible: true, sClass:"right" },
                    { sname: "purchase_value", sWidth: "11%",  sClass: "Right", sClass:"right" },
                    { sname: "tax_id", bVisible: false, sClass: "Right" },
                    { sname: "balance_quantity", sWidth: "11%", sClass: "Right", sClass:"right" },
                    { sname: "tax_name", bVisible: false, sClass: "Right" },
                    { sname: "storage_location_id", bVisible: false },
                    { sname: "storage_location", bVisible: false },
                    { sname: "po_detail_id", bVisible: false },
                    { sname: "user_description", sWidth: "11%", bVisible: false },
                    { sname: "grn_quantity", sWidth: "11%", bVisible: true },
                    { sname: "grnquantity", bVisible: false, sClass:"right" },
                    { sname: "hsn_id", bVisible: false},
                    { sname: "hsn_code", bVisible: true,sWidth:"25%" },
                    { sname: "Staggered_delivery_id", bVisible: false},
                    {
                        sname: "action", sWidth: "2%",
                        mRender: function (data, type, row) {
                            return '<input type="checkbox" data-index='+((row[1])-1)+' class="check" name="id[]" value="' + $('<div/>').text(data).html() + '" id=chk'+row[1]+'>';
                        }
                    }]
        });
        $(".add").on("click", function (event) {
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            var sr_no = t.fnGetData().length + 1;
            var item_id = $("#item_id").val();
            var item_code = $("#item_id :selected").text();
            var delevery_date = $("#dte").val();
            var qty = $("#quantity").val();
            var balanceQuantity = $('#balanceQuantity').val();
            var batch_managed = $("#batch_managed").val();
            var unit_id = $("#uom_id").val();
            var unit_name = $("#uom_id").find("option:selected").text();
            var unit_price = $("#unitprice").val();
            var discount = $("#discount").val();
            var effectiveprice = $("#effectiveprice").val();
            var salesvalue = $("#salesvalue").val();
            var taxid = $("#tax_id").val();
            var taxcode = $("#tax_id :selected").text();
            var storage_id = $('#storage_location_id').val();
            var storage_name = $('#storage_location_id :selected').text();
            var user_description = $("#user_description").val();
            var po_detail = $('#po_detail_id').val();
            var del_detail = $('#po_staggered_delivery_id').val();
            var hsn_id = $("#sac_hsn_id").val();
            var hsn = $("#sac_hsn_id :selected").text();
            if(hsn=='---Select---'){hsn=''}
            if (item_id == '') {
                swal("", "Please Select Item Name.", "error");
                return false;
            }
            if (delevery_date == '') {
                swal("", "Please Select Delivery Date.", "error");
                return false;
            }
            if (qty == '') {
                swal("", "Please Enter Quantity.", "error");
                return false;
            }
            if (parseFloat(qty) <= 0) {
                swal("", "Quantity should be greater than zero.", "error");
                return false;
            }
            if (unit_id == '') {
                swal("", "Please select Unit.", "error");
                return false;
            }
            if (unit_price == '') {
                swal("", "Please enter unit price.", "error");
                return false;
            }
            if (taxcode == '') {
                swal("", "Please select tax code.", "error");
                return false;
            }


            if (parseFloat(balanceQuantity) < parseFloat(qty)) {
                swal("", "Quantity cannot be greater than Balance Quantity .", "error");
                return false;
            }
            if (hsn_id=='') {
                swal("", "SAC/HSN Code is required .", "error");
                return false;
            }
            if (hsn_id=='0') {
                swal("", "SAC/HSN Code is required .", "error");
                return false;
            }
            if (discount == '') {
                discount = 0;
            }
            if ($("#srno").val() == "") {
                t.fnAddData(['', sr_no, item_id, item_code,hsn_id,hsn, user_description, storage_id, storage_name,
                    delevery_date, parseFloat(qty).toFixed(2), unit_id, unit_name, parseFloat(unit_price).toFixed(2), parseFloat(discount).toFixed(2), parseFloat(effectiveprice).toFixed(2),
                    parseFloat(salesvalue).toFixed(2), taxid, taxcode, po_detail,balanceQuantity,del_detail, ''
                ]);
                sr_no + 1;
            }
            else {
                var c = parseInt($("#srno").val());
                cc = c -1;
                //cc = parseInt(cc) - 1;
                t.fnUpdate(['', c, item_id, item_code,hsn_id,hsn, user_description, storage_id, storage_name,
                     delevery_date, parseFloat(qty).toFixed(2), unit_id, unit_name, parseFloat(unit_price).toFixed(2), parseFloat(discount).toFixed(2), parseFloat(effectiveprice).toFixed(2),
                    parseFloat(salesvalue).toFixed(2), taxid, taxcode, po_detail,balanceQuantity,del_detail, ''], cc)
            }

            clearmodel();
            getnetTotal();
            var rowCount = t.fnGetData().length;
            var str;
            var str1;
            var tot = 0;
            for (i = 0; i < rowCount; i++) {
                str1 = t.fnGetData(i)[17] + "~";
                str1 = str1 + t.fnGetData(i)[16] + "~";
                str1 = str1 + t.fnGetData(i)[16];
                if (i == 0) {
                    str = str1 + ","
                }
                else {
                    str = str + str1 + ",";
                }

                tot = tot + parseFloat(t.fnGetData(i)[16]);
            }
            GetTaxDetail(str.slice(0, -1), tot, $("#posting_date").val());
            return true;
        });
        function clearmodel() {
            $("#item_id").val('');
            $('#user_description').val('');
            $("#dte").val('');
            $("#quantity").val('');
            $("#uom_id").val('');
            $("#unitprice").val('');
            $("#discount").val('');
            $("#effectiveprice").val('');
            $("#salesvalue").val('');
            $("#assessablerate").val('');
            $("#assessablevalue").val('');
            $("#tax_id").val('');
            $("#assignment_id").val('');
            $("#srno").val('');
            $('#storage_location_id').val('');
            $('#bucket_id').val('');
            $('#batch').val('');
            $('#balanceQuantity').val('');
            $("#batch_managed").val('');
            $("#sled").val('');
            $("#sac_hsn_id").val(0);
        }
        function calculation() {
            var quantity = $("#quantity").val();
            var unitprice = $("#unitprice").val();
            var discount = $("#discount").val();
            var assessable = $("#assessablerate").val();
            // alert(discount);
            var effectiveprice = 0;
            if (quantity == "") {
                quantity = 0;
            }
            if (unitprice == "") {
                unitprice = 0;
            }
            if (discount == "") {
                effectiveprice = unitprice;
            }
            else {
                effectiveprice = unitprice - (unitprice * discount / 100);
            }
            $("#effectiveprice").val(effectiveprice);

            $("#salesvalue").val(effectiveprice * quantity);

        }

        $('#ContactGrid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            aoColumns: [
                    { sname: "a", bVisible: false },
                    { sname: "b", sWidth: "5%" },
                    { sname: "c", bVisible: false },
                    { sname: "d", },
                    { sname: "hsn_id", bVisible: false },
                    { sname: "hsn", },
                    { sname: "e", sWidth: "10%" },
                    { sname: "f", bVisible: false },
                    { sname: "g", bVisible: true },
                    { sname: "h", bVisible: true },
                    { sname: "i", sWidth: "8%", sClass:"right" },
                    { sname: "j", bVisible: false },
                    { sname: "k", },
                    { sname: "l", sWidth: "10%", sClass:"right", bVisible: false },
                    { sname: "m", bVisible: false, sClass:"right" },
                    { sname: "n",  sClass:"right" },
                    { sname: "o", sWidth: "8%", bVisible: true, sClass: "right" },
                    { sname: "r", bVisible: false },
                    { sname: "s", bVisible: true },
                    { sname: "t", bVisible: false },
                    { sname: "y", bVisible: false, sClass: "right"},
                    { sname: "z1", bVisible: false },
                    {
                        sname: "aa", sWidth: "8%",
                        bSortable: false,
                        mRender: function (data, type, full) {
                            return '<img class="edit" src="../images/writing_file.png" height="20px" width="25px" alt="Edit" /><img class="delete" src="../images/remove.png" height="20px" width="25px" alt="Delete" />';
                        }
                    }]

        });
        $('#ContactGrid').on('click', '.edit', function () {
            var t = $('#ContactGrid').DataTable();
            var id = $(this).closest('tr').index();
            $('#myModal').modal('show');
            $("#srno").val(t.fnGetData(id)[1]);
            $("#item_id").val(t.fnGetData(id)[2]).trigger("change");
            $("#sac_hsn_id").val(t.fnGetData(id)[4]);
            $('#user_description').val(t.fnGetData(id)[6]);
            var slo = t.fnGetData(id)[7];
            $('#storage_location_id').val(t.fnGetData(id)[7]);
            $('#dte').val(t.fnGetData(id)[9]);
            $('#quantity').val(t.fnGetData(id)[10]);
            $('#uom_id').val(t.fnGetData(id)[11]);
            $('#unitprice').val(t.fnGetData(id)[13]);
            $('#discount').val(t.fnGetData(id)[14]);
            $('#effectiveprice').val(t.fnGetData(id)[15]);
            $('#salesvalue').val(t.fnGetData(id)[16]);
            $('#tax_id').val(t.fnGetData(id)[17]);
            $('#po_detail_id').val(t.fnGetData(id)[19]);
            $('#balanceQuantity').val(t.fnGetData(id)[20]);
            $('#po_staggered_delivery_id').val(t.fnGetData(id)[21]);
            Get_hsn_saclistforedit(t.fnGetData(id)[2]);
            setHSN(t.fnGetData(id)[2]);
        });

        $('#ContactGrid').on('click', '.delete', function () {
            var t = $('#ContactGrid').DataTable();
            var id = $(this).parent('td').parent('tr').index();
            var deleteids = t.fnGetData(id)[1];
            swal({
                title: "Are you sure?",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: true
            },
         function (isConfirm) {
             if (isConfirm) {
                 $("#deleteids").val(deleteids + "~");
                 t.fnDeleteRow(id);
                 getnetTotal();
                 var rowCount = t.fnGetData().length;
                 var str = "";
                 var str1 = "";
                 var tot = 0;
                 for (i = 0; i < rowCount; i++) {
                     str1 = t.fnGetData(i)[19] + "~";
                     str1 = str1 + t.fnGetData(i)[18] + "~";
                     str1 = str1 + t.fnGetData(i)[16];
                     if (i == 0) {
                         str = str1 + ","
                     }
                     else {
                         str = str + str1 + ",";
                     }
                     tot = tot + parseFloat(t.fnGetData(i)[16]);
                 }
                 GetTaxDetail(str.slice(0, -1), tot, $("#posting_date").val());
                 var len = t.fnGetData().length;
                 var i = 1;
                 var row = 0;
                 if (len > 0) {
                     $('#ContactGrid tbody tr').each(function () {
                         t.fnUpdate(i, row, 1);
                         i++;
                         row++;
                     });
                 }
             }
         });
        });
        function getnetTotal() {
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            var total = 0;
            for (var i = 0; i < rowCount; i++) {

                total = total + parseFloat(t.fnGetData(i)[16]);
            }
            $("#net_value").val(parseFloat(total).toFixed(2));
            $("#gross_value").val(parseFloat(total).toFixed(2));
        }
        $("#purchaseorder").on("click", function (event) {
            var t = $('#pogrid').DataTable();
            t.fnClearTable();
            $("#po_number").val('').trigger("change");
            $("#po_id1").val("").trigger("change");
            $("#vendor_id1").val("").trigger("change");
            $('#myModal1').modal('show');
            $('#example-select-all').attr('checked', false);
        })
        function TabletoJeson() {
            var flag=0;
            var testimonials = document.querySelectorAll('.validinput');
            Array.prototype.forEach.call(testimonials, function(elements, index) {
                if($("#" + elements.id).val()=="")
                {
                    flag=1;
                    return false;
                }
            });
            if(flag==1)
            {
                sweetAlert("", "Some mandatory fields left blank!", "error");
                return false;
            }
            else
            {
                var obj = {};
                obj.srn_id=-1;
                obj.document_no="";
                obj.vendor_id=$('#vendor_id').val();
                obj.net_value=$('#net_value').val();
                obj.category_id=$('#category_id').val();
                obj.net_currency_id=$('#net_currency_id').val();
                obj.gross_value=$('#gross_value').val();
                obj.gross_currency_id=$('#gross_currency_id').val();
                obj.posting_date=$('#posting_date').val();
                obj.business_unit_id=$('#business_unit_id').val();
                obj.plant_id=$('#plant_id').val();
                obj.freight_terms_id=$('#freight_terms_id').val();
                obj.delivery_date=$('#delivery_date').val();
                obj.vendor_doc_no=$('#vendor_doc_no').val();
                obj.vendor_doc_date=$('#vendor_doc_date').val();
                obj.gate_entry_number=$('#gate_entry_number').val();
                obj.gate_entry_date=$('#gate_entry_date').val();
                obj.billing_address=$('#billing_address').val();
                obj.billing_city=$('#billing_city').val();
                obj.billing_state_id=$('#billing_state_id').val();
                obj.billing_pin_code=$('#billing_pin_code').val();
                obj.email_id=$('#email_id').val();
                obj.payment_terms_id=$('#payment_terms_id').val();
                obj.payment_cycle_id=$('#payment_cycle_id').val();
                obj.internal_remarks=$('#internal_remarks').val();
                obj.remarks_on_doc=$('#remarks_on_doc').val();
                obj.pan_no=$('#pan_no').val();
                obj.ecc_no=$('#ecc_no').val();
                obj.vat_tin_no=$('#vat_tin_no').val();
                obj.cst_tin_no=$('#cst_tin_no').val();
                obj.service_tax_no=$('#service_tax_no').val();
                obj.gst_no=$('#gst_no').val();
                obj.place_of_supply_id=$('#place_of_supply_id').val();
                obj.gst_vendor_type_id=$('#gst_vendor_type_id').val();
                obj.gst_in=$('#gst_in').val();
                obj.po_id=$('#po_id').val();
                var detail = [];
                var t = $('#ContactGrid').DataTable()
                var rowCount = t.fnGetData().length;
                $("#PoHidden").empty();
                for (i = 0; i < rowCount; i++) 
                {
                    detail.push({
                        srn_detail_id: -1,
                        delivery_date: t.fnGetData(i)[9],
                        storage_location_id: t.fnGetData(i)[7],
                        po_detail_id: t.fnGetData(i)[19],
                        item_id:t.fnGetData(i)[2],
                        quantity:t.fnGetData(i)[10],
                        uom_id:t.fnGetData(i)[11],
                        unit_price:t.fnGetData(i)[13],
                        discount:t.fnGetData(i)[14],
                        eff_unit_price:t.fnGetData(i)[15],
                        purchase_value:t.fnGetData(i)[16],
                        tax_id:t.fnGetData(i)[17],
                        user_description:t.fnGetData(i)[6],
                        hsn_id:t.fnGetData(i)[4],
                        staggerred_delivery_detail_id:t.fnGetData(i)[21],
                    });
                }
                $.ajax({
                    url: '@Url.Action("Add", "srn")',
                    method: "Post",                      
                    async: false,
                    data: { vm: obj, detail: detail },
                    success: function(data) 
                    {
                        if (data.includes("Saved")) {                          
                            swal({
                                title: "",
                                text: data,
                                type: "success",
                                showCancelButton: false,
                                confirmButtonClass: "btn-success",
                                confirmButtonText: "OK",
                                cancelButtonText: "No, cancel plx!",
                                closeOnConfirm: false,
                                closeOnCancel: false
                            },
                            function(isConfirm) {
                                if (isConfirm) {
                                    location.href = '@Url.Action("Index", "srn")';
                                    return true;
                                } else {
                                    swal("Cancelled", "Your imaginary file is safe :)", "error");
                                }
                            });     
                        } else {
                            swal("Error !", data, "error");
                        }

                    }
                });
                if(flag==2)
                {
                    location.href = '@Url.Action("Index", "srn")';
                    return true;
                }
            }

        }
       

        // $('#storage_location_id').empty();
        // $('#storage_location_id').append('<option>--Select--</option>');
        function GetStorageLocation(id) {
            if (id == "") {
                id = 0;
            }
            $.ajax({
                url: "@Url.Action("GetStorageLocation", "Generic")",
                type: "GET",
                dataType: "JSON",
                data: { id: id },
                success: function (storage) {
                    $("#storage_location_id").html(""); // clear before appending new list
                    $("#storage_location_id").append($('<option></option>').val('').html("---Select---"));
                    $.each(storage, function (i, cycle) {
                        $("#storage_location_id").append(
                        $('<option></option>').val(cycle.storage_location_id).html(cycle.storage_location_name));
                    });
                }
            });
        }
        function GetPOList(id) {
            var s = $('#pogrid').DataTable()
            s.fnClearTable();
            $("#po_id1").val('').trigger('change');
            if (id == "") {
                id = 0;
            }
            $.ajax({
                url: "@Url.Action("GetPOByVendor", "Generic")",
                type: "GET",
                dataType: "JSON",
                data: {id:2, vendor_id: id },
                success: function (po) {
                    $("#po_id1").html(""); // clear before appending new list
                    $("#po_id1").append($('<option></option>').val('').html(""));
                    $.each(po, function (i, cycle) {
                        $("#po_id1").append(
                        $('<option></option>').val(cycle.po_id).html(cycle.po_no));
                    });
                }
            });
        }
        var checkedarray = [];
        $(".addSALES").on("click", function (event) {
            $("#po_id").html(""); // clear before appending new list
            $("#po_id").append($('<option></option>').val(0).html("---Select---"));
            $("#po_id").append(
                       $('<option></option>').val($("#po_id1").val()).html($("#po_id1 option:selected").text()));
            $("#po_id").val($("#po_id1").val());
            var tt = $("#po_id1").val();
            var s = $('#pogrid').DataTable()
            var t = $('#ContactGrid').DataTable();
            t.fnClearTable();
            var plant;
            $.ajax({
                type: 'GET',
                url: "@Url.Action("GetPOForGRN", "GRN")",
                data: { id: tt },
                success: function (soid) {
                console.log(soid);
                $("#business_unit_id").val(soid.business_unit_id).trigger("change");
                $("#freight_terms_id").val(soid.freight_terms_id);
                $("#plant_id").val(soid.plant_id).trigger("change");
                $('#place_of_supply_id').val(soid.place_of_supply_id);
                $("#vendor_id").val(soid.vendor_id);
                $('#gst_vendor_type_id').val(soid.gst_vendor_type_id);
                var d3 = soid.vendor_quotation_date;
                var month = new Date(d3).getMonth() + 1;
                if (month < 10) {
                    month = '0' + month;
                }
                var date =  new Date(d3).getDate();
                if (date < 10) {
                    date = '0' + date;
                }
                var d3 = new Date(d3).getFullYear() + "-" + month + "-" + date;
                if(soid.vendor_quotation_date!=null)
                {
                    $("#vendor_doc_date").val('');
                }
                else
                {
                    $("#vendor_doc_date").val('');
                }
                $("#billing_address").val(soid.billing_address);
                $("#billing_city").val(soid.billing_city);
                $("#country_id").val(soid.country_id);
                $("#billing_state_id").val(soid.billing_state_id);
                $("#email_id").val(soid.email_id);
                $("#billing_pin_code").val(soid.billing_pin_code);
                $("#gross_currency_id").val(soid.gross_value_currency_id);
                $("#net_currency_id").val(soid.net_value_currency_id);
                $("#payment_cycle_type_id").val(soid.payment_cycle_type_id);
                $("#payment_cycle_id").val(soid.payment_cycle_id);
                $("#payment_terms_id").val(soid.payment_terms_id).trigger("change");
                $("#pan_no").val(soid.pan_no);
                $("#gst_no").val(soid.gst_no);
                $("#vat_tin_no").val(soid.vat_tin_no);
                $("#ecc_no").val(soid.ecc_no);
                $("#service_tax_no").val(soid.service_tax_no);
                $("#cst_tin_no").val(soid.cst_tin_no);
                $("#form_id").val(soid.FORM_ID);
                $("#doc_currency_id").val(soid.doc_currency_id);
                $("#internal_remarks").val(soid.internal_remarks);
                $("#remarks_on_doc").val(soid.remarks_on_document);
                $("#gst_in").val(soid.gst_no);
                if(soid.delivery_date!=null)
                {
                    var d1 = soid.delivery_date;
                    var month = new Date(d1).getMonth() + 1;
                    if (month < 10) {
                        month = '0' + month;
                    }
                    var date = new Date(d1).getDate();
                    if (date < 10) {
                        date = '0' + date;
                    }
                    var d1 = new Date(d1).getFullYear() + "-" + month + "-" + date;
                    $("#delivery_date").val(d1);
                }
                else
                {
                    $("#delivery_date").val('');
                }

            },
            error: function (emp) {
            }
            });

        var checkGreater = 0;
        var checkEmpty = 0;
        var checkNegative = 0;
        var checkFlagInc = 0;
        var FlagBatch = 0;
        var DateClass = 0;
        var bucket_id = 0;
        var bucket = "";
        var isFalse = false;

        for (var k = 0; k <= checkedarray.length-1; k++) {
            var i = checkedarray[k];
            var greater = s.fnGetData(i)[13];
            var txt = s.fnGetData(i)[20];
            var hsn = s.fnGetData(i)[21];
            var lowertxt = parseFloat(txt);
            if (lowertxt > greater) {
                swal("", "SRN Quantity cannot be greater than Balance Quantity!", "error");
                return isFalse;
            }
            if (txt == '') {
                swal("", "SRN Quantity cannot be left blank!", "error");
                return isFalse;
            }
            if ((txt.indexOf('-')) != -1) {
                swal("", "SRN Quantity cannot be negative!", "error");
                return isFalse;
            }
            if (parseFloat(txt) <= 0) {
                swal("", "SRN Quantity should be greater than zero!", "error");
                return isFalse;
            }
            if (hsn == "") {
                swal("", "SAC/HSN Code is required!", "error");
                return isFalse;
            }
            if (hsn == "0") {
                swal("", "SAC/HSN Code is required!", "error");
                return isFalse;
            }
        }
        var serial_no = 1;
        for (var k = 0; k <= checkedarray.length-1; k++) {
            var i = checkedarray[k];
            var d1 = s.fnGetData(i)[4];
            var month = new Date(d1).getMonth() + 1;
            if (month < 10) {
                month = '0' + month;
            }
            var date = new Date(d1).getDate();
            if (date < 10) {
                date = '0' + date;
            }
            var d1 = new Date(d1).getFullYear() + "-" + month + "-" + date;
            var item_id = s.fnGetData(i)[2];
            var item_name = s.fnGetData(i)[3];
            var description = s.fnGetData(i)[18];
            var sloc_id = s.fnGetData(i)[15];
            var sloc_name = s.fnGetData(i)[16];
            var delivery_date = d1;
            var quantity = parseFloat(s.fnGetData(i)[20]).toFixed(2);
            var uom_id = s.fnGetData(i)[6];
            var uom_name = s.fnGetData(i)[7];
            var unit_price = parseFloat(s.fnGetData(i)[8]).toFixed(2);
            var discount = parseFloat(s.fnGetData(i)[9]).toFixed(2);
            var eff_price = parseFloat(s.fnGetData(i)[10]).toFixed(2);
            var purchase_value = parseFloat((s.fnGetData(i)[20]) * s.fnGetData(i)[10]).toFixed(2);
            var tax_id = s.fnGetData(i)[12];
            var tax_code = s.fnGetData(i)[14];
            var po_detail_id = s.fnGetData(i)[17];
            var balance_quantity = parseFloat(s.fnGetData(i)[13]).toFixed(2);
            var hsn_id = $('#hsn_id'+serial_no).val();
            var hsn = $('#hsn_id'+serial_no+' :selected').text();
            var po_staggered_delivery_id = s.fnGetData(i)[23];
            try {
                t.fnAddData(['', serial_no, item_id, item_name,hsn_id,hsn, description, sloc_id, sloc_name, delivery_date, quantity, uom_id, uom_name
                    , unit_price, discount, eff_price, purchase_value, tax_id, tax_code, po_detail_id,balance_quantity,po_staggered_delivery_id,'',
                ]
                );
                serial_no = serial_no +1;
            }
            catch(err){
                checkedarray.length = 0;
                alert(err.message);
            }
            isFalse = true;
        }


        if(isFalse==true){
            getnetTotal();
            var rowCount = t.fnGetData().length;
            var str="";
            var str1="";
            var tot = 0;
            try{
                for (j = 0; j < rowCount; j++)
                {
                    str1 = t.fnGetData(j)[17] + "~";
                    str1 = str1 + t.fnGetData(j)[16] + "~";
                    str1 = str1 + t.fnGetData(j)[16];
                    if (i == 0) {
                        str = str1 + ","
                    }
                    else {
                        str = str + str1 + ",";
                    }

                    tot = tot + parseFloat(t.fnGetData(j)[16]);
                }
            }
            catch(err){
                checkedarray.length = 0;
            }
            GetTaxDetail(str.slice(0, -1), tot, $("#posting_date").val());
            $("#po_id1").val("").trigger("change");
            $("#vendor_id1").val("").trigger("change");
            $('#myModal1').modal('hide');
            checkedarray.length = 0;
        }
        });
        function changeDate()
        {
            var t = $('#ContactGrid').DataTable();
            var rowCount = t.fnGetData().length;
            var str="";
            var str1="";
            var tot = 0;
            for (j = 0; j < rowCount; j++)
            {
                str1 = t.fnGetData(j)[19] + "~";
                str1 = str1 + t.fnGetData(j)[18] + "~";
                str1 = str1 + t.fnGetData(j)[16];
                if (i == 0) {
                    str = str1 + ","
                }
                else {
                    str = str + str1 + ",";
                }

                tot = tot + parseFloat(t.fnGetData(j)[16]);
            }
            GetTaxDetail(str.slice(0, -1), tot, $("#posting_date").val());
        }
        function GetTaxDetail(taxdetail, amount, dt) {
            $.ajax({
                url: "@Url.Action("GetTaxCalculation", "Generic")",
                type: "GET",
                dataType: "JSON",
                async: false,
                data: {entity:"calculatetax", st: taxdetail, amt: amount, dt: dt, tds_code_id: 0 },
                success: function (Payment_Cycle) {
                    $('#TaxGrid tbody').html('');
                    $.each(Payment_Cycle, function (i, cycle) {
                        $('#TaxGrid').append('<tbody>');
                        $('#TaxGrid').append('<tr><td>' + cycle.tax_name + '</td><td align="right">' + parseFloat(cycle.tax_value).toFixed(2) + '</td></tr>')
                        $('#TaxGrid').append('</tbody>');
                        $("#gross_value").val(parseFloat(cycle.tax_value).toFixed(2));

                    });
                }
            });
        }



        $('#example-select-all').on('click', function () {
            checkedarray.length = 0;
            var t = $('#pogrid').DataTable();
            var trlen = t.fnGetData().length;
            if ($(this).is(':checked')) {
                if (trlen > 0) {
                    for (var j = 0; j <= trlen - 1; j++) {
                        checkedarray.push(j);
                    }
                }
            }
            else
            {
                checkedarray.length=0;
            }
        });

        $(document).on('click', '.check', function () {
            //var index = $(this).parent('td').parent('tr').index();
            var index = $(this).attr('data-index');
            if ($(this).is(':checked')) {
                checkedarray.push(index);
            }
            else {
                var checkedIndex = checkedarray.indexOf(parseInt(index));
                checkedarray.splice(checkedIndex, 1);
            }
        });

        $(document).on('change', '.grn_quantity', function () {
            var index = $(this).attr('data-index');
            var _grn_quantity = $(this).val();
            if(_grn_quantity!=''){
                _grn_quantity= parseFloat(_grn_quantity).toFixed(2);
            }
            var t = $('#pogrid').DataTable();
            t.fnUpdate(_grn_quantity, parseInt(index), 20);
        });


        $('#pogrid').on('change', '.hsn', function () {
            var index = $(this).attr('data-index');
            var _hsn = $(this).val();
            var t = $('#pogrid').DataTable();
            t.fnUpdate(_hsn, parseInt(index), 21);
        });

        function Get_hsn_saclist(){
            var item_type_id = $('#item_id').val();
            if(item_type_id==''){item_type_id=0}
            if(item_type_id!=''){
                try{
                    $.ajax({
                        url:'@Url.Action("Get_hsn_saclist", "Generic")',
                        data:{id:item_type_id},
                        method:'get',
                        async:false,
                        success:function(hsn){
                            $('#sac_hsn_id').empty();
                            $('#sac_hsn_id').append('<option value='+0+'>--Select--</option>');
                            $.each(hsn,function(k,v){
                                $('#sac_hsn_id').append('<option value='+v.id+'>'+v.code+'</option>');
                            });
                        }
                    });
                }
                catch(msg){msg.message}
            }
        };
        function Get_hsn_saclistforedit(item_id){
            if(item_id==''){item_id=0}
            if(item_id!=''){
                try{
                    $.ajax({
                        url:'@Url.Action("Get_hsn_saclist", "Generic")',
                        data:{id:item_id},
                        method:'get',
                        async:false,
                        success:function(hsn){
                            $('#sac_hsn_id').empty();
                            $('#sac_hsn_id').append('<option value='+0+'>--Select--</option>');
                            $.each(hsn,function(k,v){
                                $('#sac_hsn_id').append('<option value='+v.id+'>'+v.code+'</option>');
                            });
                        }
                    });
                }
                catch(msg){msg.message}
            }
        };
        function setHSN(item_id){
            try{
                if (item_id != '')
                {
                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action("Gethsnforgrn", "Generic")',
                        data: { id: item_id },
                        async:false,
                        success: function (list) {
                            if(list.sac_id!=0){
                                $('#sac_hsn_id').val(list.sac_id);
                            }
                        },
                        error: function (xhr) {
                            console.log(xhr.message);
                        }
                    });
                }
            }
            catch(ex){console.log(ex.message)}
        }
        const fewSeconds = 3
        document.querySelector('#create1').addEventListener('click', (e) => {
            e.target.disabled = true
            setTimeout(() => {
                e.target.disabled = false
            }, fewSeconds * 1000)
        })
    </script>
}