
@using Sciffer.Erp.Domain.ViewModel

@{
    ViewBag.Title = "Index";
}

<br /><br /><br />
<div>
    @(Html.EJ().Grid<ref_employee_balanceVM>("Searching")
        .Datasource(ds => { ds.Json((IEnumerable<object>)ViewBag.DataSource).RemoveURL(Url.Action("Delete", "EmployeeBalance")).Adaptor(AdaptorType.RemoteSaveAdaptor); })
        .EditSettings(edit => { edit.AllowAdding().AllowDeleting().AllowEditing().EditMode(EditMode.InlineFormTemplate).ShowDeleteConfirmDialog(true); })
        .ToolbarSettings(toolBar => toolBar.ShowToolbar().ToolbarItems(items =>
        {
            items.AddTool(ToolBarItems.Add);
            items.AddTool(ToolBarItems.Edit);
            items.AddTool(ToolBarItems.ExcelExport);
            items.AddTool(ToolBarItems.PrintGrid);
        }))
        .Mappers(map => map.ExportToExcelAction(Url.Action("ExportToExcel", "EmployeeBalance")))
        .AllowSorting()
       .AllowPaging().PageSettings(a => a.PageSize(20))
        .IsResponsive()
        .AllowFiltering()
        .ShowColumnChooser()
        .AllowReordering()
         .AllowScrolling()
        .ScrollSettings(col => { col.Width("100%"); })
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .Columns(col =>
        {
            col.Field("employee_balance_id").Width("15%").HeaderText("ID").IsPrimaryKey(true).Visible(false).Add();
            col.Field("category_name").Width("15%").HeaderText("Category").Add();
            col.Field("doc_number").Width("15%").HeaderText("Document Number").Add();
            col.Field("posting_date").Width("15%").HeaderText("Posting Date").Format("{0:dd/MM/yyyy}").Add();
            col.Field("offset_account_id").Width("15%").HeaderText("Offset Account Id").Visible(false).Add();
            col.Field("gl_ledger_code").Width("15%").HeaderText("Offset Account Code").Add();
            col.Field("gl_ledger_name").Width("15%").HeaderText("Offset Account Name").Add();
            col.Field("category_id").Width("15%").HeaderText("Category ID").Visible(false).Add();
            col.Field("header_remarks").Width("15%").HeaderText("Remarks").Add();
        }).ClientSideEvents(eve =>
        {
            eve.ActionBegin("actionBegin");
            eve.RightClick("rightClick");
        })
    )
</div>
<style>
    .e-editedrow {
        display: none;
    }

    .e-editcell {
        display: none;
    }
</style>

<script type="text/javascript">

    function actionBegin(args) {
        if (args.requestType == "beginedit")
        {
            location.href = '@Url.Action("Details", "EmployeeBalance")?id=' + args.rowData.employee_balance_id;           
        }
        if (args.requestType == "add") {
            location.href = '@Url.Action("Create", "EmployeeBalance")';
        }
    }
    function rightClick(args) {
        location.href = '@Url.Action("Details", "EmployeeBalance")?id=' + args.data.employee_balance_id;
    }

</script>
