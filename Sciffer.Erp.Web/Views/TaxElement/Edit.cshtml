@model Sciffer.Erp.Domain.ViewModel.tax_elementVM
@using Newtonsoft.Json
@{
    ViewBag.Title = "Create";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="margin-top:10px;">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(a => a.tax_element_id)
        <div class="form-group">
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.tax_element_code, new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.tax_element_code, new { htmlAttributes = new { @class = "form-control removedisabled validinput num", @required = true, @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.tax_element_code, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.tax_element_description, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.tax_element_description, new { htmlAttributes = new { @class = "form-control removedisabled validinput num1", @required = true, @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.tax_element_description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.purchase_gl, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("purchase_gl", (System.Web.Mvc.SelectList)ViewBag.sales_gllist, "---Select---", new { @class = "form-control removedisabled validinput", @required = true, @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.purchase_gl, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.sales_gl, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("sales_gl", (System.Web.Mvc.SelectList)ViewBag.sales_gllist, "---Select---", new { @class = "form-control removedisabled validinput", @required = true, @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.sales_gl, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.no_setoff_gl, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("no_setoff_gl", (System.Web.Mvc.SelectList)ViewBag.no_setoff_gllist, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })

                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.on_hold_gl, "On Hold GL", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("on_hold_gl", (System.Web.Mvc.SelectList)ViewBag.no_setoff_gllist, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.tax_type_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("tax_type_id", (System.Web.Mvc.SelectList)ViewBag.tax_type_list, "---Select---", new { @class = "form-control validinput", @required = true })
                            @Html.ValidationMessageFor(model => model.tax_type_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.is_blocked, "Blocked", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.is_blocked, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.is_blocked, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <input type="hidden" id="productdetail" name="productdetail" />
                <input type="hidden" id="deleteids" name="deleteids" />
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.is_rcm, "RCM", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.is_rcm, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.is_rcm, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">

                </div>
            </div>
            <div class="row" id="rcmdiv" hidden>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.rcm_asset_gl, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("rcm_asset_gl", (System.Web.Mvc.SelectList)ViewBag.no_setoff_gllist, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })

                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.rcm_liability_gl, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("rcm_liability_gl", (System.Web.Mvc.SelectList)ViewBag.no_setoff_gllist, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                        </div>
                    </div>
                </div>
            </div>
        </div>



        <div class="panel panel-body" role="tabpanel" data-example-id="togglable-tabs">
            <ul id="myTab" class="nav nav-tabs bar_tabs" role="tablist">
                <li class="active">
                    <a data-toggle="tab" href="#sectionA">Tax Element Details</a>
                </li>
            </ul>
            <div class="tab-content">
                <div id="sectionA" class="tab-pane fade  in active" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">

                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    <button type="button" onclick="Makedisabled();" class="btn btn-primary" id="open_modal" style="float:right" data-toggle="modal" data-target="#myModal"><span class="glyphicon glyphicon-plus"></span>Add Element</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="table-responsive">
                            <table class="table table-responsive table-bordered table-striped" id="ContactGrid">
                                <thead>
                                    <tr>
                                        <th hidden> <label>ID</label></th>
                                        <th><label>Sr. No.</label></th>
                                        <th><label>Effective Date</label></th>
                                        <th><label>Rate %</label></th>
                                        <th><label>No Setoff %</label></th>
                                        <th><label>On Hold %</label></th>
                                        <th hidden><label>Action</label></th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <input type="submit" value="Update" id="create" data-id="@Model.tax_element_id" data-controller="TaxElement" class="btn btn-success" onclick="TabletoJeson();" style="float:right" />
            </div>
        </div>

    </div>


}

<!-- Modal -->
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Tax Element Details</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Effective Date <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <input id="effective_from" type="date" class="form-control col-md-7 col-xs-12" name="effective_from" />
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Rate(%) <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" name="rate" class="form-control col-md-7 col-xs-12" id="rate">
                        </div>
                    </div>
                </div>
                <br />

                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            No Setoff(%) <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" name="no_setoff" class="form-control col-md-7 col-xs-12" id="no_setoff">
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            On Hold(%) <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" name="on_hold" class="form-control col-md-7 col-xs-12" id="on_hold">
                        </div>
                    </div>
                </div>
                <br />
                <div class="modal-footer">
                    <input type="hidden" id="srno" />
                    <input type="hidden" id="taxelementdetail" />
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="clearmodel();">Close</button>
                    <button type="button" class="add btn btn-primary">Add </button>
                </div>
            </div>

        </div>
    </div>
</div>
<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
</div>
<script src="~/Scripts/requirevalidation.js"></script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        function codeAddress() {
            $("#purchase_gl").select2({
                placeholder: "Select Purchse GL",
                allowClear: true
            });
            $("#on_hold_gl").select2({
                placeholder: "Select On Hold GL",
                allowClear: true
            });
            $("#no_setoff_gl").select2({
                placeholder: "Select On Hold GL",
                allowClear: true
            });
            $("#sales_gl").select2({
                placeholder: "Select Sales GL",
                allowClear: true
            });
            $("#rcm_asset_gl").select2({
                placeholder: "RCM Asset GL",
                allowClear: true
            });
            $("#rcm_liability_gl").select2({
                placeholder: "RCM Liability GL",
                allowClear: true
            });
            document.getElementById('tax_element_code').setAttribute('disabled', 'disabled');
            document.getElementById('tax_element_description').setAttribute('disabled', 'disabled');           
            var t = $('#ContactGrid').DataTable();
            var sr_no = t.fnGetData().length+1;
            var pl_detail = @Html.Raw(JsonConvert.SerializeObject(this.Model));
            console.log(pl_detail);
            if(pl_detail.is_rcm==true)
            {
                $("#rcmdiv").show();               
            }
            $.each(pl_detail.ref_tax_element_detail, function(key, value) {
                var input = value.effective_from;
                var result = input.substring(0, 10);
                var gl_name="";
                var hold_gl="";
                if(value.ref_general_ledger==null)
                {
                    gl_name="";
                }
                else
                {
                    gl_name=value.ref_general_ledger.gl_ledger_code+"-"+value.ref_general_ledger.gl_ledger_name;
                }
                if(value.ref_general_ledger1==null)
                {
                    hold_gl="";
                }
                else
                {
                    hold_gl=value.ref_general_ledger1.gl_ledger_code+"-"+value.ref_general_ledger1.gl_ledger_name;
                }
                t.fnAddData([value.tax_element_detail_id, sr_no, result, value.rate, value.no_setoff, value.on_hold, '']);
                sr_no++;
            });
        }
        window.onload = codeAddress;

        $('#is_blocked').checkboxpicker();
        $('#is_rcm').checkboxpicker();
        $('#open_modal').click(function () {
            clearmodel();
        });

        $(".add").on("click", function (event) {
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            var sr_no = t.fnGetData().length + 1;
            var cc = parseInt(arguments[0]) - 1;
            var eff_from=  $("#effective_from").val();
            var rate = $("#rate").val();
            var no_setoff = $("#no_setoff").val();
            var no_setoff_gl = $("#no_setoff_gl :selected").text();
            var on_hold = $("#on_hold").val();
            var on_hold_gl = $("#on_hold_gl :selected").text();
            var no_setoff_gl_id = $("#no_setoff_gl").val();
            var on_hold_gl_id = $("#on_hold_gl").val();
            var tax_element_detail_id=$("#taxelementdetail").val();
            if (no_setoff == "" || no_setoff == 0) {
                no_setoff=0
                no_setoff_gl = "";
                no_setoff_gl_id="";
            }
            if (on_hold == "" || on_hold == 0) {
                on_hold = 0;
                on_hold_gl = "";
                on_hold_gl_id="";
            }
            if (eff_from == '') {
                swal("", "Please enter effective date.", "error");
                return false;
            }

            if (rate == '') {
                swal("", "Please Enter Rate.", "error");
                return false;
            }
            if (rate>100) {
                swal("", "Rate cannot be greater than 100%.", "error");
                return false;
            }
            if (!$('#no_setoff').prop("disabled")) {
                if ($('#no_setoff').val() == '') {
                    swal("", "Please enter No Setoff %!.", "error");
                    return false;
                }
            }
            if (no_setoff>100) {
                swal("", "No Setoff % cannot be greater than 100.", "error");
                return false;
            }
            if (!$('#on_hold').prop("disabled")) {
                if ($('#on_hold').val() == '') {
                    swal("", "Please enter On Hold %!.", "error");
                    return false;
                }
            }

            if (on_hold > 100) {
                swal("", "On Hold % cannot be greater than 100.", "error");
                return false;
            }

            if ($("#srno").val() == 0) {
                t.fnAddData([tax_element_detail_id, sr_no, eff_from, rate, no_setoff,  on_hold, ''
                ]);
                sr_no + 1;
            }
            else {
                var cc = $("#srno").val();
                cc = parseInt(cc) - 1;
                t.fnUpdate([tax_element_detail_id, cc + 1, eff_from, rate, no_setoff, on_hold, ''], cc)
            }

            clearmodel();
            return true;
        });
        function clearmodel() {
            $("#effective_from").val('');
            $("#effective_to").val('')
            $("#rate").val('');
            $("#no_setoff").val('');
            $("#srno").val('');
            $("#on_hold").val('');
            $("#taxelementdetail").val('');
        }

        $('#ContactGrid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            aoColumns: [
                     { sname: "a", bVisible: false },
                     { sname: "b", },
                     { sname: "c", },
                     { sname: "d",},
                     { sname: "e", },
                     { sname: "f", },
                     {
                         sname: "g", sWidth: "8%",
                         bSortable: false,
                         bVisible: false,
                         mRender: function (data, type, full) {
                             return '<img class="edit" src="../images/writing_file.png" height="20px" width="25px" alt="Edit" onclick="editRow(' + full[1] + ');" /><img class="delete" src="../images/remove.png" height="20px" width="25px" alt="Delete" onclick="deleteRow(' + full[1] + ');" />';
                         }
                     }]

        });

        function Makedisabled()
        {
            if($("#no_setoff_gl").val()=="")
            {
                $('#no_setoff').attr('disabled', true);
            }
            else {
                $('#no_setoff').attr('disabled', false);
            }

            if($("#on_hold_gl").val()=="")
            {
                $('#on_hold').attr('disabled', true);
            }
            else {
                $('#on_hold').attr('disabled', false);
            }

        }
        $('#ContactGrid').on('click', '.edit', function () {
            var t = $('#ContactGrid').DataTable();
            var id = $(this).parent('td').parent('tr').index();
            $('#myModal').modal('show');
            Makedisabled();
            var dm = t.fnGetData(id)[1];
            $("#taxelementdetail").val(t.fnGetData(id)[0]);
            $("#srno").val(t.fnGetData(id)[1]);
            $("#effective_from").val(t.fnGetData(id)[2]);
            $('#rate').val(t.fnGetData(id)[3]);
            $('#no_setoff').val(t.fnGetData(id)[4]);
            var name = t.fnGetData(id)[6];
            $("#on_hold").val(t.fnGetData(id)[5]);

        });

        $('#ContactGrid').on('click', '.delete', function () {
            var t = $('#ContactGrid').DataTable();
            var id = $(this).parent('td').parent('tr').index();
            var deleteids = t.fnGetData(id)[0];
            var del = $("#deleteids").val();
            swal({
                title: "Are you sure?",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: true
            },
     function (isConfirm) {
         if (isConfirm) {
             if(del!=''){
                     $("#deleteids").val(del+""+deleteids + "~");
             }
             else{
                 $("#deleteids").val(deleteids + "~");
             }

             t.fnDeleteRow(id);
             var len = t.fnGetData().length;
             var i =1;
             var row = 0;
             if(len>0){
                 $('#ContactGrid tbody tr').each(function(){
                     t.fnUpdate(i,row,1);
                     i++;
                     row++;
                 });
             }
         }
     });
        });
        function TabletoJeson() {
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            var str;
            var str1;
            for (i = 0; i < rowCount; i++) {
                str1 = t.fnGetData(i)[0] + ",";
                str1 = str1 + t.fnGetData(i)[1] + ",";
                str1 = str1 + t.fnGetData(i)[2] + ",";
                str1 = str1 + t.fnGetData(i)[3] + ",";
                str1 = str1 + t.fnGetData(i)[4] + ",";
                str1 = str1 + t.fnGetData(i)[5] + ",";
                if (i == 0) {
                    str = str1 + "~"
                }
                else {
                    str = str + str1 + "~";
                }
            }


            document.getElementsByName("productdetail")[0].value = str;
        }

    </script>
}