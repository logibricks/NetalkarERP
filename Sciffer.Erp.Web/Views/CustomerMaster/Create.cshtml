    @model Sciffer.Erp.Domain.ViewModel.REF_CUSTOMER_VM
@using Sciffer.Erp.Domain.Model;
@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm("Create", "CustomerMaster", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="margin-top:10px;">
        <div>@Html.ValidationSummary(true, "", new { @class = "text-danger" })</div>
        <div id="customer_detail" hidden></div>
        <div class="form-group">
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CUSTOMER_CATEGORY_ID, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("CUSTOMER_CATEGORY_ID", (System.Web.Mvc.SelectList)ViewBag.categorylist, "---Select---", new { @class = "form-control validinput", @required = true })
                            @Html.ValidationMessageFor(model => model.CUSTOMER_CATEGORY_ID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CUSTOMER_CODE, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.CUSTOMER_CODE, new { htmlAttributes = new { @class = "form-control num validinput", @required = true } })
                            @Html.ValidationMessageFor(model => model.CUSTOMER_CODE, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CUSTOMER_NAME,"Customer Name *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.CUSTOMER_NAME, new { htmlAttributes = new { @class = "form-control num1 validinput", @required = true } })
                            @Html.ValidationMessageFor(model => model.CUSTOMER_NAME, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CUSTOMER_DISPLAY_NAME, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.CUSTOMER_DISPLAY_NAME, new { htmlAttributes = new { @class = "form-control validinput", @required = true } })
                            @Html.ValidationMessageFor(model => model.CUSTOMER_DISPLAY_NAME, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-body" role="tabpanel" data-example-id="togglable-tabs">
            <ul id="myTab" class="nav nav-tabs bar_tabs" role="tablist">
                <li class="active"><a data-toggle="tab" href="#sectionA">General</a></li>
                <li><a data-toggle="tab" href="#sectionB">Bank Details</a></li>
                <li><a data-toggle="tab" href="#sectionC">Contact Details</a></li>
                <li><a data-toggle="tab" href="#sectionD">Accounting</a></li>
                <li><a data-toggle="tab" href="#sectionE">Pricing</a></li>
                <li><a data-toggle="tab" href="#sectionF">Information</a></li>
            </ul>
            <div class="tab-content">
                <div id="sectionA" class="tab-pane fade in active" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ORG_TYPE_ID, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("ORG_TYPE_ID", (System.Web.Mvc.SelectList)ViewBag.orglist, "---Select---", new { @class = "form-control validinput", @required = true })
                                    @Html.ValidationMessageFor(model => model.ORG_TYPE_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.BILLING_ADDRESS, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.BILLING_ADDRESS, new { htmlAttributes = new { @class = "form-control validinput", @required = true } })
                                    @Html.ValidationMessageFor(model => model.BILLING_ADDRESS, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.BILLING_CITY, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.BILLING_CITY, new { htmlAttributes = new { @class = "form-control validinput", @required = true } })
                                    @Html.ValidationMessageFor(model => model.BILLING_CITY, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.BILLING_PINCODE, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.BILLING_PINCODE, new { htmlAttributes = new { @class = "form-control validinput pincode", @required = true, @maxlength = "6" } })
                                    @Html.ValidationMessageFor(model => model.BILLING_PINCODE, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.BILLING_COUNTRY_ID, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("BILLING_COUNTRY_ID", (System.Web.Mvc.SelectList)ViewBag.billinglist, new { @class = "form-control validinput", @required = true, @onchange = "FillState(this.value,this.name)" })
                                    @Html.ValidationMessageFor(model => model.BILLING_COUNTRY_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.BILLING_STATE_ID, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("BILLING_STATE_ID", (System.Web.Mvc.SelectList)ViewBag.billingstatelist, "---Select---", new { @class = "form-control validinput", @required = true })
                                    @Html.ValidationMessageFor(model => model.BILLING_STATE_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SALES_EXEC_ID, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("SALES_EXEC_ID", (System.Web.Mvc.SelectList)ViewBag.salesexlist, "---Select---", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SALES_EXEC_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.FREIGHT_TERMS_ID, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("FREIGHT_TERMS_ID", (System.Web.Mvc.SelectList)ViewBag.freightlist, "---Select---", new { @class = "form-control validinput", @required = true })
                                    @Html.ValidationMessageFor(model => model.FREIGHT_TERMS_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.HAS_PARENT, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.HAS_PARENT, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.HAS_PARENT, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.CUSTOMER_PARENT_ID, "Customer Parent", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("CUSTOMER_PARENT_ID", (System.Web.Mvc.SelectList)ViewBag.parentlist, "---Select---", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CUSTOMER_PARENT_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.TERRITORY_ID, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("TERRITORY_ID", (System.Web.Mvc.SelectList)ViewBag.territorylist, "---Select---", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.TERRITORY_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.PRIORITY_ID, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("PRIORITY_ID", (System.Web.Mvc.SelectList)ViewBag.prioritylist, "---Select---", new { @class = "form-control"})
                                    @Html.ValidationMessageFor(model => model.PRIORITY_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.vendor_code, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.vendor_code, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.vendor_code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.IS_BLOCKED, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.IS_BLOCKED, new { htmlAttributes = new { @class = "form-control data-reverse", Type = "checkbox" } })
                                    @Html.ValidationMessageFor(model => model.IS_BLOCKED, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sectionB" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.bank_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("bank_id", (System.Web.Mvc.SelectList)ViewBag.bank_list, "---Select---", new { @class = "form-control"})
                                    @Html.ValidationMessageFor(model => model.bank_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.bank_account_number, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.bank_account_number, new { htmlAttributes = new { @class = "form-control"} })
                                    @Html.ValidationMessageFor(model => model.bank_account_number, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ifsc_code, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.ifsc_code, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ifsc_code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div id="sectionC" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                <label class="control-label col-md-4">Whether same as Billing </label>
                                <div class="col-md-8">
                                    <input type="checkbox" class="form-control data-reverse" id="sameas" name="sameas" />
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">

                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.CORR_ADDRESS, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.CORR_ADDRESS, new { htmlAttributes = new { @class = "form-control validinput", @required = true } })
                                    @Html.ValidationMessageFor(model => model.CORR_ADDRESS, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.CORR_CITY, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.CORR_CITY, new { htmlAttributes = new { @class = "form-control validinput", @required = true } })
                                    @Html.ValidationMessageFor(model => model.CORR_CITY, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.CORR_PINCODE, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.CORR_PINCODE, new { htmlAttributes = new { @class = "form-control validinput pincode", @required = true } })
                                    @Html.ValidationMessageFor(model => model.CORR_PINCODE, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.CORR_COUNTRY_ID, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("CORR_COUNTRY_ID", (System.Web.Mvc.SelectList)ViewBag.corlist, "---Select---", new { @class = "form-control validinput", @required = true, @onchange = "FillState(this.value,this.name)" })
                                    @Html.ValidationMessageFor(model => model.CORR_COUNTRY_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.CORR_STATE_ID, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("CORR_STATE_ID", (System.Web.Mvc.SelectList)ViewBag.corrstatelist, "---Select---", new { @class = "form-control validinput", @required = true })
                                    @Html.ValidationMessageFor(model => model.CORR_STATE_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.EMAIL_ID_PRIMARY, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.EMAIL_ID_PRIMARY, new { htmlAttributes = new { @class = "form-control email", @type = "email" } })
                                    @Html.ValidationMessageFor(model => model.EMAIL_ID_PRIMARY, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.std_code, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-3 col-sm-3 col-xs-12">
                                    @Html.EditorFor(model => model.std_code, new { htmlAttributes = new { @class = "form-control ", @type = "number" } })
                                    @Html.ValidationMessageFor(model => model.std_code, "", new { @class = "text-danger" })
                                </div>
                                <label class="hidden">Telephone</label>
                                <div class="col-md-5 col-sm-5 col-xs-12">
                                    @Html.EditorFor(model => model.TELEPHONE_PRIMARY, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.TELEPHONE_PRIMARY, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.WEBSITE_ADDRESS, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.WEBSITE_ADDRESS, new { htmlAttributes = new { @class = "form-control url" } })
                                    @Html.ValidationMessageFor(model => model.WEBSITE_ADDRESS, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.FAX, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.FAX, new { htmlAttributes = new { @class = "form-control", @maxlength = "10" } })
                                    @Html.ValidationMessageFor(model => model.FAX, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    <button class="add btn btn-primary" style="float:right"><span class="glyphicon glyphicon-plus"></span>Add Contact</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="table-responsive">
                            <table class="table contacts table-responsive table-bordered table-striped" border="1" id="contacts">
                                <thead>
                                    <tr>
                                        <th hidden>ID</th>
                                        <th><label>Name</label></th>
                                        <th><label>Designation</label></th>
                                        <th><label>Mobile Number</label></th>
                                        <th><label>Phone Number</label></th>
                                        <th><label>Email</label></th>
                                        <th><label> Send SMS</label></th>
                                        <th><label>Send Email</label></th>
                                        <th><label>Action</label></th>
                                    </tr>
                                </thead>
                                <tbody id="CUSTOMER_CONTACT_ID">
                                    @{
                                        if (Model != null && Model.REF_CUSTOMER_CONTACTS != null)
                                        {
                                            int i = 0;
                                            foreach (var REF_CUSTOMER_CONTACTS in Model.REF_CUSTOMER_CONTACTS)
                                            {
                                                ViewBag.Count = i++;
                                                Html.RenderPartial("_ContactView", Model);
                                            }
                                        }
                                        else
                                        {
                                            Html.Partial("_ContactView");
                                        }

                                    }

                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div id="sectionD" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.CREDIT_LIMIT_CURRENCY_ID, "Default Currency", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("CREDIT_LIMIT_CURRENCY_ID", (System.Web.Mvc.SelectList)ViewBag.Currencylist, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CREDIT_LIMIT_CURRENCY_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.PAYMENT_TERMS_ID, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("PAYMENT_TERMS_ID", (System.Web.Mvc.SelectList)ViewBag.paymenttermslist, "---Select---", new { @class = "form-control validinput", @required = true })
                                    @Html.ValidationMessageFor(model => model.PAYMENT_TERMS_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.PAYMENT_CYCLE_TYPE_ID, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("PAYMENT_CYCLE_TYPE_ID", (System.Web.Mvc.SelectList)ViewBag.paymentcycletype, "---Select---", new { @class = "form-control validinput", @required = true, @onchange = "FillPaymentCycle(this.value)" })
                                    @Html.ValidationMessageFor(model => model.PAYMENT_CYCLE_TYPE_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.PAYMENT_CYCLE_ID, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("PAYMENT_CYCLE_ID", (System.Web.Mvc.SelectList)ViewBag.paymentcyclelist, "---Select---", new { @class = "form-control validinput", @required = true })
                                    @Html.ValidationMessageFor(model => model.PAYMENT_CYCLE_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.CREDIT_LIMIT, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.CREDIT_LIMIT, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                                    @Html.ValidationMessageFor(model => model.CREDIT_LIMIT, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.TDS_APPLICABLE, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-3 col-sm-3 col-xs-12">
                                    @Html.EditorFor(model => model.TDS_APPLICABLE, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.TDS_APPLICABLE, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.tds_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12 hidden" })
                                <div class="col-md-5 col-sm-5 col-xs-12">
                                    @*@Html.EditorFor(model => model.tds_no, new { htmlAttributes = new { @class = "form-control" } })*@
                                    @Html.DropDownList("tds_id", (System.Web.Mvc.SelectList)ViewBag.tds_list,"", new { @class = "form-control removedisabled", @required = true })
                                    @Html.ValidationMessageFor(model => model.tds_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.pan_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.pan_no, new { htmlAttributes = new { @class = "form-control validinput pan", @required = true } })
                                    @Html.ValidationMessageFor(model => model.pan_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.vat_tin_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.vat_tin_no, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.vat_tin_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.cst_tin_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.cst_tin_no, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.cst_tin_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.service_tax_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.service_tax_no, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.service_tax_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">                      
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.division, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.division, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.division, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ecc_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.ecc_no, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ecc_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.commisionerate, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.commisionerate, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.commisionerate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.range, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.range, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.range, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.gst_customer_type_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("gst_customer_type_id", (System.Web.Mvc.SelectList)ViewBag.GST_CustomerType_List, "---Select---", new { @class = "form-control validinput",@onchange="ChangeGstType(this.value)" })
                                    @Html.ValidationMessageFor(model => model.gst_customer_type_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.gst_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.gst_no, new { htmlAttributes = new { @class = "form-control validinput" } })
                                    @Html.ValidationMessageFor(model => model.gst_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                 
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.gst_registration_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.gst_registration_date, new { htmlAttributes = new { @class = "form-control validinput" } })
                                    @Html.ValidationMessageFor(model => model.gst_registration_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>   
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.gst_tds_applicable, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-3 col-sm-3 col-xs-12">
                                    @Html.EditorFor(model => model.gst_tds_applicable, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.gst_tds_applicable, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.gst_tds_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12 hidden" })
                                <div class="col-md-5 col-sm-5 col-xs-12">                                  
                                    @Html.DropDownList("gst_tds_id", (System.Web.Mvc.SelectList)ViewBag.GST_TDS_Code,"", new { @class = "form-control removedisabled", @required = true })
                                    @Html.ValidationMessageFor(model => model.gst_tds_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>               
                    </div>

                        <div class="row">
                            <div class="table-responsive">
                                <table class="table table-responsive table-bordered table-striped" id="LedgerGrid">
                                    <thead>
                                        <tr>
                                            <th><label>Sr. No.</label></th>
                                            <th hidden><label>ID</label></th>
                                            <th><label>GL Account Type</label></th>
                                            <th hidden><label>Ledger Id *</label></th>
                                            <th><label>GL Account *</label></th>
                                            <th><label>Action</label></th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                    </div>
                <div id="sectionE" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.OVERALL_DISCOUNT, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.OVERALL_DISCOUNT, new { htmlAttributes = new { @class = "form-control rate",@type="number" } })
                                        @Html.ValidationMessageFor(model => model.OVERALL_DISCOUNT, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">

                        </div>
                    </div>
                    <div class="row">
                        <div class="panel panel-default">
                            <div class="panel-heading"></div>
                            <div class="panel-body">
                                <div class="row">
                                    <div class="col-lg-6 col-sm-6">
                                        <div class="form-group">
                                            <label class="control-label col-md-4 col-sm-4 col-xs-12">Item Group-wise % Discount</label>
                                            <div class="col-md-8 col-sm-8 col-xs-12">
                                                @Html.DropDownList("item_group_id", (System.Web.Mvc.SelectList)ViewBag.item_group, "---Select---", new { @class = "form-control" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-5 col-sm-5">
                                        <div class="form-group">
                                            <label class="control-label col-md-4 col-sm-4 col-xs-12">Rate</label>
                                            <div class="col-md-8 col-sm-8 col-xs-12">
                                                <input type="number" class="form-control" id="item_rate" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-1 col-sm-1">
                                        <div class="form-group">
                                            <div class="col-md-12 col-sm-12 col-xs-12">
                                                <button type="button" class="btn btn-primary" id="add_item">Add</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="table-responsive">
                                        <table class="table table-responsive table-bordered table-striped" id="ContactGrid1">
                                            <thead>
                                                <tr>
                                                    <th hidden> <label>ID</label></th>
                                                    <th><label>Sr. No.</label></th>
                                                    <th hidden><label>Item ID</label></th>
                                                    <th><label>Item Group-wise % Discount</label></th>
                                                    <th><label>Rate(%)</label></th>
                                                    <th><label>Action</label></th>
                                                </tr>
                                            </thead>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div id="sectionF" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ADDITIONAL_INFO, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.ADDITIONAL_INFO, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ADDITIONAL_INFO, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.FileUpload, "Attachment", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    <input type="file" class="form-control" id="FileUpload" name="FileUpload" accept="application/pdf, image/*" />
                                    @Html.ValidationMessageFor(model => model.FileUpload, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <input type="hidden" id="productdetail" name="productdetail" />
                        <input type="hidden" id="srno" />
                        <input type="hidden" id="deleteids" name="deleteids" />
                        <input type="hidden" id="ledgeraccounttype" name="ledgeraccounttype" />
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg12 col-sm-12">
                <div class="form-group">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <input type="submit" value="Create" data-controller="CustomerMaster" class="btn btn-success" onclick="TabletoJeson();" style="float:right" id="create" name="create" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">GL Account</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" id="gllable" name="gllabel"></label>
                        <div class="col-md-7">
                           @Html.DropDownList("gl_ledger_id", (System.Web.Mvc.SelectList)ViewBag.generalleder, "---Select---", new { @class = "form-control", @required = true })
                        </div>
                    </div>
                </div>
                <br />               
                <div class="modal-footer">
                    <input type="hidden" id="srno1" />
                    <input type="hidden" id="ledger_account_type_id" />
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="clearmodel1();">Close</button>
                    <button type="button" class="btn btn-primary" id="addgl" onclick="UpdateGL();" name="addgl">Add</button>
                </div>
            </div>

        </div>
    </div>
</div>
<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
</div>
<script src="~/Scripts/RemoveUnexpectedFile.js"></script>
<script src="~/Scripts/requirevalidation.js"></script>
@using (Ajax.BeginForm("GetPartial", null, new AjaxOptions
            {
                HttpMethod = "GET",
                InsertionMode = InsertionMode.InsertAfter,
                UpdateTargetId = "CUSTOMER_CONTACT_ID"
            }, new { id = "ContactForm" }))
            {
    <input type="hidden" id="contactCount" name="count" value="@ViewBag.Count" />
}

@using (Ajax.BeginForm("GetPartialAttribute", null, new AjaxOptions
            {
                HttpMethod = "GET",
                InsertionMode = InsertionMode.InsertAfter,
                UpdateTargetId = "ATTRIBUTE_ID"
            }, new { id = "ContactForm1" }))
            {
    <input type="hidden" id="contactCount1" name="count1" value="@ViewBag.Count1" />
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $("#gl_ledger_id").select2({
            maximumSelectionLength: 4,
            placeholder: "Select General Ledger",
            allowClear: true

        });
        $("#PAYMENT_TERMS_ID").select2({
            maximumSelectionLength: 4,
            placeholder: "Select General Ledger",
            allowClear: true

        });

        $("#tds_id").select2({
            maximumSelectionLength: 4,
            placeholder: "Select TDS",
            allowClear: true

        });
        $("#gst_tds_id").select2({
            maximumSelectionLength: 4,
            placeholder: "Select GST TDS",
            allowClear: true
        });



        $("table").on("click", ".delete-country", function () {
            $(this).closest('tr').hide();
            $(this).prev('input').val('false');
        });

        $(".add").on("click", function (event) {
            event.preventDefault();
            var val = parseInt($("#contactCount").val());
            var rowCount = document.getElementById("contacts").rows.length - 1;
            val = isNaN(val) ? 1 : val;
            $("#contactCount").val(rowCount);
            // $("#ContactForm").submit();
            $.ajax({
                url: "@Url.Action("GetPartial", "CustomerMaster")",
                data: { count: rowCount },
                catch: false,
                type: "GET",
                success: function (data) {
                    $("#contacts").append(data);
                },
                error: function (response) {

                }

            });

        });
        // });
        function clearmodel1(){
            $("#glid").val("");
        }
        function ChangeGstType(id)
        {
            if(id==8)
            {
                $("#gst_no").val("NA");
                $('label[for="gst_registration_date"]').text ("Date of Registration");
                $('#gst_registration_date').val('');
                $('#validgst_registration_date').remove();
                $("#gst_registration_date").removeClass('validinput');
            }
            else
            {
                $("#gst_no").val("");
                $('label[for="gst_registration_date"]').text ("Date of Registration *");
                $("#gst_registration_date").addClass('validinput');
            }
        }
        $(document).ready(function () {
            var error=@Html.Raw(Json.Encode(ViewBag.error));
            if(error !="")
            {
                sweetAlert("",error,"error");
            }
            $('#HAS_PARENT').checkboxpicker();
            $('#IS_BLOCKED').checkboxpicker();
            $('#TDS_APPLICABLE').checkboxpicker();
            $('#gst_tds_applicable').checkboxpicker();
            $('#sameas').checkboxpicker();
            $("#CUSTOMER_PARENT_ID").attr("disabled", "disabled");
            $('#HAS_PARENT').change(function () {//do something when the user clicks the box sameas
                if ($(this).is(':checked')) {
                    $('#CUSTOMER_PARENT_ID').val('');
                    $("#CUSTOMER_PARENT_ID").removeAttr("disabled");
                    $("#CUSTOMER_PARENT_ID").addClass('validinput');
                }
                else {
                    $("#CUSTOMER_PARENT_ID").attr("disabled", "disabled");
                    $('#CUSTOMER_PARENT_ID').val('');
                    $('#validCUSTOMER_PARENT_ID').remove();
                    $("#CUSTOMER_PARENT_ID").removeClass('validinput');
                }
            });
            $('#sameas').change(function () {//do something when the user clicks the box sameas
                if (this.checked == false) {
                    $('#CORR_ADDRESS').val("");
                    $('#CORR_CITY').val("");
                    $('#CORR_PINCODE').val("");
                    $('#CORR_COUNTRY_ID').val("");
                    $('#CORR_STATE_ID').val("");
                };
                if (this.checked != false) {
                    $('#CORR_ADDRESS').val($('#BILLING_ADDRESS').val());
                    $('#CORR_CITY').val($('#BILLING_CITY').val());
                    $('#CORR_PINCODE').val($('#BILLING_PINCODE').val());
                    $('#CORR_COUNTRY_ID').val($('#BILLING_COUNTRY_ID').val());
                    $('#CORR_STATE_ID').val($('#BILLING_STATE_ID').val());
                };

            });
            $('#CUSTOMER_NAME').change(function () {
                $('#CUSTOMER_DISPLAY_NAME').val($('#CUSTOMER_NAME').val());
            });

            $("#tds_id").attr("disabled", "disabled");
            $("#gst_tds_id").attr("disabled", "disabled");
            $('#TDS_APPLICABLE').change(function () {//do something when the user clicks the box
                if ($(this).is(':checked')) {
                    $('#tds_id').val('').trigger("change");
                    $("#tds_id").removeAttr("disabled");
                    $("#tds_id").addClass('validinput');
                }
                else {
                    $("#tds_id").attr("disabled", "disabled");
                    $('#tds_id').val('').trigger("change");
                    $('#validtds_id').remove();
                    $("#tds_id").removeClass('validinput');
                };
            });
            $('#gst_tds_applicable').change(function () {//do something when the user clicks the box
                if ($(this).is(':checked')) {
                    $('#gst_tds_id').val('').trigger("change");
                    $("#gst_tds_id").removeAttr("disabled");
                    $("#gst_tds_id").addClass('validinput');
                }
                else {
                    $("#gst_tds_id").attr("disabled", "disabled");
                    $('#gst_tds_id').val('').trigger("change");
                    $('#validgst_tds_id').remove();
                    $("#gst_tds_id").removeClass('validinput');
                };
            });        
            GetLedgerAccountType();
        });
        function FillPaymentCycle(id) {
            var Payment_Cycle="";
            if (id == "")
            {
                Payment_Cycle = 0;
            }
            else
            {
                Payment_Cycle = id;
            }
            $.ajax({
                url: '@Url.Action("FillPaymentCycle", "Generic")',
                type: "GET",
                dataType: "JSON",
                data: { Payment_Type_id: Payment_Cycle },
                success: function (Payment_Cycle) {
                    $("#PAYMENT_CYCLE_ID").html(""); // clear before appending new list
                    $("#PAYMENT_CYCLE_ID").append($('<option></option>').val(0).html("---Select---"));
                    $.each(Payment_Cycle, function (i, cycle) {
                        $("#PAYMENT_CYCLE_ID").append(
                            $('<option></option>').val(cycle.PAYMENT_CYCLE_ID).html(cycle.PAYMENT_CYCLE_NAME));
                    });
                }
            });
        }
        function GetLedgerAccountType() {
            $.ajax({
                url: '@Url.Action("GetLedgerAccountType", "Generic")',
                type: "GET",
                dataType: "JSON",
                data: { entity_type_id: 1, entity_id:0 },
                success: function (Payment_Cycle) {
                    var t = $('#LedgerGrid').DataTable();
                    t.fnClearTable();
                    var sr_no = t.fnGetData().length + 1;

                    $.each(Payment_Cycle, function (i, cycle) {
                        t.fnAddData([sr_no, cycle.ledger_account_type_id, cycle.ledger_account_type_name, '<label class="ledger_grid" id="ledger_code' + sr_no + '">' + cycle.gl_ledger_code + '</label>', '<label class="ledger_grid" id="ledger_name' + sr_no + '">' + cycle.gl_ledger_name + '</label>', ''
                        ]);
                        sr_no++;
                    });
                }
            });
        }
        function FillState(id, nme) {
            var STATE = id;
            if (STATE == "") {
                STATE = 0;
            }
            else {
                STATE = id;
            }
            $.ajax({
                url: '@Url.Action("FillState", "Generic")',
                type: "GET",
                dataType: "JSON",
                async: false,
                data: { COUNTRY_ID: STATE },
                success: function (state) {
                    if (nme == "BILLING_COUNTRY_ID") {
                        $("#BILLING_STATE_ID").html("");
                        $("#BILLING_STATE_ID").append($('<option></option>').val(0).html("---Select---"));
                        $.each(state, function (i, cycle) {
                            $("#BILLING_STATE_ID").append(
                                $('<option></option>').val(cycle.STATE_ID).html(cycle.STATE_NAME));
                        });
                    }
                    else {
                        $("#CORR_STATE_ID").html(""); // clear before appending new list
                        $("#CORR_STATE_ID").append($('<option></option>').val(0).html("---Select---"));
                        $.each(state, function (i, cycle) {
                            $("#CORR_STATE_ID").append(
                                $('<option></option>').val(cycle.STATE_ID).html(cycle.STATE_NAME));
                        });
                    }

                }
            });
        }
        function validateEmail(x) {
            if (x != undefined) {
                var atpos = x.indexOf('@@');
                var dotpos = x.lastIndexOf(".");
                if (atpos < 1 || dotpos < atpos + 2 || dotpos + 2 >= x.length) {
                    return false;
                }
                else {
                    return true;
                }
            }
        }
        function phonecode(inputtxt) {
            if (inputtxt != undefined) {
                var phoneno = /^\d{3}$/;
                if (inputtxt.match(phoneno)) {
                    return true;
                }
                else {
                    return false;
                }
            }
        }
        function pincode(inputtxt) {
            if (inputtxt != undefined) {
                var pin = /^\d{6}$/;
                if (inputtxt.match(pin)) {
                    return true;
                }
                else {
                    return false;
                }
            }
        }
        function phonenumber(inputtxt) {
            if (inputtxt != undefined) {
                var phoneno = /^\d{8}$/;
                if (inputtxt.match(phoneno)) {
                    return true;
                }
                else {
                    return false;

                }
            }
        }
        function fnValidatePAN(Obj) {
            if (Obj != undefined) {
                if (Obj != "") {
                    ObjVal = Obj;
                    var panPat = /^([a-zA-Z]{5})(\d{4})([a-zA-Z]{1})$/;
                    var code = /([C,P,H,F,A,T,B,L,J,G])/;
                    var code_chk = ObjVal.substring(3, 4);
                    if (ObjVal.search(panPat) == -1) {
                        return false;
                    }
                    if (code.test(code_chk) == false) {
                        return false;
                    }
                }
            }
        }
        function isUpperCase(str) {
            return str === str.toUpperCase();
        }





        //ADD TO ITEM CATEGORY TABLE
        $('#add_item').click(function () {
            var t = $('#ContactGrid1').DataTable()
            var rowCount = t.fnGetData().length;
            var cat_id = $('#item_group_id').val();
            var cat = $('#item_group_id :selected').text();
            var rate = $('#item_rate').val();

            if (cat_id == '') {
                swal("", "Please Select Item Group-wise.", "error");
                return false;
            }
            if (rate == '') {
                swal("", "Please Enter Rate.", "error");
                return false;
            }
            if (rate > 100) {
                swal("", "Rate cannot be greater than 100.", "error");
                return false;
            }
            if ($("#srno").val() == "") {
                    for (var k = 0; k <= rowCount - 1; k++) {
                        if (t.fnGetData(k)[2] == cat_id) {
                            swal("", "Item Group-wise is already added.", "error");
                            return false;
                        }
                    }
                    t.fnAddData(['', rowCount + 1, cat_id, cat, rate, ''
                    ]);
            }
            else {
                for (var k = 0; k <= rowCount - 1; k++) {
                    if (t.fnGetData(k)[2] == cat_id) {
                        swal("", "Item Group-wise is already added.", "error");
                        return false;
                    }
                }
                var cc = parseInt($("#srno").val());
                t.fnUpdate(['', cc + 1, cat_id, cat, rate, ''], cc)
            }
            clearmodel();
        });


        function clearmodel() {
            $("#item_group_id").val('');
            $("#item_rate").val('');
            $('#srno').val('');
        }

        $('#ContactGrid1').on('click', '.edit', function () {
            var t = $('#ContactGrid1').DataTable();
            var id = $(this).parent('td').parent('tr').index();
            $('#srno').val(id);
            $("#item_group_id").val(t.fnGetData(id)[2]);
            $("#item_rate").val(t.fnGetData(id)[4]);
        });

        $('#ContactGrid1').on('click', '.delete', function () {
            var t = $('#ContactGrid1').DataTable();
            var id = $(this).parent('td').parent('tr').index();
            var deleteids = t.fnGetData(id)[1];
            swal({
                title: "Are you sure?",

                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: true
            },
     function (isConfirm) {
         if (isConfirm) {

             $("#deleteids").val(deleteids + "~");
             t.fnDeleteRow(id);
             var len = t.fnGetData().length;
             var i = 1;
             var row = 0;
             if (len > 0) {
                 $('#ContactGrid1 tbody tr').each(function () {
                     t.fnUpdate(i, row, 1);
                     i++;
                     row++;
                 });
             }
         }
     });
        });


        $('#ContactGrid1').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            aoColumns: [
                     { sname: "a", bVisible: false },
                     { sname: "b", sWidth: "7%" },
                     { sname: "c", bVisible: false },
                     { sname: "d"},
                     { sname: "e" },
                     {
                         sname: "f", sWidth: "8%",
                         bSortable: false,
                         mRender: function (data, type, full) {
                             return '<img class="edit" src="../images/writing_file.png" height="20px" width="25px" alt="Edit" /><img class="delete" src="../images/remove.png" height="20px" width="25px" alt="Delete" />';
                         }
                     }]

        });
        $('#LedgerGrid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            aoColumns: [
                     { sname: "a", sWidth: "7%" },
                     { sname: "b", bVisible: false },
                     { sname: "c" },
                     { sname: "d", bVisible: false },
                     { sname: "e" },
                     {
                         sname: "f", sWidth: "8%",
                         bSortable: false,
                         mRender: function (data, type, full) {
                             return '<img class="edit1" src="../images/writing_file.png" height="20px" width="25px" alt="Edit" />';
                         }
                     }]

        });
        function TabletoJeson() {
            var t = $('#ContactGrid1').DataTable()
            var rowCount = t.fnGetData().length;
            var t1 = $('#LedgerGrid').DataTable()
            var rowCount1 = t1.fnGetData().length;
            $("#customer_detail").empty();
            for (i = 0; i < rowCount; i++) {
                $("#customer_detail").append('<input type="hidden" id="item_category_id' + i + '" name="item_category_id" value=' + t.fnGetData(i)[2] + '>');
                $("#customer_detail").append('<input type="hidden" id="rate' + i + '" name="rate" value=' + t.fnGetData(i)[4] + '>');
            }
            for (i = 0; i < rowCount1; i++) {                
                var tx = t1.fnGetData(i)[3];
                var txx = $(tx).text();
                $("#customer_detail").append('<input type="hidden" id="ledger_account_type_id' + i + '" name="ledger_account_type_id" value=' + t1.fnGetData(i)[1] + '>');
                $("#customer_detail").append('<input type="hidden" id="gl_ledger_id' + i + '" name="gl_ledger_id" value=' + txx + '>');
            }
        };

        $('#LedgerGrid').on('click', '.edit1', function () {
            var t = $('#LedgerGrid').DataTable();
            var id = $(this).parent('td').parent('tr').index();
            $('#myModal').modal('show');
            $("#gllable").text(t.fnGetData(id)[2]);
            $("#srno1").val(t.fnGetData(id)[0]);
            var tx = t.fnGetData(id)[3];
            var txx = $(tx).text();
            var tx1 = t.fnGetData(id)[4];
            var txx1 = $(tx1).text();
            if (txx=="")
            {
                $("#glid").val("");
            }
            else
            {
                $("#glid").val(txx + "-" + txx1);
            }

            $("#ledger_account_type_id").val(t.fnGetData(id)[1]);
        });
        function UpdateGL()
        {
            var gl = $("#gl_ledger_id").val();
            var ledger_account_type_name = $("#gllable").text();
            if (gl == "-")
            {
                sweetAlert("", "Please select Account!", "error");
            }
            else if (gl == "")
            {
                sweetAlert("", "Please select Account!", "error");
            }
            else
            {
                var t = $('#LedgerGrid').DataTable();
                var rowCount = t.fnGetData().length;
                var srno = parseInt($("#srno1").val());
                var gl_id = gl;
                var gl_code = $("#gl_ledger_id :selected").text();
                var ledger_account_type_id = $("#ledger_account_type_id").val();
                var cc = parseInt($("#srno").val());
                t.fnUpdate([srno, ledger_account_type_id, ledger_account_type_name, '<label class="ledger_grid" id="ledger_name' + srno + '">' + gl_id + '</label>', '<label class="ledger_grid" id="ledger_code' + srno + '">' + gl_code + '</label>', ''], srno - 1)
                $('#myModal').modal('hide');
            }
        }
    </script>


}