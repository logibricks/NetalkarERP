
@model IEnumerable<Sciffer.Erp.Domain.Model.stock_take_blocked>
@using Sciffer.Erp.Domain.Model
@{
    ViewBag.Title = "Index";
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
<br /><br /><br />
<div>
    @Html.EJ().Dialog("ErrorList").Title("ErrorList").ShowOnInit(false)
    @(Html.EJ().Grid<REF_COUNTRY>("Grid")
        .Datasource(ds => ds.Json((IEnumerable<object>)ViewBag.Datasource).RemoveURL(Url.Action("InlineDelete", "StockTakeBlocked")).InsertURL(Url.Action("InlineInsert", "StockTakeBlocked")).UpdateURL(Url.Action("InlineInsert", "StockTakeBlocked"))
                       .Adaptor(AdaptorType.RemoteSaveAdaptor).Offline(false))
        .EditSettings(edit => { edit.AllowAdding().AllowDeleting().AllowEditing().EditMode(EditMode.InlineFormTemplate).InlineFormTemplateID("#template").ShowDeleteConfirmDialog(true); })
        .EnableAltRow().AllowPaging()
        .PageSettings(p => { p.PageSize(10); })
        .EnableAltRow()
        .ToolbarSettings(toolbar =>
        {
            toolbar.ShowToolbar().ToolbarItems(items =>
            {

                items.AddTool(ToolBarItems.Edit);
                //items.AddTool(ToolBarItems.Delete);
                items.AddTool(ToolBarItems.Update);
                items.AddTool(ToolBarItems.Cancel);
                items.AddTool(ToolBarItems.ExcelExport);
                items.AddTool(ToolBarItems.PrintGrid);
            });
        })
        .Mappers(map => map.ExportToExcelAction(Url.Action("ExportToExcel", "Generic", new { ctrlname = "StockTakeBlocked" }))
        .ExportToPdfAction(Url.Action("ExportToPdf", "Generic", new { ctrlname = "StockTakeBlocked" })).ExportToWordAction(Url.Action("ExportToWord", "Generic", new { ctrlname = "StockTakeBlocked" })))
        .AllowSorting()
        .AllowPaging()
        .IsResponsive()
        .AllowFiltering()
        .ShowColumnChooser()
        .AllowReordering()
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .Columns(col =>
        {
            col.Field("stock_take_blocked_id").HeaderText("ID").IsPrimaryKey(true).Width(80).Visible(false).Add();
            col.Field("plant_id").HeaderText("Plant ID").Width(80).Visible(false).Add();
            col.Field("plant_name").HeaderText("Plant").Width(80).Add();
            col.Field("sloc_id").Width("15%").HeaderText("SLoc ID").Width(80).Visible(false).Add();
            col.Field("sloc_name").HeaderText("Sloc").Width(80).Add();
            col.Field("bucket_id").Width("15%").HeaderText("Bucket").Width(80).Visible(false).Add();
            col.Field("bucket_name").HeaderText("Bucket").Width(80).Add();
            col.Field("item_category_id").Width("15%").HeaderText("Item category ID").Width(80).Visible(false).Add();
            col.Field("item_category_name").HeaderText("Item Category").Width(80).Add();
            col.Field("is_blocked").HeaderText("Blocked").Width(80).Add();
            col.Field("created_by").Width("15%").HeaderText("Created By").Width(80).Visible(false).Add();
            col.Field("created_ts").Width("15%").HeaderText("Created TS").Add();
            col.Field("modify_by").Width("15%").HeaderText("Modify By").Visible(false).Add();
            col.Field("modify_ts").Width("15%").HeaderText("Modify TS").Add();
        })
        .ClientSideEvents(eve => { eve.ActionComplete("complete").EndAdd("EndProcess").EndDelete("EndProcess").EndEdit("EndProcess"); })
    )

</div>

<script id="template" type="text/template">
    <form name="add_form">
        <div>
            <div class="row">

                <div class="col-lg-6 col-md-6 col-xs-12">
                    <input type="hidden" id="stock_take_blocked_id" name="stock_take_blocked_id" value="{{: stock_take_blocked_id}}" class="form-control" />
                </div>
            </div>
            <div class="row">
                <div class="col-lg-2 col-md-2 col-xs-12" style="text-align: right;">
                    Plant<span>*</span>
                </div>
                <div class="col-lg-6 col-md-6 col-xs-12">
                   @Html.DropDownList("plant_id",  (System.Web.Mvc.SelectList)ViewBag.plantlist, "--select--", htmlAttributes: new { @class = "form-control", @disabled="disabled" })

                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-lg-2 col-md-2 col-xs-12" style="text-align: right;">
                    SLoc<span>*</span>
                </div>
                <div class="col-lg-6 col-md-6 col-xs-12">
                    @Html.DropDownList("sloc_id", (System.Web.Mvc.SelectList)ViewBag.sloc_list, "--select--", htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-lg-2 col-md-2 col-xs-12" style="text-align: right;">
                    Bucket<span>*</span>
                </div>
                <div class="col-lg-6 col-md-6 col-xs-12">
                    @Html.DropDownList("bucket_id", (System.Web.Mvc.SelectList)ViewBag.bucket_list, "--select--", htmlAttributes: new { @class = "form-control", @disabled = "disabled" })

                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-lg-2 col-md-2 col-xs-12" style="text-align: right;">
                    Item Category<span>*</span>
                </div>
                <div class="col-lg-6 col-md-6 col-xs-12">
                    @Html.DropDownList("item_category_id", (System.Web.Mvc.SelectList)ViewBag.item_category_list, "--select--", htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-lg-2 col-md-2 col-xs-12" style="text-align: right;">
                    Blocked
                </div>
                <div class="col-lg-2 col-md-2 col-sm-12 col-xs-12">
                    <input type="checkbox" name="is_blocked" value="{{:is_blocked}}" class="form-control" id="is_blocked">
                </div>
            </div>
        </div>
    </form>
</script>

<script type="text/javascript">
    var flag = true;
    function complete(args) {

        if (args.requestType == "beginedit") {
            
            if (args.rowData.is_blocked == true) {
                document.getElementById("is_blocked").setAttribute('checked', 'checked');
            }

            else {
                document.getElementById("is_blocked").removeAttribute('checked');
            }
            $("#is_blocked").checkboxpicker();
            $("#plant_id").val(args.rowData.plant_id);
            $("#sloc_id").val(args.rowData.sloc_id);
            $("#bucket_id").val(args.rowData.bucket_id);
            $("#item_category_id").val(args.rowData.item_category_id);
        }
        if (args.requestType == "add") {
            $("#is_blocked").checkboxpicker();
        }
        if (args.requestType == "save") {
            $("#is_blocked").checkboxpicker();            
            var gridObj = $("#Grid").ejGrid("instance");
            gridObj.refreshContent();
        }
    }

    function EndProcess() {
        var gridObj = $("#Grid").ejGrid("instance");
        //console.log(gridObj);
        gridObj.refreshContent();
    }
</script>