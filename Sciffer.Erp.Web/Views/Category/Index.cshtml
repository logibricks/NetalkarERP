
@using Sciffer.Erp.Domain.Model

@{
    ViewBag.Title = "Index";
}
<br /><br /><br />
<div>
    @(Html.EJ().Grid<ref_tax_type>("Searching")
        .Datasource((IEnumerable<object>)ViewBag.DataSource)
        .EditSettings(edit => { edit.AllowAdding().AllowDeleting().AllowEditing().EditMode(EditMode.InlineFormTemplate); })
        .ToolbarSettings(toolBar => toolBar.ShowToolbar().ToolbarItems(items =>
        {
            items.AddTool(ToolBarItems.Add);
            items.AddTool(ToolBarItems.Edit);
            items.AddTool(ToolBarItems.ExcelExport);
            items.AddTool(ToolBarItems.PrintGrid);
        }))
        .Mappers(map => map.ExportToExcelAction(Url.Action("ExportToExcel", "Generic", new { ctrlname = "Category" }))
        .ExportToPdfAction(Url.Action("ExportToPdf", "Generic", new { ctrlname = "Category" })).ExportToWordAction(Url.Action("ExportToWord", "Generic", new { ctrlname = "Category" })))
        .AllowSorting()
        .AllowPaging()
        .IsResponsive()
        .AllowFiltering()
        .ShowColumnChooser()
        .AllowReordering()
        .AllowScrolling()
        .ScrollSettings(col => { col.Width("100%"); })
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .Columns(col =>
        {
            col.Field("CATEGORY_ID").Width("15%").HeaderText("ID").IsPrimaryKey(true).Width(80).Add();
            col.Field("CATEGORY_NAME").Width("15%").HeaderText("Category").Add();

        }).ClientSideEvents(eve =>
        {
            eve.ActionBegin("actionBegin");
            eve.RightClick("rightClick");
        })
    )
</div>
<style>
    .e-editedrow {
        display: none;
    }
</style>

<script type="text/javascript">

    function actionBegin(args) {
        if (args.requestType == "beginedit")
        {            
            location.href = "@Url.Action("Edit", "Category")?id=" + args.rowData.CATEGORY_ID;
        }
    }
    
</script>

