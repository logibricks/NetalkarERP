
@using Sciffer.Erp.Domain.ViewModel
@{(Html.EJ().Grid<report_inventory_vm>("Editing")
                .Datasource(ds => ds.URL(Url.Action("GetInventoryReport", "InventoryReport") + "?entity=" + ViewBag.entity + "&from_date=" + ViewBag.from_date + "&to_date=" + ViewBag.to_date + "&plant_id=" + ViewBag.plant_id + "&sloc_id=" + ViewBag.sloc_id + "&item_id=" + ViewBag.item_id + "&item_category_id=" + ViewBag.item_category_id + "&bucket_id=" + ViewBag.bucket_id + "&reason_id=" + ViewBag.reason_id).Adaptor(AdaptorType.UrlAdaptor))

                              .AllowPaging().PageSettings(a=>a.PageSize(20))
                              .AllowFiltering()
                                  .FilterSettings(X => X.FilterType(FilterType.Excel))
                              .ShowColumnChooser()
                              .AllowSorting()
                              .AllowScrolling()
                            .Mappers(map => map.ExportToExcelAction(Url.Action("ExportToExcel", "InventoryReport", new { ctrlname = "GoodsIssueReport" })))
                                                                             .ScrollSettings(scroll => { scroll.Width("100%").Height("50%"); })

                          .ToolbarSettings(toolbar =>
                          {
                              toolbar.ShowToolbar().ToolbarItems(items =>
                              {
                                  items.AddTool(ToolBarItems.Search);
                                  items.AddTool(ToolBarItems.ExcelExport);
                                  items.AddTool(ToolBarItems.PrintGrid);
                              });
                          })
                  .Columns(col =>
                  {
                      col.Field("category").Width("15%").HeaderText("Doc Category").Add();
                      col.Field("document_no").Width("15%").HeaderText("Doc Number").Add();
                      col.Field("posting_date").Width("15%").HeaderText("Doc Date").Format("{0:dd/MMM/yyyy}").Add();
                      col.Field("header_remarks").Width("15%").HeaderText("Header Remarks").Visible(false).Add();
                      col.Field("item_code").Width("15%").HeaderText("Item Code").Visible(true).Add();
                      col.Field("Item_category").Width("15%").HeaderText("Item Category").Visible(true).Add();
                      col.Field("item_name").Width("15%").HeaderText("Item Description").Visible(true).Add();
                      col.Field("plant_name").Width("15%").HeaderText("Plant").Visible(true).Add();
                      col.Field("storage_location_name").Width("15%").HeaderText("Sloc").Visible(true).Add();
                      col.Field("bucket_name").Width("15%").HeaderText("Bucket").Visible(true).Add();
                    //col.Field("batch_number").Width("15%").HeaderText("Batch").Visible(true).Add();
                    col.Field("reason_determination_name").Width("15%").HeaderText("Reason").Visible(true).Add();
                      col.Field("quantity").Width("15%").HeaderText("Qty").Format("{0:n2}").TextAlign(TextAlign.Right).Format("{0:n2}").Visible(true).Add();
                      col.Field("uom_name").Width("15%").HeaderText("UoM").Visible(true).Add();
                      col.Field("rate").Width("15%").HeaderText("Rate").Format("{0:n2}").TextAlign(TextAlign.Right).Format("{0:n2}").Visible(true).Add();
                      col.Field("value").Width("15%").HeaderText("Value").Format("{0:n2}").TextAlign(TextAlign.Right).Format("{0:n2}").Visible(true).Add();
                      col.Field("machine_name").Width("15%").HeaderText("Machine").Visible(false).Add();
                      col.Field("issue_type").Width("15%").HeaderText("Issue Type").Visible(false).Add();
                      col.Field("ref_document_number").Width("15%").HeaderText("Ref Document Number").Visible(false).Add();
                  }).ClientSideEvents(eve => { eve.ToolbarClick("OnToolbarClicki"); })).Render();}
@Html.EJ().ScriptManager()




