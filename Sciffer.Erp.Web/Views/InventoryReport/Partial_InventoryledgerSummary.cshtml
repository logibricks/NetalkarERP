@using Sciffer.Erp.Domain.ViewModel
@using Syncfusion.JavaScript.Models




@{(Html.EJ().Grid<Report_InventoryledgerDetailed_vm>("Editing")
                    .Datasource(ds => ds.URL(Url.Action("GetInventoryReport", "InventoryReport") + "?entity=" + ViewBag.entity + "&from_date=" + ViewBag.from_date + "&to_date=" + ViewBag.to_date + "&plant_id=" + ViewBag.plant_id + "&sloc_id=" + ViewBag.sloc_id + "&item_id=" + ViewBag.item_id + "&item_category_id=" + ViewBag.item_category_id + "&bucket_id=" + ViewBag.bucket_id + "&reason_code_id=" + ViewBag.reason_code_id).Adaptor(AdaptorType.UrlAdaptor))
                    .AllowPaging().PageSettings(a => a.PageSize(20))
                    .AllowFiltering()
                        .FilterSettings(X => X.FilterType(FilterType.Excel))
                    .ShowColumnChooser()
                    .AllowSorting()
                    .AllowScrolling()
                    .Mappers(map => map.ExportToExcelAction(Url.Action("ExportToExcel", "InventoryReport", new { ctrlname = "InventoryledgerSummaryReport" })))
                    .ScrollSettings(scroll => { scroll.Width("100%"); })

                    .ToolbarSettings(toolbar =>
                    {
                        toolbar.ShowToolbar().ToolbarItems(items =>
                        {
                            items.AddTool(ToolBarItems.Search);
                            items.AddTool(ToolBarItems.ExcelExport);
                            items.AddTool(ToolBarItems.PrintGrid);
                        });
                    })
                    .Columns(col =>
                    {
                        col.Field("item_code").Width("10%").HeaderText("Item Code").Add();
                        col.Field("item_name").Width("10%").HeaderText("Item Description").Add();
                        col.Field("plant").Width("10%").HeaderText("Plant").Add();
                        col.Field("Sloc").Width("10%").HeaderText("Sloc").Visible(ViewBag.reason_code_id == "1" ? true : false).Add();
                        col.Field("bucket_name").Width("10%").HeaderText("Bucket").Visible(ViewBag.reason_code_id == "1" ? true : false).Add();
                   
                        col.Field("Opening").Width("10%").HeaderText("Opening").Format("{0:n2}").TextAlign(TextAlign.Right).Add();
                        col.Field("Receipts").Width("10%").HeaderText("Receipts").Format("{0:n2}").TextAlign(TextAlign.Right).Add();
                        col.Field("Issue").Width("10%").HeaderText("Issue").Format("{0:n2}").TextAlign(TextAlign.Right).Add();
                        col.Field("Closing").Width("10%").HeaderText("Closing").Format("{0:n2}").TextAlign(TextAlign.Right).Add();


                    })
                                                                                            .ClientSideEvents(eve => { eve.ToolbarClick("OnToolbarClicki"); })
                                                                                            ).Render();}
@Html.EJ().ScriptManager()
<br />




