@using Sciffer.Erp.Domain.ViewModel
@{(Html.EJ().Grid<report_inventory_vm>("Editing")
          .Datasource(ds => ds.URL(Url.Action("GetInventoryReport", "InventoryReport") + "?entity=" + ViewBag.entity + "&from_date=" + ViewBag.from_date + "&to_date=" + ViewBag.to_date + "&plant_id=" + ViewBag.plant_id + "&sloc_id=" + ViewBag.sloc_id + "&item_id=" + ViewBag.item_id + "&item_category_id=" + ViewBag.item_category_id + "&bucket_id=" + ViewBag.bucket_id).Adaptor(AdaptorType.UrlAdaptor))
                                 
                                        .AllowPaging().PageSettings(a => a.PageSize(20))
                                        .AllowFiltering()
                                            .FilterSettings(X => X.FilterType(FilterType.Excel))
                                        .ShowColumnChooser()
                                        .AllowSorting()
                                        .AllowScrolling()
                                         .Mappers(map => map.ExportToExcelAction(Url.Action("ExportToExcel", "InventoryReport", new { ctrlname = "getmrndetailreport" })))
                                                                                     .ScrollSettings(scroll => { scroll.Width("100%").Height("50%"); })

                                    .ToolbarSettings(toolbar =>
                                    {
                                        toolbar.ShowToolbar().ToolbarItems(items =>
                                        {
                                            items.AddTool(ToolBarItems.Search);
                                            items.AddTool(ToolBarItems.ExcelExport);
                                            items.AddTool(ToolBarItems.PrintGrid);
                                        });
                                    })
                            .Columns(col =>
                            {
                                col.Field("category").Width("15%").HeaderText("Doc Number").Add();
                                col.Field("document_no").Width("15%").HeaderText("Doc Number").Add();
                                col.Field("posting_date").Width("15%").HeaderText("Doc Date").Format("{0:dd/MMM/yyyy}").Add();
                                col.Field("mrn_type").Width("15%").HeaderText("Type").Visible(false).Add();
                                col.Field("item_code").Width("15%").HeaderText("Item Code").Add();
                                col.Field("item_name").Width("15%").HeaderText("Item Description").Add();
                                col.Field("required_qty").Width("15%").HeaderText("Required Qty").Format("{0:n2}").TextAlign(TextAlign.Right).Format("{0:n2}").Add();
                                col.Field("quantity").Width("15%").HeaderText("Issued Qty").Format("{0:n2}").TextAlign(TextAlign.Right).Format("{0:n2}").Add();
                                col.Field("balance_quantity").Width("15%").HeaderText("Balance Qty").Format("{0:n2}").TextAlign(TextAlign.Right).Format("{0:n2}").Add();
                            }).ClientSideEvents(eve => { eve.ToolbarClick("OnToolbarClicki"); })).Render();}
@Html.EJ().ScriptManager()



