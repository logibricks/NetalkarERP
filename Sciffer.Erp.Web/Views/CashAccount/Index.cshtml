@using Sciffer.Erp.Domain.ViewModel
@{
    ViewBag.Title = "Index";
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
<br /><br /><br />
<div>
    @Html.EJ().Dialog("ErrorList").Title("ErrorList").ShowOnInit(false)
    @(Html.EJ().Grid<ref_cash_account_VM>("Searching")
          .Datasource(ds => ds.URL(Url.Action("GetIndexData", "Generic", new { @ctrl_name = "CashAccount" }))
         .EnableCaching()
        .CachingPageSize(4)
        .TimeTillExpiration(120000)
        .Adaptor(AdaptorType.UrlAdaptor))
        .EditSettings(edit => { edit.AllowAdding().AllowDeleting().AllowEditing().EditMode(EditMode.InlineFormTemplate); })
        .ToolbarSettings(toolBar => toolBar.ShowToolbar().ToolbarItems(items =>
        {
            items.AddTool(ToolBarItems.Add);
            items.AddTool(ToolBarItems.Edit);
            items.AddTool(ToolBarItems.ExcelExport);
            items.AddTool(ToolBarItems.PrintGrid);
        }))
         .PageSettings(p => { p.PageSize(10); })
        .Mappers(map => map.ExportToExcelAction(Url.Action("ExportToExcel", "Generic", new { ctrlname = "CashAccount" })))
        .AllowSorting()
       .AllowPaging().PageSettings(a => a.PageSize(20))
        .IsResponsive()
        .AllowFiltering()
        .ShowColumnChooser()
        .AllowReordering()
        .AllowScrolling()
        .ScrollSettings(col => { col.Width("100%"); })
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .Columns(col =>
        {
            col.Field("cash_account_id").Width("15%").HeaderText("ID").IsPrimaryKey(true).Visible(false).Add();
            col.Field("cash_account_code").Width("15%").HeaderText("Account Code").Add();
            col.Field("cash_account_desc").Width("15%").HeaderText("Description").Visible(true).Add();
            col.Field("currency_Name").Width("15%").HeaderText("Currency").Add();
            col.Field("gl_name").Width("15%").HeaderText("GL Account").Add();
            col.Field("is_blocked").Width("15%").HeaderText("Blocked").Add();            
        }).ClientSideEvents(eve => { eve.ActionComplete("complete").EndAdd("EndProcess").EndDelete("EndProcess").EndEdit("EndProcess"); })
    )
</div>
<style>
    .e-editedrow {
        display: none;
    }

    .e-editcell {
        display: none;
    }
</style>
<script>
    var flag = true;
    function complete(args) {

        if (args.requestType == "beginedit")
        {
            location.href = "@Url.Action("Edit", "CashAccount")?id=" + args.rowData.cash_account_id;
        }
        if (args.requestType == "add") {
            location.href = "@Url.Action("Create", "CashAccount")";
        }
    }
    function EndProcess() {
        var gridObj = $("#Searching").ejGrid("instance");
        //console.log(gridObj);
        gridObj.refreshContent();
    }

</script>





















