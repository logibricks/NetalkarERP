@model Sciffer.Erp.Domain.ViewModel.inv_material_in_VM
@using Newtonsoft.Json
@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm("Edit", "MaterialOut", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal" style="margin-top:10px;">
        <div id="inv_material_out_detail" hidden></div>
        <div id="material_out_id" hidden></div>
        @Html.HiddenFor(a => a.material_out_id)
        @Html.HiddenFor(model => model.material_out_id)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.category_id, "Document Category *", new { @class = "control-label col-md-4" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            <input type="hidden" id="pla_transfer_is_active" name="pla_transfer_is_active" value="true" />
                            @Html.DropDownList("category_id", (System.Web.Mvc.SelectList)ViewBag.category_list, new { @class = "form-control category validinput", @required = true })
                            @Html.ValidationMessageFor(model => model.category_id, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.document_number, new { @class = "control-label col-md-4 hidden" })
                        <div class="col-md-3 col-sm-3 col-xs-12" hidden>
                            @Html.EditorFor(model => model.document_number, new { htmlAttributes = new { @class = "form-control num validinput removedisabled", @required = true, @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.document_number, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.posting_date, "Posting Date *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.posting_date, new { htmlAttributes = new { @class = "form-control postingdocumentdate validinput", @required = true } })
                            @Html.ValidationMessageFor(model => model.posting_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>



                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.vendor_id, "Vendor *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("vendor_id", (System.Web.Mvc.SelectList)ViewBag.vendorlist, "---Select---", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.vendor_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="panel panel-body" role="tabpanel" data-example-id="togglable-tabs">
            <ul id="myTab" class="nav nav-tabs bar_tabs" role="tablist">
                <li class="active"><a data-toggle="tab" href="#sectionA">General</a></li>
                <li><a data-toggle="tab" href="#sectionB">Item</a></li>

            </ul>
            <div class="tab-content">
                <div id="sectionA" class="tab-pane fade in active" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.business_unit_id, "Business Unit *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("business_unit_id", (System.Web.Mvc.SelectList)ViewBag.businesslist, "---Select---", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.business_unit_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.plant_id, "Plant *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("plant_id", (System.Web.Mvc.SelectList)ViewBag.plant_list, "---Select---", new { @class = "form-control", @onchange = "GetStorageLocation(this.value);" })
                                    @Html.ValidationMessageFor(model => model.plant_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ge_number, "Gate Entry Number *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.ge_number, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ge_number, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ge_date, "Gate Entry Date *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.ge_date, new { htmlAttributes = new { @class = "form-control postingdocumentdate validinput", @required = true } })
                                    @Html.ValidationMessageFor(model => model.ge_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.employee_id, "Employee *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("employee_id", (System.Web.Mvc.SelectList)ViewBag.employeelist, "---Select---", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.employee_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

                <div id="sectionB" class="tab-pane fade" style="margin-top:10px;">

                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">

                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    <button type="button" class="btn btn-primary" style="float:right" data-toggle="modal" onclick="clearmodel();" data-target="#myModal"><span class="glyphicon glyphicon-plus"></span>Add Item</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="table-responsive">
                            <table class="table table-responsive table-bordered table-striped" id="ContactGrid">
                                <thead>
                                    <tr>
                                        <th><label>ID</label></th>
                                        <th><label>Sr. No.</label></th>
                                        <th hidden><label>Item Code</label></th>
                                        <th><label>Item</label></th>
                                        <th><label>User Description</label></th>
                                        <th hidden><label>SLoc ID</label></th>
                                        <th><label>SLoc</label></th>
                                        <th hidden><label>Batch ID</label></th>
                                        <th><label>Batch</label></th>
                                        <th hidden><label>Bucket ID</label></th>
                                        <th><label>Bucket</label></th>
                                        <th hidden><label>UOM ID</label></th>
                                        <th><label>UoM</label></th>
                                        <th><label>Reason</label></th>
                                        <th><label>Expected Return Date</label></th>
                                        <th><label>Balance Quantity</label></th>
                                        <th><label>In Quantity</label></th>
                                        <th><label>Action</label></th>
                                        
                                    </tr>
                                </thead>

                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" data-controller="MaterialOut" class="btn btn-success" onclick="TabletoJeson();" id="create" name="Create" style="float:right" />
        </div>
    </div>



        <div>
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
        </div>
}
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Item Details</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Item *
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("item_id", (System.Web.Mvc.SelectList)ViewBag.item_name, "---Select---", new
                       {
                           @class = "form-control col-md-7 col-xs-12",
                           @onchange = "GetUnit(this.value)"
                       })
                        </div>
                    </div>
                </div>
                <input type="hidden" id="material_out_detail_id" />
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            User Description
                        </label>
                        <div class="col-md-7">

                            <input type="text" class="form-control col-md-7 col-xs-12" id="user_description">
                        </div>
                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            SLoc *
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("sloc_id", (System.Web.Mvc.SelectList)ViewBag.sloc_list, "---Select---", new
                       {
                           @class = "form-control col-md-7 col-xs-12"@*, @onchange = "GetUnit()", @style = "width: 100%;"*@ })
                        </div>
                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Batch *
                        </label>

                        <div class="col-md-7">
                            @Html.DropDownList("batch_id", (System.Web.Mvc.SelectList)ViewBag.batchlist, "---Select---", new
                       {
                           @class = "form-control col-md-7 col-xs-12"@*, @onchange = "GetUnit()", @style = "width: 100%;"*@ })
                        </div>
                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Bucket *
                        </label>

                        <div class="col-md-7">
                            @Html.DropDownList("bucket_id", (System.Web.Mvc.SelectList)ViewBag.bucket_list, "---Select---", new
                       {
                           @class = "form-control col-md-7 col-xs-12"@*, @onchange = "GetUnit()", @style = "width: 100%;"*@ })
                        </div>
                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Quantity *
                        </label>
                        <div class="col-md-4">
                            <input type="number" class="form-control" id="quantity">
                        </div>

                        <div class="col-md-3">
                            @Html.DropDownList("uom_id", (System.Web.Mvc.SelectList)ViewBag.Uomlist, "---Select---", new { @class = "form-control col-md-7 col-xs-12" })
                        </div>

                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Reason
                        </label>
                        <div class="col-md-7">
                            <input type="text" class="form-control col-md-7 col-xs-12" id="reason">
                        </div>
                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Expected Return Date
                        </label>
                        <div class="col-md-7">

                            <input type="date" class="form-control col-md-7 col-xs-12" id="er_date">
                        </div>
                    </div>
                </div>

            </div>
            <br />
            <div class="modal-footer">
                <input type="hidden" id="srno" />
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="clearmodel();">Close</button>
                <button type="button" data-dismiss="modal" class="add btn btn-primary">Add </button>
            </div>
        </div>

    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/requirevalidation.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {
            $("#plant_id").select2({
                placeholder: "Select Plant",
                allowClear: true
            });
            $("#item_id").select2({
                placeholder: "Select Item",
                allowClear: true
            });
            $("#sloc_id").select2({
                placeholder: "Select Storage Location",
                allowClear: true
            });
            $("#batch_id").select2({
                placeholder: "Select Storage Location",
                allowClear: true
            });
            $("#vendor_id").select2({
                placeholder: "Select Vendor Name",
                allowClear: true
            });
            $("#business_unit_id").select2({
                placeholder: "Select Business Location",
                allowClear: true
            });
            $("#employee_id").select2({
                placeholder: "Select Employee",
                allowClear: true
            });



        });


        $(document).ready(function () {
            var t = $('#ContactGrid').dataTable();
            var inv = @Html.Raw(JsonConvert.SerializeObject(this.Model));
            var i = 1;
            $.each(inv.inv_material_in_detail_VM,function(key,value){

                t.fnAddData([value.material_in_detail_id,i,value.item_id,value.ITEM_NAME,value.user_description, value.sloc_id,value.storage_location_name,value.batch_id,value.batch_number,value.bucket_id,
                    value.bucket_name,value.quantity,value.uom_id,value.UOM_NAME,value.reason,formatDate(value.er_date),'']);
                i=i+1;

            });
            function formatDate (input) {
                var datePart = input.match(/\d+/g),
                year = datePart[0],
                month = datePart[1],
                day = datePart[2];

                return year+'-'+month+'-'+day;
               // return month+'/'+day+'/'+year;
            }
        });

        $(".add").on("click", function (event) {

            var t = $('#ContactGrid').DataTable();
            var rowCount = t.fnGetData().length;
            var item_id = $("#item_id").val();
            var item_name = $('#item_id option:selected').text();
            var STORAGE_LOCATION = $('#sloc_id').val();
            var STORAGE_LOCATION_NAME = $('#sloc_id option:selected').text();
            var BATCH_ID = $('#batch_id').val();
            var BATCH_NAME = $('#batch_id option:selected').text();
            var bucket_id = $('#bucket_id').val();
            var bucket_id_NAME = $('#bucket_id option:selected').text();
            var reason = $('#reason').val();
            var qty = $("#quantity").val();
            var unit_id = $("#uom_id").val();
            var unit_name = $("#uom_id").find("option:selected").text();
            var er_date = $("#er_date").val();
            var user_description = $("#user_description").val();
            var modi = $("#material_out_detail_id").val();


            if (item_id == '') {
                swal("", "Please Select Item.", "error");
                return false;
            }

            if (STORAGE_LOCATION == '') {
                swal("", "Please Select SLoc.", "error");
                return false;
            }
            if (BATCH_ID == '') {
                swal("", "Please Select Batch.", "error");
                return false;
            }
            if (bucket_id == '') {
                swal("", "Please Select Bucket.", "error");
                return false;
            }
            if (qty == '') {
                swal("", "Please Enter Quantity.", "error");
                return false;
            }


            if ($("#srno").val() == "")
            {
                t.fnAddData(['', rowCount + 1, item_id, item_name, user_description, STORAGE_LOCATION, STORAGE_LOCATION_NAME, BATCH_ID, BATCH_NAME, bucket_id, bucket_id_NAME, qty, unit_id, unit_name, reason, er_date, '']);
            }
            else
            {
                var cc = $("#srno").val();
                cc = parseInt(cc)-1;
                t.fnUpdate([modi, cc + 1, item_id, item_name, user_description, STORAGE_LOCATION, STORAGE_LOCATION_NAME, BATCH_ID, BATCH_NAME, bucket_id, bucket_id_NAME, qty, unit_id, unit_name, reason, er_date, ''], cc)
            }
            clearmodel();

            return true;
        });
  function clearmodel() {
      $("#item_id").val('').trigger('change');
      $("#reason").val('');
      $("#sloc_id").val('').trigger('change');
      $("#batch_id").val('');
      $("#bucket_id").val('');
      $("#quantity").val('');
      $("#uom_id").val('').trigger('change');
      $("#user_description").val('');
      $("#batch_id").val('').trigger('change');
      $("#srno").val('');
      $('#remark').val('');
  }

  function ItemBatchList(id) {
      var t = $('#ContactGrid').DataTable();
      t.fnAddData($('#myModal').val(''));
  }

  $('#ContactGrid').DataTable({
      "bPaginate": false,
      "ordering": false,
      "bfooter": false,
      "info": false,
      "bLengthChange": false,
      "bAutoWidth": false,
      "bFilter": false,
      "bSort": false,
      aoColumns: [
               { sname: "a", bVisible: true },
               { sname: "b" },
               { sname: "c", bVisible: true },
               { sname: "d" },
               { sname: "e", bVisible: true },
               { sname: "f", bVisible: true },
               { sname: "g", bVisible: true },
               { sname: "h", bVisible: true },
               { sname: "i", bVisible: true },
               { sname: "j", bVisible: true },
               { sname: "k", bVisible: true },
               { sname: "l", bVisible: true },
               { sname: "m", bVisible: true },
               { sname: "n", bVisible: true },
               { sname: "o" },
               { sname: "p" },

               {
                   sname: "v", sWidth: "8%",
                   bSortable: false,
                   mRender: function (data, type, full) {
                       return '<img class="edit" src="../../images/writing_file.png" height="20px" width="25px" alt="Edit" onclick="editRow(' + full[1] + ');" /><img class="edit" src="../../images/remove.png" height="20px" width="25px" alt="Delete" onclick="deleteRow(' + full[1] + ');" />';
                   }
               }]

  });



  function TabletoJeson() {
      var t = $('#ContactGrid').DataTable()
      var rowCount = t.fnGetData().length;
      var str;
      var str1;
      var str2;
      var str3;
      $('#inv_material_out_detail').empty();
      for (i = 0; i < rowCount; i++) {
         // console.log(t.fnGetData(i, 3));
          $("#inv_material_out_detail").append('<input type="hidden" id="material_out_detail_id' + i + '" name="material_out_detail_id" value="' + t.fnGetData(i, 0) + '">');
          $("#inv_material_out_detail").append('<input type="" id="item_id' + i + '" name="item_id" value=' + t.fnGetData(i, 2) + '>');
          $("#inv_material_out_detail").append('<input type="" id="user_description' + i + '" name="user_description" value=' + t.fnGetData(i, 4) + '>');
          $("#inv_material_out_detail").append('<input type="" id="uom_id' + i + '" name="uom_id" value=' + t.fnGetData(i, 12) + '>');
          $("#inv_material_out_detail").append('<input type="" id="batch_id' + i + '" name="batch_id" value=' + t.fnGetData(i, 7) + '>');
          $("#inv_material_out_detail").append('<input type="" id="sloc_id' + i + '" name="sloc_id" value=' + t.fnGetData(i, 5) + '>');
          $("#inv_material_out_detail").append('<input type="" id="bucket_id' + i + '" name="bucket_id" value=' + t.fnGetData(i, 9) + '>');
          $("#inv_material_out_detail").append('<input type="" id="quantity' + i + '" name="quantity" value=' + t.fnGetData(i, 11) + '>');
          $("#inv_material_out_detail").append('<input type="" id="reason' + i + '" name="reason" value=' + t.fnGetData(i, 14) + '>');
          $("#inv_material_out_detail").append('<input type="" id="er_date' + i + '" name="er_date" value=' + t.fnGetData(i, 15) + '>');
      }
  }


  //function editRow(args) {

  //    var cc = args.parent('td').parent('tr').index();
  //    console.log(cc);
  //    alert(cc);
  //    $('#myModal').modal('show');
  //    var t = $('#ContactGrid').DataTable()
  //    //var cc = parseInt(t.fnGetData(cc,1)) - 1;
  //    $("#srno").val(cc);
  //    $("#material_out_detail_id").val(t.fnGetData(cc, 1));
  //    console.log(t.fnGetData(cc,0));
  //    $("#item_id").val(t.fnGetData(cc, 2)).trigger('change');
  //    $('#user_description').val( t.fnGetData(cc, 4));
  //    console.log (t.fnGetData(cc, 4));
  //    $('#sloc_id').val(t.fnGetData(cc, 5)).trigger('change');
  //    $('#batch_id').val(t.fnGetData(cc,7)).trigger('change');
  //    $('#bucket_id').val(t.fnGetData(cc,9)).trigger('change');
  //    $('#quantity').val(t.fnGetData(cc,11));
  //    $('#uom_id').val(t.fnGetData(cc,12)).trigger('change');
  //    $('#reason').val(t.fnGetData(cc,14));
  //    $('#er_date').val(t.fnGetData(cc,15));


        //}

  function editRow() {
      $('#myModal').modal('show');
      var t = $('#ContactGrid').DataTable()
      var cc = parseInt(arguments[0]) - 1;
      $("#srno").val(t.fnGetData(cc)[1]);
      $("#material_out_detail_id").val(t.fnGetData(cc)[0]);
      $("#item_id").val(t.fnGetData(cc)[2]).trigger('change');
      $('#user_description').val(t.fnGetData(cc)[4]);
      $('#sloc_id').val(t.fnGetData(cc)[5]).trigger('change');
      $('#batch_id').val(t.fnGetData(cc)[7]).trigger('change');
      $('#bucket_id').val(t.fnGetData(cc)[9]).trigger('change');
      $('#quantity').val(t.fnGetData(cc)[11]);
      $('#uom_id').val(t.fnGetData(cc)[12]).trigger('change');
      $('#reason').val(t.fnGetData(cc)[14]);
      $('#er_date').val(t.fnGetData(cc)[15]).trigger('change');

      document.getElementById('item_id').setAttribute('disabled', 'disabled');
      document.getElementById('user_description').setAttribute('disabled', 'disabled');
      document.getElementById('sloc_id').setAttribute('disabled', 'disabled');
      document.getElementById('batch_id').setAttribute('disabled', 'disabled');
      document.getElementById('bucket_id').setAttribute('disabled', 'disabled');
      document.getElementById('uom_id').setAttribute('disabled', 'disabled');
      document.getElementById('reason').setAttribute('disabled', 'disabled');
      document.getElementById('er_date').setAttribute('disabled', 'disabled');

  }


  function deleteRow() {
      var t = $('#ContactGrid').DataTable()
      var len = t.fnGetData.length;
      var pos;
      for (var l = 0; l <=len; l++) {
          if (t.fnGetData(l) != null) {
              if (t.fnGetData(l)[1] == arguments[0]) {
                  pos = l;
              }
          }
      }

      var id = t.fnGetData(pos)[0];

      var deleteids = $("#deleteids").val();

      swal({
          title: "Are you sure?",

          type: "warning",
          showCancelButton: true,
          confirmButtonClass: "btn-danger",
          confirmButtonText: "Yes, delete it!",
          closeOnConfirm: true

      },



function (isConfirm) {
    if (isConfirm) {

        $("#deleteids").val(deleteids + "~" + id);
        t.fnDeleteRow(pos);

    }


});

  }

  function GetDocumentNumber(id) {
      if (id != '') {
          $.ajax({
              type: 'GET',
              url: '/Generic/GetDocumentNumbering',
              data: { id: id },
              success: function (ITEM) {
                  $('#goods_issue_number').val(ITEM);
              },
              error: function (emp) {
                  $('#goods_issue_number').val('');
              }
          });
      }
      else {
          $('#goods_issue_number').val('');
      }
  }

  function GetUnit(id) {
      if (id != '') {
          $.ajax({
              type: 'GET',
              url: '@Url.Action("GetUnitofItem", "Generic")',
              data: { id: id },
              success: function (ITEM) {
                  $("#uom_id").val(ITEM.item);
              },
              error: function (emp) {
                  $('#uom_id').val('');
              }
          });
      }
      else {
          $('#uom_id').val('');
      }

  }
  function onSelect2(args) {
      var id = "";
      var id = args.value.split("-")[0];
      GetUnit(id);
  }
  $("#STORAGE_LOCATION_ID").html("");
  $("#STORAGE_LOCATION_ID").append($('<option></option>').val("").html("---Select---"));
  $('#plant_id').change(function () {
      GetStorageLocation($('#plant_id').val());
  });


  function GetStorageLocation(id) {
      if (id == "") {
          id = 0;
      }
      $.ajax({
          url: '@Url.Action("GetStorageLocation", "Generic")',
          type: "GET",
          dataType: "JSON",
          data: { id: id },
          success: function (id) {
              $("#sloc_id").html(""); // clear before appending new list
              $("#sloc_id").append($('<option></option>').val("").html("---Select---"));
              $.each(id, function (i, cycle) {
                  $("#sloc_id").append(
                      $('<option></option>').val(cycle.storage_location_id).html(cycle.storage_location_name));
              });
          }
      });
  }
    </script>
}