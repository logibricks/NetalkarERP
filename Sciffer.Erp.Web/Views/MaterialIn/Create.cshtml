@model Sciffer.Erp.Domain.ViewModel.inv_material_in_VM

@{
    ViewBag.Title = "Create";
}
@using (Html.BeginForm("Create", "MaterialIn", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal" style="margin-top:10px;">
        <div hidden id="inv_material_in_detail"></div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.category_id, "Document Category *", new { @class = "control-label col-md-4" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            <input type="hidden" id="pla_transfer_is_active" name="pla_transfer_is_active" value="true" />
                            @Html.DropDownList("category_id", (System.Web.Mvc.SelectList)ViewBag.category_list, new { @class = "form-control category validinput setPlant", @required = true })
                            @Html.ValidationMessageFor(model => model.category_id, "", new { @class = "text-danger" })
                        </div>
                        @*@Html.LabelFor(model => model.document_number, new { @class = "control-label col-md-4 hidden" })
                            <div class="col-md-3 col-sm-3 col-xs-12" hidden>
                                @Html.EditorFor(model => model.document_number, new { htmlAttributes = new { @class = "form-control num validinput removedisabled", @required = true, @disabled = "disabled" } })
                                @Html.ValidationMessageFor(model => model.document_number, "", new { @class = "text-danger" })
                            </div>*@
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        <input type="button" value="Select Material Out" name="materialout" id="materialout" class="btn btn-primary" />
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.posting_date, "Posting Date *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.posting_date, new { htmlAttributes = new { @class = "form-control postingdocumentdate postingdate validinput", @required = true } })
                            @Html.ValidationMessageFor(model => model.posting_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.vendor_id, "Vendor *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12"> 
                            @Html.DropDownList("vendor_id", (System.Web.Mvc.SelectList)ViewBag.vendorlist, "---Select---", htmlAttributes: new { @class = "form-control removedisabled", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.vendor_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-body" role="tabpanel" data-example-id="togglable-tabs">
            <ul id="myTab" class="nav nav-tabs bar_tabs" role="tablist">
                <li class="active"><a data-toggle="tab" href="#sectionA">General</a></li>
                <li><a data-toggle="tab" href="#sectionB">Item</a></li>

            </ul>
            <div class="tab-content">
                <div id="sectionA" class="tab-pane fade in active" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.business_unit_id, "Business Unit *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("business_unit_id", (System.Web.Mvc.SelectList)ViewBag.businesslist, "---Select---", htmlAttributes: new { @class = "form-control validinput" })
                                    @Html.ValidationMessageFor(model => model.business_unit_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.plant_id, "Plant *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("plant_id", (System.Web.Mvc.SelectList)ViewBag.plant_list, "---Select---", new { @class = "form-control removedisabled selectedbycategory", @disabled = "disabled", @onchange = "GetStorageLocation(this.value);" })
                                    @Html.ValidationMessageFor(model => model.plant_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ge_number, "Gate Entry Number *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.ge_number, new { htmlAttributes = new { @class = "form-control validinput", @required = true } })
                                    @Html.ValidationMessageFor(model => model.ge_number, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ge_date, "Gate Entry Date *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.ge_date, new { htmlAttributes = new { @class = "form-control postingdocumentdate validinput", @required = true } })
                                    @Html.ValidationMessageFor(model => model.ge_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.employee_id, "Employee *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("employee_id", (System.Web.Mvc.SelectList)ViewBag.employeelist, "---Select---", htmlAttributes: new { @class = "form-control validinput" })
                                    @Html.ValidationMessageFor(model => model.employee_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                <label class="control-label col-md-4">
                                    Material Out Number
                                </label>
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("material_out_document_number", Enumerable.Empty<SelectListItem>(), "---Select---", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.material_out_document_number, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>


                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.vendor_invoice_no, "Vendor Invoice No. *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.vendor_invoice_no, new { htmlAttributes = new { @class = "form-control validinput", @required = true } })
                                    @Html.ValidationMessageFor(model => model.vendor_invoice_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.vendor_invoice_date, "Vendor Invoice Date *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.vendor_invoice_date, new { htmlAttributes = new { @class = "form-control validinput ", @required = true } })
                                    @Html.ValidationMessageFor(model => model.vendor_invoice_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

                <div id="sectionB" class="tab-pane fade" style="margin-top:10px;">

                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">

                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">

                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="table-responsive">
                            <table class="table table-responsive table-bordered table-striped" id="ContactGrid1">
                                <thead>
                                    <tr>
                                        <th hidden><label>ID</label></th><!--0-->
                                        <th><label>Sr. No.</label></th><!--1-->
                                        <th hidden><label>Item Code</label></th><!--2-->
                                        <th><label>Item</label></th><!--3-->
                                        <th><label>User Description</label></th><!--4-->
                                        @*<th hidden><label>SLoc ID</label></th>
                                        <th><label>SLoc</label></th>
                                        <th hidden><label>Batch ID</label></th>
                                        <th><label>Batch</label></th>
                                        <th hidden><label>Bucket ID</label></th>
                                        <th><label>Bucket</label></th>*@
                                        <th hidden><label>UOM ID</label></th><!--5-->
                                        <th><label>UoM</label></th><!--6-->
                                        <th><label>Reason</label></th><!--7-->
                                        <th><label>Expected Return Date</label></th><!--8-->
                                        <th><label>Balance Quantity</label></th><!--9-->
                                        <th><label>In Quantity</label></th><!--10-->
                                        <th hidden><label>MODI</label></th><!--11-->
                                        <th><label>Action</label></th><!--12-->
                                    </tr>
                                </thead>

                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" data-controller="MaterialIn" class="btn btn-success" onclick="TabletoJeson();" id="create" name="Create" style="float:right" />
        </div>
    </div>

        <div>
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
        </div>
}

<div class="modal fade" id="myModal1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content" style="align-content:center;width:900px">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Material Out</h4>
            </div>
            <div class="modal-body" style="max-height: 500px; overflow-y: auto;">
                <div class="row">
                    <div class="col-lg-6 col-sm-6">
                        <div class="form-group">
                            <label class="control-label col-md-4">
                                Vendor
                            </label>
                            <div class="col-md-8 col-sm-8 col-xs-12">
                                @Html.DropDownList("vendor_id1", (System.Web.Mvc.SelectList)ViewBag.vendorlist, "---Select---", new { @class = "form-control", @onchange = "GetMOList(this.value);" })
                                @Html.ValidationMessageFor(model => model.vendor_id, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6 col-sm-6">
                        <div class="form-group">
                            <label class="control-label col-md-3">
                                Material Out Number
                            </label>
                            <div class="col-md-9 col-sm-9 col-xs-12">
                                @Html.DropDownList("material_out_id", Enumerable.Empty<SelectListItem>(), "---Select---", new { @class = "form-control", @onchange = "GetMaterialInforVendor(this.value);" })
                                @Html.ValidationMessageFor(model => model.vendor_id, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <div class="table-responsive">
                            <table class="table table-responsive table-bordered table-striped table-fixed" id="ContactGrid">
                                <thead>
                                    <tr>
                                        <th hidden><label>ID</label></th><!--0-->
                                        <th><label>Sr. No.</label></th><!--1-->
                                        <th hidden><label>Item Code</label></th><!--2-->
                                        <th><label>Item</label></th><!--3-->
                                        <th><label>User Description</label></th><!--4-->
                                        @*<th hidden><label>SLoc ID</label></th>
                                        <th><label>SLoc</label></th>
                                        <th hidden><label>Batch ID</label></th>
                                        <th><label>Batch</label></th>
                                        <th hidden><label>Bucket ID</label></th>
                                        <th><label>Bucket</label></th>*@
                                        <th hidden><label>UOM ID</label></th><!--5-->
                                        <th><label>UoM</label></th><!--6-->
                                        <th><label>Reason</label></th><!--7-->
                                        <th><label>Expected Return Date</label></th><!--8-->
                                        <th><label>Balance Quantity</label></th><!--9-->
                                        <th><label>In-Quantity</label></th><!--10-->
                                        <th><label>Use</label></th><!--11-->

                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" id="addMO" data-dismiss="modal" class="addMO btn btn-primary">Add</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Item Details</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Item 
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("item_id", (System.Web.Mvc.SelectList)ViewBag.item_name, "---Select---", new
                       {
                           @class = "form-control col-md-7 col-xs-12",
                           @onchange = "GetUnit(this.value)"
                       })
                        </div>
                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            User Description*
                        </label>
                        <div class="col-md-7">

                            <input type="text" class="form-control col-md-7 col-xs-12" id="user_description">
                        </div>
                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            In Quantity *
                        </label>
                        <div class="col-md-4">
                            <input type="number" class="form-control" id="quantity">
                        </div>

                        <div class="col-md-3">
                            @Html.DropDownList("uom_id", (System.Web.Mvc.SelectList)ViewBag.Uomlist, "---Select---", new { @class = "form-control col-md-7 col-xs-12" })
                        </div>

                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Balance Quantity
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control" id="balance_qty" readonly="readonly">
                        </div>
                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Reason
                        </label>
                        <div class="col-md-7">
                            <input type="text" class="form-control col-md-7 col-xs-12" id="reason">
                        </div>
                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Expected Return Date
                        </label>
                        <div class="col-md-7">

                            <input type="text" class="form-control col-md-7 col-xs-12" id="er_date">
                        </div>
                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3 hidden">
                            ID
                        </label>
                        <div class="col-md-7">
                            <input type="hidden" class="form-control" id="material_out_detail_id">
                        </div>
                    </div>
                </div>

            </div>
            <br />
            <div class="modal-footer">
                <input type="hidden" id="srno" />
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="clearmodel();">Close</button>
                <button type="button" data-dismiss="modal" class="add btn btn-primary">Add </button>
            </div>
        </div>

    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/requirevalidation.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {
            $("#plant_id").select2({
                placeholder: "Select Plant",
                allowClear: true
            });
            $("#item_id").select2({
                placeholder: "Select Item",
                allowClear: true
            });
            //$("#sloc_id").select2({
            //    placeholder: "Select Storage Location",
            //    allowClear: true
            //});
            //$("#vendor_id").select2({
            //    placeholder: "Select Vendor",
            //    allowClear: true
            //});
            $("#material_out_id").select2({
                placeholder: "Select Material Out Number",
                allowClear: true
            });
            $("#vendor_id1").select2({
                placeholder: "Select Vendor Name",
                allowClear: true
            });
            $("#business_unit_id").select2({
                placeholder: "Select Business Location",
                allowClear: true
            });
            $("#employee_id").select2({
                placeholder: "Select Employee",
                allowClear: true
            });
         
            document.getElementById('posting_date').valueAsDate = new Date();
            document.getElementById('ge_date').valueAsDate = new Date();
        });

         @*function GetDocumentCategory(id) {
             if (id == "") {
                 id = 0;
             }
             $.ajax({
                 url: '@Url.Action("GetCategoryListByPlant", "Generic")',
                 type: "GET",
                 dataType: "JSON",
                 data: { id: 219, plant_id: id },
                 success: function (id) {
                     $("#category_id").html(""); // clear before appending new list
                     $.each(id, function (i, cycle) {
                         $("#category_id").append(
                             $('<option></option>').val(cycle.document_numbring_id).html(cycle.category));
                     });
                 }
             });
         }*@
        //$("#Back").click(function () {
        //    window.location.href = "../GoodsIssue/Index";
        //}
        //);
        var checkedarray1 = [];
        $("#materialout").on("click", function (event) {
            var t = $('#ContactGrid').DataTable();
            t.fnClearTable();

            $("#po_number").val('').trigger("change");
            $("#po_id1").val("").trigger("change");
            $("#vendor_id").val("").trigger("change");
            $('#myModal1').modal('show');
            $('#example-select-all').attr('checked', false);

            $("#vendor_id1").val('').trigger('change');
            $("#material_out_id").val('').trigger('change');
        })



        $(".add").on("click", function (event) {

            var t = $('#ContactGrid1').DataTable();
            var rowCount = t.fnGetData().length;
            var item_id = $("#item_id").val();
            var item_name = $('#item_id option:selected').text();
            //var STORAGE_LOCATION = $('#sloc_id').val();
            //var STORAGE_LOCATION_NAME = $('#sloc_id option:selected').text();
            //var BATCH_ID = $('#batch_id').val();
            //var BATCH_NAME = $('#batch_id option:selected').text();
            //var bucket_id = $('#bucket_id').val();
            //var bucket_id_NAME = $('#bucket_id option:selected').text();
            //var reason = $('#reason').val();
            var qty = $("#quantity").val();
            var balance_qty = $("#balance_qty").val();
            var unit_id = $("#uom_id").val();
            var unit_name = $("#uom_id").find("option:selected").text();
            var er_date = $("#er_date").val();
            var user_description = $("#user_description").val();
            var midi = $("#material_in_detail_id").val();
            var modi = $("#material_out_detail_id").val();
            

            if (item_id == '') {
                swal("", "Please Select Item.", "error");
                return false;
            }

            //if (STORAGE_LOCATION == '') {
            //    swal("", "Please Select SLoc.", "error");
            //    return false;
            //}
            //if (BATCH_ID == '') {
            //    swal("", "Please Select Batch.", "error");
            //    return false;
            //}
            //if (bucket_id == '') {
            //    swal("", "Please Select Bucket.", "error");
            //    return false;
            //}
            if (qty == '') {
                swal("", "Please Enter Quantity.", "error");
                return false;
            }
            if (qty < 0) {
                swal("", "Material-In quantity Should be greater than zero!", "error");
                return false;
            }
          
            if (qty > balance_qty) {
                swal("", "Please Enter correct quantity", "warning");
                return false;
            }
            else {

                if ($("#srno").val() == "") {
                    t.fnAddData(['', rowCount + 1, item_id, item_name, user_description, unit_id, unit_name, reason, er_date, parseFloat(balance_qty).toFixed(2), qty, modi, '']);
                }
                else {
                    var cc = $("#srno").val();
                    cc = parseInt(cc) - 1;
                    t.fnUpdate(['', cc + 1, item_id, item_name, user_description, unit_id, unit_name, reason, er_date, parseFloat(balance_qty).toFixed(2), qty, modi, ''], cc)
                }
            }
            clearmodel();

            return true;
        });


  function clearmodel() {
      $("#item_id").val('').trigger('change');
      $("#reason").val('');
      //$("#sloc_id").val('').trigger('change');
      //$("#batch_id").val('');
      //$("#bucket_id").val('');
      $("#quantity").val('');
      $("#uom_id").val('').trigger('change');
      $("#user_description").val('');
      $("#batch_id").val('').trigger('change');
      $("#srno").val('');
      $('#remark').val('');

  }

  $('#ContactGrid').DataTable({
      "bPaginate": false,
      "ordering": false,
      "bfooter": false,
      "info": false,
      "bLengthChange": false,
      "bAutoWidth": false,
      "bFilter": false,
      "bSort": false,
      "columns": [
  { "data": "material_out_detail_id", bVisible: false },
  { "data": "rowIndex",bVisible:true},
  { "data": "item_id",  bVisible: false, },
  { "data": "item_name", },
  { "data": "user_description", bVisible: true, },
  //{ "data": "sloc_id", bVisible: false, },
  //{ "data": "storage_location_name", bVisible: true, },
  //{ "data": "batch_id",  bVisible: false, },
  //{ "data": "batch_number", },
  //{ "data": "bucket_id",  bVisible: false, },
  //{ "data": "bucket_name",},
  { "data": "uom_id", bVisible: false, },
  { "data": "UOM_NAME", bVisible: true, },
  { "data": "reason",  },
  { "data": "er_date", bVisible: true, },
  { "data": "balance_qty", bVisible: true, sClass: "right", 'render': function (data, type, full) { return  parseFloat(data).toFixed(2) } },
  { "data": "rowIndex", sWidth: "10%", 'render': function (data, type, full) { return '<input type="number" id="quantity' + data + '" class="quant form-control"/>' } },
  { "data": "rowIndex", sWidth: "4%", "title": '<input type="checkbox" name="selectallbatch" value="0" id="selectallbatch">', 'render': function (data, type, full) { return '<input type="checkbox" id="batchselect" class="price check1"/>' } },

      ]
  });

  $('#ContactGrid1').DataTable({
      "bPaginate": false,
      "ordering": false,
      "bfooter": false,
      "info": false,
      "bLengthChange": false,
      "bAutoWidth": false,
      "bFilter": false,
      "bSort": false,
      aoColumns: [
               { sname: "a", bVisible: false },
               { sname: "b", sWidth: "5%" },
               { sname: "c", bVisible: false },
               { sname: "d", bVisible: true },
               { sname: "e", sWidth: "10%"  },
               //{ sname: "f", bVisible: false },
               //{ sname: "g", bVisible: true },
               //{ sname: "h", bVisible: false },
               //{ sname: "i", bVisible: true },
               //{ sname: "j", bVisible: false },
               //{ sname: "k", },
               { sname: "l", bVisible: false },
               { sname: "m", bVisible: true },
               { sname: "n", bVisible: true },
               { sname: "o", bVisible: true },
               { sname: "p", sWidth: "8%", bVisible: true, },
               { sname: "q", bVisible: true  },
               { sname: "s", bVisible: false, },
               {
                   sname: "r", sWidth: "8%",
                   bSortable: false,
                   mRender: function (data, type, full) {
                       return '<img class="edit" src="../images/writing_file.png" height="20px" width="25px" alt="Edit" onclick="editRow(' + full[1] + ');" /><img class="edit" src="../images/remove.png" height="20px" width="25px" alt="Delete" onclick="deleteRow(' + full[1] + ');" />';
                   }
               }]
  });

  $("#addMO").click(function () {

      //var o = $("#ContactGrid").DataTable();
      //var rowCount = o.fnGetData().length;
      //var i = parseInt($(this).parent('td').parent('tr').index());

      //var balance_qty = o.fnGetData((i+1), 15);
      //var qty = $("#quantity").val();

      ////var balance_qty = $("#balance_qty").val();

      //if (balance_qty < qty) {
      //    swal("", "Material-In quantity Should be equal or less than Balance Quantity!", "warning");
      //}
      //else {

      $("#vendor_id").html(""); // clear before appending new list
      //$("#vendor_id").append($('<option></option>').val(0).html("---Select---"));
      $("#vendor_id").append($('<option></option>').val($("#vendor_id1").val()).html($("#vendor_id1 option:selected").text()));
      console.log($("#vendor_id1").val());
      $("#vendor_id").val($("#vendor_id1").val()).trigger('change');


          var t1 = $("#ContactGrid1").DataTable();
          var rowCount1 = t1.fnGetData().length;
          var t = $("#ContactGrid").DataTable();
          var rowCount = t.fnGetData().length;
          t1.fnClearTable();
          var z = 1;
          var y = 1;
          var s = 0;
          var id = 0;

          var material_out_id = $("#material_out_id").val();


          var i = 0;
          var s = 0;
          var j = 1;
          var k = 1;
          var chkvalidate = 0;
          var chknegative = 0;
          for (var l = 0; l <= checkedarray1.length - 1; l++)
          {
              s = checkedarray1[l];
              var str = $("#quantity" + (s + 1)).val();
              var balance = t.fnGetData(s, 9);
              if (parseFloat(balance) < parseFloat(str)) {
                  chkvalidate = chkvalidate + 1;
              }
              if(parseFloat(str)<=0)
              {
                  chknegative = chknegative + 1;
              }
             
          }
          if (chkvalidate > 0)
          {
              swal("", "Material-In quantity Should be equal or less than Balance Quantity!", "error");
              return false;
          }
          if (chknegative > 0) {
              swal("", "Material-In quantity Should be greater than zero!", "error");
              return false;
          }
          for (var l = 0; l <= checkedarray1.length - 1; l++) {
              s = checkedarray1[l];
              try {
                  var str = $("#quantity" + (s + 1)).val();
                  t1.fnAddData(['', y, t.fnGetData(s, 2), t.fnGetData(s, 3), t.fnGetData(s, 4),  t.fnGetData(s, 5), t.fnGetData(s, 6), t.fnGetData(s, 7), t.fnGetData(s, 8), t.fnGetData(s, 9), $("#quantity" + (s + 1)).val(), t.fnGetData(s, 0), '']);

                  y = y + 1;
              }
              catch (err) {
              }
          }
          checkedarray1.length = 0;

          if (material_out_id != 0) {
              $.ajax({
                  url: '@Url.Action("GetMaterialInforVendor", "MaterialIn")',
                  type: "GET",
                  dataType: "JSON",
                  data: { material_out_id: $("#material_out_id").val() },
                  success: function (tag) {

                      $.each(tag, function (i, ITEM) {
                          console.log(ITEM);
                          $("#plant_id").val(ITEM.plant_id).trigger("change");
                          //$("#vendor_id").val(ITEM.vendor_id).trigger("change");                          
                          $("#business_unit_id").val(ITEM.business_unit_id).trigger("change");
                          $("#employee_id").val(ITEM.employee_id).trigger("change");
                          p_id = ITEM.plant_id;
                          if (p_id != "") {
                              //GetDocumentCategory(p_id);
                          }
                      });

                  },
                  error: function (emp) {

                      $('#plant_id').val('');
                      $('#posting_date').val('');
                      //$('#vendor_id').val('');
                      $('#business_unit_id').val('');
                      $('#ge_number').val('');
                      $('#ge_date').val('');
                      $('#employee_id').val('');

                  }
              });
          }
          else {
              $('#plant_id').val('');
              $('#posting_date').val('');
              //$('#vendor_id').val('');
              $('#business_unit_id').val('');
              $('#ge_number').val('');
              $('#ge_date').val('');
              $('#employee_id').val('');
          }


          function clearmodel() {
              $("#item_id").val('').trigger('change');
              $("#reason").val('');
              $("#sloc_id").val('').trigger('change');
              $("#batch_id").val('');
              $("#bucket_id").val('');
              $("#quantity").val('');
              $("#uom_id").val('').trigger('change');
              $("#user_description").val('');
              $("#batch_id").val('').trigger('change');
              $("#srno").val('');
              $('#remark').val('');

          }
      //}
              });


  $(document).on('click', '.check1', function () {
      var sum = 0;
      var t = $("#ContactGrid").DataTable();
      var rowCount = t.fnGetData().length;
      var i = parseInt($(this).parent('td').parent('tr').index());
      var deletes = i;

      if ($(this).is(':checked')) {

          var abc = $('#quantity' + (i + 1)).val();
          if (abc == '') {
              var qnt = t.fnGetData(i, 15);
              $('#quantity' + (i + 1)).val(qnt);
          }
          checkedarray1.push(i);
          var text = parseFloat($('#quantity' + (i + 1)).val());

          $("#quantity").val(text);
          //$('#quantity' + (j + 1)).attr("disabled", "disabled");
      }
      else {

          var text = parseFloat($('#quantity' + (i + 1)).val());
          var checkedIndex = checkedarray1.indexOf(deletes);
          checkedarray1.splice(checkedIndex, 1);

      }
  });


  $('#selectallbatch').on('click', function () {
      $('input[type="checkbox"]').attr('disabled', false);
      checkedarray1.length = 0;
      var total = 0;
      var t = $('#ContactGrid').DataTable();
      var trlen = t.fnGetData().length;
      if ($(this).is(':checked')) {
          $('input[type="checkbox"]', '#ContactGrid').prop('checked', true);

          if (trlen > 0) {
              for (var j = 0; j <= trlen - 1; j++) {
                  var qnt = t.fnGetData(j, 10);

                //  $('#quantity' + (j + 1)).val(qnt);
                  checkedarray1.push(j);
              }
              $('#quantity').val(total);
              $('#quantity' + (i + 1)).attr("disabled", "disabled");
          }
      }
      else {
          sum1 = 0;
          checkedarray1.length = 0;
          $('input[type="checkbox"]', '#ContactGrid').prop('checked', false
              );
          $('#quantity').val('');
          $('#quantity' + (i + 1)).removeAttr("disabled");
      }
      $('input[type="checkbox"]').removeAttr('disabled');
  });

  function TabletoJeson() {
      //$();
     
      var t = $('#ContactGrid1').DataTable()
      var rowCount = t.fnGetData().length;
      var str;
      var str1;
      var str2;
      var str3;
      $('#inv_material_in_detail').empty();
      for (i = 0; i < rowCount; i++) {
          // console.log(t.fnGetData(i, 3));

          $("#inv_material_in_detail").append('<input type="hidden" id="material_in_detail_id' + i + '" name="material_in_detail_id" value="' + t.fnGetData(i, 0) + '">');
          $("#inv_material_in_detail").append('<input type="" id="item_id' + i + '" name="item_id" value=' + t.fnGetData(i, 2) + '>');
          $("#inv_material_in_detail").append('<input type="" id="user_description' + i + '" name="user_description" value=' + t.fnGetData(i, 4) + '>');
          $("#inv_material_in_detail").append('<input type="" id="uom_id' + i + '" name="uom_id" value=' + t.fnGetData(i, 5) + '>');
          //$("#inv_material_in_detail").append('<input type="" id="batch_id' + i + '" name="batch_id" value=' + t.fnGetData(i, 7) + '>');
          //$("#inv_material_in_detail").append('<input type="" id="sloc_id' + i + '" name="sloc_id" value=' + t.fnGetData(i, 5) + '>');
         // $("#inv_material_in_detail").append('<input type="" id="bucket_id' + i + '" name="bucket_id" value=' + t.fnGetData(i, 9) + '>');
          $("#inv_material_in_detail").append('<input type="" id="quantity' + i + '" name="quantity" value=' + t.fnGetData(i, 10) + '>');
          $("#inv_material_in_detail").append('<input type="" id="reason' + i + '" name="reason" value=' + t.fnGetData(i, 7) + '>');
          $("#inv_material_in_detail").append('<input type="" id="er_date' + i + '" name="er_date" value=' + t.fnGetData(i, 8) + '>');
          $("#inv_material_in_detail").append('<input type="" id="balance_qty' + i + '" name="balance_qty" value=' + t.fnGetData(i, 9) + '>');
          $("#inv_material_in_detail").append('<input type="" id="material_out_detail_id' + i + '" name="material_out_detail_id" value=' + t.fnGetData(i, 11) + '>');
      }
  }

  function editRow() {
      $('#myModal').modal('show');
      var t = $('#ContactGrid1').DataTable()
      var cc = parseInt(arguments[0]) - 1;
      $("#srno").val(t.fnGetData(cc)[1]);
      $("#material_in_detail_id").val(t.fnGetData(cc)[0]);
      $("#item_id").val(t.fnGetData(cc)[2]).trigger('change');
      $('#user_description').val(t.fnGetData(cc)[4]);
      //$('#sloc_id').val(t.fnGetData(cc)[5]).trigger('change');
      //$('#batch_id').val(t.fnGetData(cc)[7]).trigger('change');
      //$('#bucket_id').val(t.fnGetData(cc)[9]).trigger('change');
      $('#quantity').val(t.fnGetData(cc)[10]);
      $('#uom_id').val(t.fnGetData(cc)[5]).trigger('change');
      $('#balance_qty').val(t.fnGetData(cc)[9]);
      $('#reason').val(t.fnGetData(cc)[7]);
      $('#er_date').val(t.fnGetData(cc)[8]);
      $('#material_out_detail_id').val(t.fnGetData(cc)[11]);
      document.getElementById('item_id').setAttribute('disabled', 'disabled');
      document.getElementById('user_description').setAttribute('disabled', 'disabled');
      //document.getElementById('batch_id').setAttribute('disabled', 'disabled');
      //document.getElementById('bucket_id').setAttribute('disabled', 'disabled');
      document.getElementById('uom_id').setAttribute('disabled', 'disabled');
      document.getElementById('reason').setAttribute('disabled', 'disabled');
      document.getElementById('er_date').setAttribute('disabled', 'disabled');
      //document.getElementById('balance_qty').setAttribute('disabled', 'disabled');
  }

  function deleteRow() {
      var t = $('#ContactGrid1').DataTable()
      var len = t.fnGetData.length;
      var pos;
      for (var l = 0; l <=len; l++) {
          if (t.fnGetData(l) != null) {
              if (t.fnGetData(l)[1] == arguments[0]) {
                  pos = l;
              }
          }
      }

      var id = t.fnGetData(pos)[0];

      var deleteids = $("#deleteids").val();

      swal({
          title: "Are you sure?",

          type: "warning",
          showCancelButton: true,
          confirmButtonClass: "btn-danger",
          confirmButtonText: "Yes, delete it!",
          closeOnConfirm: true

      },



function (isConfirm) {
    if (isConfirm) {

        $("#deleteids").val(deleteids + "~" + id);
        t.fnDeleteRow(pos);

    }
});
 }
  function GetDocumentNumber(id) {
      if (id != '') {
          $.ajax({
              type: 'GET',
              url: '/Generic/GetDocumentNumbering',
              data: { id: id },
              success: function (ITEM) {
                  $('#goods_issue_number').val(ITEM);
              },
              error: function (emp) {
                  $('#goods_issue_number').val('');
              }
          });
      }
      else {
          $('#goods_issue_number').val('');
      }
  }

  function GetUnit(id) {
      if (id != '') {
          $.ajax({
              type: 'GET',
              url: '@Url.Action("GetUnitofItem", "Generic")',
              data: { id: id },
              success: function (ITEM) {
                  $("#uom_id").val(ITEM.item);
              },
              error: function (emp) {
                  $('#uom_id').val('');
              }
          });
      }
      else {
          $('#uom_id').val('');
      }

  }

        function GetMaterialInforVendor(id) {
            var material_out_id = $("#material_out_id").val();

            var i = 0;
            var s = 0;
            var j = 1;
            var k = 1;
            var t = $('#ContactGrid').DataTable();

            t.fnClearTable();

            if (material_out_id != 0) {
                $.ajax({
                    url: '@Url.Action("GetMaterialInforVendor", "MaterialIn")',
                    type: "GET",
                    dataType: "JSON",
                    data: { material_out_id: $("#material_out_id").val() },
                    success: function (tag) {
                        console.log(tag);
                        //for (i = 0; i < tag.length; i++) {
                        //    tag[i].posting_date = 
                        //}
                        t.fnAddData(tag);

                    }
                });
            }
        }


        function GetMOList(id) {
            if (id == "") {
                id = 0;
            }
            $.ajax({
                url: "@Url.Action("GetMOList", "MaterialIn")",
                type: "GET",
            dataType: "JSON",
            data: { vendor_id: id },
            success: function (po) {
                $("#material_out_id").html(""); // clear before appending new list
                $("#material_out_id").append($('<option></option>').val(0).html(""));
                $.each(po, function (i, cycle) {
                    
                    $("#material_out_document_number").append(
                    $('<option></option>').val(cycle.material_out_id).html(cycle.document_number));

                    $("#material_out_id").append(
                    $('<option></option>').val(cycle.material_out_id).html(cycle.document_number));
                    
                });
            }
        });
        }

  function onSelect2(args) {
      var id = "";
      var id = args.value.split("-")[0];
      GetUnit(id);
  }
  $("#STORAGE_LOCATION_ID").html("");
  $("#STORAGE_LOCATION_ID").append($('<option></option>').val("").html("---Select---"));
  $('#plant_id').change(function () {
      GetStorageLocation($('#plant_id').val());
  });


  $("#material_out_id").change(function () {
      $("#material_out_document_number").val($(this).val());
  })


  function GetStorageLocation(id) {
      if (id == "") {
          id = 0;
      }
      $.ajax({
          url: '@Url.Action("GetStorageLocation", "Generic")',
          type: "GET",
          dataType: "JSON",
          data: { id: id },
          success: function (id) {
              $("#sloc_id").html(""); // clear before appending new list
              $("#sloc_id").append($('<option></option>').val("").html("---Select---"));
              $.each(id, function (i, cycle) {
                  $("#sloc_id").append(
                      $('<option></option>').val(cycle.storage_location_id).html(cycle.storage_location_name));
              });
          }
      });
  }
    </script>
}