@model Sciffer.Erp.Domain.ViewModel.ref_plan_maintenance_VM
@using Newtonsoft.Json
@{
    ViewBag.Title = "Edit";
}
<div class="loading">Loading &#8230;</div>
@using (Html.BeginForm("Edit", "PlanMaintenance", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div id="ParameterDetails"></div>
    <div id="ComponentDetails"></div>
    <div class="form-horizontal" style="margin-top:10px;">
        <div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(x => x.plan_maintenance_id)
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.category_id,"Category *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-5 col-sm-5 col-xs-12">
                            @Html.DropDownList("category_id", (System.Web.Mvc.SelectList)ViewBag.categorylist, new { @class = "form-control category validinput setPlant removedisabled",@disabled="disabled", @required = true })
                            @Html.ValidationMessageFor(model => model.category_id, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3 col-sm-3 col-xs-12">
                            @Html.EditorFor(model => model.doc_number, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.doc_number, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.posting_date,"Posting Date *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.posting_date, new { htmlAttributes = new { @class = "form-control removedisabled postingdocumentdate", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.posting_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.machine_id, "Machine *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("machine_id", (System.Web.Mvc.SelectList)ViewBag.mplist, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true, @onchange = "GetUnit(this.value)" })
                            @Html.ValidationMessageFor(model => model.machine_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.machine_category_id, "Machine Category * ", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("machine_category_id", (System.Web.Mvc.SelectList)ViewBag.mcatlist, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true })
                            @Html.ValidationMessageFor(model => model.machine_category_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.plan_start_date, "Plan Start Date *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.plan_start_date, new { htmlAttributes = new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true } })
                            @Html.ValidationMessageFor(model => model.plan_start_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.plan_end_date, "Plan End Date *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.plan_end_date, new { htmlAttributes = new { @class = "form-control validinput"@*, @onchange = "handlerEnd(event);"*@, @required = true } })
                            @Html.ValidationMessageFor(model => model.plan_end_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.maintenance_type_id, "Maintenance type*", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("maintenance_type_id", (System.Web.Mvc.SelectList)ViewBag.mtypelist, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true })
                            @Html.ValidationMessageFor(model => model.maintenance_type_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.is_blocked, "Blocked", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.is_blocked, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.is_blocked, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-body" role="tabpanel" data-example-id="togglable-tabs">
            <ul id="myTab" class="nav nav-tabs bar_tabs" role="tablist">
                <li class="active"><a data-toggle="tab" href="#sectionA">Machine Details</a></li>
                <li><a data-toggle="tab" href="#sectionB">Cycle</a></li>
                <li><a data-toggle="tab" href="#sectionC">Maintenance Parameters</a></li>
                <li><a data-toggle="tab" href="#sectionD">Components</a></li>
                <li><a data-toggle="tab" href="#sectionE">Schedule</a></li>
                <li><a data-toggle="tab" href="#sectionF">Other Information</a></li>
            </ul>
            <div class="tab-content">
                <div id="sectionA" class="tab-pane fade in active" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.plant_id, "Plant *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("plant_id", (System.Web.Mvc.SelectList)ViewBag.plantlist, "", htmlAttributes: new { @class = "form-control removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.plant_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.manufacturer, " Manufacturer ", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.manufacturer, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.manufacturer, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.model_no, " Model No.", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.model_no, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.model_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.manufacturer_part_no, "Manufacturer Part No.", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.manufacturer_part_no, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.manufacturer_part_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.manufacturing_serial_number, "Manufacturer Serial No.", htmlAttributes: new { @class = "control-label col-md-4 " })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.manufacturing_serial_number, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.manufacturing_serial_number, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.asset_code_id, "Asset Code", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.asset_code_id, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.asset_code_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.asset_tag_no, "Asset Tag No.", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.asset_tag_no, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.asset_tag_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.employee_id, "Employee *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("employee_id", (System.Web.Mvc.SelectList)ViewBag.employeeList, "--select--", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.employee_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sectionB" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.cycle_start_date, "Start Date *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.cycle_start_date, new { htmlAttributes = new { @class = "form-control validinput removedisabled",@disabled="disabled", @required = true } })
                                    @Html.ValidationMessageFor(model => model.cycle_start_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.frequency, "Frequency *", htmlAttributes: new { Class = "control-label col-md-4 " })
                                <div class="col-md-4 col-sm-4 col-xs-6">
                                    @Html.EditorFor(model => model.frequency, new { htmlAttributes = new { @class = "form-control removedisabled right", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.frequency, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-4 col-sm-4 col-xs-6">

                                    @Html.DropDownList("frequency_type", new List<SelectListItem>
                                 {
                                    new SelectListItem{ Text="Days", Value = "1" },new SelectListItem{ Text="Month", Value = "2"}
                                 }, new { @class = "form-control removedisabled", @disabled = "disabled" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.create_order_days, "Create order on a fixed date ?", htmlAttributes: new { Class = "control-label col-md-4 " })
                                <div class="col-md-4 col-sm-4 col-xs-6">
                                    @Html.EditorFor(model => model.create_order_days, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.create_order_days, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-4 col-sm-4 col-xs-6">

                                    @Html.DropDownList("create_order_yes", new List<SelectListItem>
                                 {
                                    new SelectListItem{ Text="--Select--", Value = "0" },
                                    new SelectListItem{ Text="1", Value = "1" },
                                    new SelectListItem{ Text="2", Value = "2"},
                                    new SelectListItem{ Text="3", Value = "3"},
                                    new SelectListItem{ Text="4", Value = "4"},
                                    new SelectListItem{ Text="5", Value = "5"},
                                    new SelectListItem{ Text="6", Value = "6"},
                                    new SelectListItem{ Text="7", Value = "7"},
                                    new SelectListItem{ Text="8", Value = "8"},
                                    new SelectListItem{ Text="9", Value = "9"},
                                    new SelectListItem{ Text="10", Value = "10"},
                                    new SelectListItem{ Text="11", Value = "11"},
                                    new SelectListItem{ Text="12", Value = "12"},
                                    new SelectListItem{ Text="13", Value = "13"},
                                    new SelectListItem{ Text="14", Value = "14"},
                                    new SelectListItem{ Text="15", Value = "15"},
                                    new SelectListItem{ Text="16", Value = "16"},
                                    new SelectListItem{ Text="17", Value = "17"},
                                    new SelectListItem{ Text="18", Value = "18"},
                                    new SelectListItem{ Text="19", Value = "19"},
                                    new SelectListItem{ Text="20", Value = "20"},
                                    new SelectListItem{ Text="21", Value = "21"},
                                    new SelectListItem{ Text="22", Value = "22"},
                                    new SelectListItem{ Text="23", Value = "23"},
                                    new SelectListItem{ Text="24", Value = "24"},
                                    new SelectListItem{ Text="25", Value = "25"},
                                    new SelectListItem{ Text="26", Value = "26"},
                                    new SelectListItem{ Text="27", Value = "27"},
                                    new SelectListItem{ Text="28", Value = "28"},

                                 }, new { @class = "form-control removedisabled", @disabled = "disabled" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.days_before, "How many days before ?", htmlAttributes: new { Class = "control-label col-md-4 " })
                                <div class="col-md-4 col-sm-4 col-xs-6">

                                    @Html.DropDownList("days_before", new List<SelectListItem>
                                 {
                                    new SelectListItem{ Text="--Select--", Value = "0" },
                                    new SelectListItem{ Text="1", Value = "1" },
                                    new SelectListItem{ Text="2", Value = "2"},
                                    new SelectListItem{ Text="3", Value = "3"},
                                    new SelectListItem{ Text="4", Value = "4"},
                                    new SelectListItem{ Text="5", Value = "5"},
                                    new SelectListItem{ Text="6", Value = "6"},
                                    new SelectListItem{ Text="7", Value = "7"},
                                    new SelectListItem{ Text="8", Value = "8"},
                                    new SelectListItem{ Text="9", Value = "9"},
                                    new SelectListItem{ Text="10", Value = "10"},
                                    new SelectListItem{ Text="11", Value = "11"},
                                    new SelectListItem{ Text="12", Value = "12"},
                                    new SelectListItem{ Text="13", Value = "13"},
                                    new SelectListItem{ Text="14", Value = "14"},
                                    new SelectListItem{ Text="15", Value = "15"},
                                    new SelectListItem{ Text="16", Value = "16"},
                                    new SelectListItem{ Text="17", Value = "17"},
                                    new SelectListItem{ Text="18", Value = "18"},
                                    new SelectListItem{ Text="19", Value = "19"},
                                    new SelectListItem{ Text="20", Value = "20"},
                                    new SelectListItem{ Text="21", Value = "21"},
                                    new SelectListItem{ Text="22", Value = "22"},
                                    new SelectListItem{ Text="23", Value = "23"},
                                    new SelectListItem{ Text="24", Value = "24"},
                                    new SelectListItem{ Text="25", Value = "25"},
                                    new SelectListItem{ Text="26", Value = "26"},
                                    new SelectListItem{ Text="27", Value = "27"},
                                    new SelectListItem{ Text="28", Value = "28"},

                                 }, new { @class = "form-control removedisabled", @disabled = "disabled" })
                                </div>
                                <div class="col-md-4 col-sm-4 col-xs-6">

                                    @Html.DropDownList("create_order_dtype", new List<SelectListItem>
                                 {
                                    new SelectListItem{ Text="Days", Value = "1" }
                                 }, new { @class = "form-control removedisabled", @disabled = "disabled" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.maintenance_period, "Maintenance period *", htmlAttributes: new { Class = "control-label col-md-4 " })
                                <div class="col-md-4 col-sm-4 col-xs-6">
                                    @Html.EditorFor(model => model.maintenance_period, new { htmlAttributes = new { @class = "form-control removedisabled right", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.maintenance_period, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-4 col-sm-4 col-xs-6">

                                    @Html.DropDownList("maintenance_period_type", new List<SelectListItem>
                                 {
                                    new SelectListItem{ Text="Days", Value = "1" }
                                 }, new { @class = "form-control removedisabled", @disabled = "disabled" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.allowed_delay, "Allow Delay *", htmlAttributes: new { Class = "control-label col-md-4 " })
                                <div class="col-md-4 col-sm-4 col-xs-6">
                                    @Html.EditorFor(model => model.allowed_delay, new { htmlAttributes = new { @class = "form-control removedisabled right", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.allowed_delay, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-4 col-sm-4 col-xs-6">

                                    @Html.DropDownList("allowed_delay_type", new List<SelectListItem>
                                 {
                                    new SelectListItem{ Text="Days", Value = "1" }
                                 }, new { @class = "form-control removedisabled", @disabled = "disabled" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.allowed_early_completion, "Allow Early Completion*", htmlAttributes: new { Class = "control-label col-md-4 " })
                                <div class="col-md-4 col-sm-4 col-xs-6">
                                    @Html.EditorFor(model => model.allowed_early_completion, new { htmlAttributes = new { @class = "form-control removedisabled right", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.allowed_early_completion, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-4 col-sm-4 col-xs-6">

                                    @Html.DropDownList("allowed_early_comlpletion_type", new List<SelectListItem>
                                 {
                                    new SelectListItem{ Text="Days", Value = "1" }
                                 }, new { @class = "form-control removedisabled", @disabled = "disabled" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.counter_frequency, "Counter Frequency ", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.counter_frequency, new { htmlAttributes = new { @class = "form-control removedisabled right", @disabled = "disabled", @required = true } })
                                    @Html.ValidationMessageFor(model => model.counter_frequency, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sectionC" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    <button type="button" class="btn btn-primary" style="float:right" data-toggle="modal" data-target="#myModal"><span class="glyphicon glyphicon-plus" onclick="clearmodel();"></span>Add </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="table-responsive">
                            <table class="table table-responsive table-bordered table-striped" id="ContactGrid">
                                <thead>
                                    <tr>
                                        <th hidden><label>ID</label></th>
                                        <th><label>Sr. No.</label></th>
                                        <th hidden><label>Parameter ID</label></th>
                                        <th><label>Parameter</label></th>
                                        <th><label>Range</label></th>
                                        <th><label>Action</label></th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
                <div id="sectionD" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    <button type="button" class="btn btn-primary" style="float:right" data-toggle="modal" data-target="#myModal1" onclick="GetParameter();"><span class="glyphicon glyphicon-plus" onclick="clearmodel1();"></span>Add </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="table-responsive">
                            <table class="table table-responsive table-bordered table-striped" id="ContactGrid1">
                                <thead>
                                    <tr>
                                        <th hidden><label>ID</label></th>
                                        <th><label>Sr. No.</label></th>
                                        <th hidden><label>Item ID</label></th>
                                        <th><label>Item</label></th>
                                        <th hidden><label>Parameter ID</label></th>
                                        <th><label>Parameter</label></th>
                                        <th><label>Quantity</label></th>
                                        <th hidden><label>UoM ID</label></th>
                                        <th><label>UoM</label></th>
                                        <th><label>Action</label></th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
                <div id="sectionE" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    @*<button type="button" class="btn btn-primary" style="float:right" data-toggle="modal" data-target="#myModal2"><span class="glyphicon glyphicon-plus" onclick="clearmodel1();"></span>Add </button>*@
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="table-responsive">
                            <table class="table table-responsive table-bordered table-striped" id="ContactGrid2">
                                <thead>
                                    <tr>
                                        <th hidden><label>ID</label></th>
                                        <th><label>Sr. No.</label></th>
                                        <th><label>Order No.</label></th>
                                        <th><label>Order Date</label></th>
                                        <th><label>Schedule Date</label></th>
                                        <th><label>Completion Date</label></th>
                                        <th><label>Status</label></th>
                                        <th hidden><label>Action</label></th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
                <div id="sectionF" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.remarks, "Remarks", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.remarks, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.remarks, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.attachement, "Attachment", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    <input type="file" class="form-control" id="FileUpload" name="FileUpload" accept="application/pdf, image/*" />
                                    @Html.ValidationMessageFor(model => model.attachement, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <input type="hidden" id="productdetail" name="productdetail" />
                        <input type="hidden" id="sr_no" />
                        <input type="hidden" id="deleteids" name="deleteids" />
                        <input type="hidden" id="deleteids1" name="deleteids1" />
                        <input type="hidden" id="productdetail1" name="productdetail1" />
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg12 col-sm-12">
                <div class="form-group">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <input type="submit" value="Update" data-controller="PlanMaintenance" class="btn btn-success" onclick="TabletoJeson();" style="float:right" id="create" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
</div>
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="clearmodel();">&times;</button>
                <h4 class="modal-title">Details</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Parameter Code
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("parameter_id", (System.Web.Mvc.SelectList)ViewBag.parameterList, "--select--", htmlAttributes: new { @class = "form-control removedisabled" })
                            @*<input type="text" class="form-control col-md-7 col-xs-12" id="parameter_code">*@
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Range
                        </label>
                        <div class="col-md-7">
                            <input type="text" class="form-control col-md-7 col-xs-12" id="parameter_range">
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="modal-footer">
                <input type="hidden" id="sr_no" />
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="clearmodel();">Close</button>
                <button type="button" class="add btn btn-primary">Add</button>
            </div>
        </div>

    </div>
</div>
<div class="modal fade" id="myModal1" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="clearmodel1();">&times;</button>
                <h4 class="modal-title">Details</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Item *
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("item_id", (System.Web.Mvc.SelectList)ViewBag.itemlist, "---Select---", new
                       {
                           @class = "form-control col-md-7 col-xs-12",
                           @onchange = "GetItemUnit(this.value)"
                       })
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Parameter
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("parameter", Enumerable.Empty<SelectListItem>(), "--select--", htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Quantity *
                        </label>
                        <div class="col-md-4">
                            <input type="number" class="form-control col-md-7 col-xs-12" id="quantity">
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownList("uom_id", (System.Web.Mvc.SelectList)ViewBag.uomList, "--select--", htmlAttributes: new { @class = "form-control", required = "required", @disabled = "disabled" })
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="modal-footer">
                <input type="hidden" id="sr_no" />
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="clearmodel1();">Close</button>
                <button type="button" class="add1 btn btn-primary">Add</button>
            </div>
        </div>
    </div>
</div>
<input type="hidden" id="plan_maintenance_id" />

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/RemoveUnexpectedFile.js"></script>
    <script src="~/Scripts/requirevalidation.js"></script>
    <script type="text/javascript">
        $("#machine_id").select2({
            placeholder: "Select Machine",
            allowClear: true
        });

        $("#machine_category_id").select2({
            placeholder: "Select Machine Category",
            allowClear: true
        });
        $("#item_id").select2({
            placeholder: "Select Item",
            allowClear: true
        });
        $("#parameter").select2({
            placeholder: "Select parameter",
            allowClear: true
        });
        function codeAddress() {
            $('#create_order_days').checkboxpicker();
            $('#is_blocked').checkboxpicker();

            $("#days_before").attr("disabled", "disabled");
            // $("#create_order_yes").attr("disabled", "disabled");
        }
        $('#ContactGrid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            aoColumns: [
                     { sname: "a", bVisible: false },
                     { sname: "b" },
                     { sname: "c", bVisible: false },
                     { sname: "d" },
                     { sname: "e" },

                     {
                         sname: "f", sWidth: "8%",
                         bSortable: false,
                         mRender: function (data, type, full) {
                             return '<img class="edit" src="../images/writing_file.png" height="20px" width="25px" alt="Edit" onclick="editRow(' + full[1] + ');" /><img class="edit" src="../images/remove.png" height="20px" width="25px" alt="Delete" onclick="deleteRow(' + full[1] + ');" />';
                         }
                     }]

        });
        $('#ContactGrid1').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            aoColumns: [
                     { sname: "a", bVisible: false  },
                     { sname: "b" },
                     { sname: "c", bVisible: false },
                     { sname: "d" },
                     { sname: "e", bVisible: false },
                     { sname: "f" },
                     { sname: "f" ,sClass:"right"},
                     { sname: "f", bVisible: false },
                     { sname: "f" },
                     {
                         sname: "g", sWidth: "8%",
                         bSortable: false,
                         mRender: function (data, type, full) {
                             return '<img class="edit" src="../images/writing_file.png" height="20px" width="25px" alt="Edit" onclick="editRow1(' + full[1] + ');" /><img class="edit" src="../images/remove.png" height="20px" width="25px" alt="Delete" onclick="deleteRow1(' + full[1] + ');" />';
                         }
                     }]
        });

        $('#ContactGrid2').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            aoColumns: [
                     { sname: "a", bVisible: false  },
                     { sname: "b" },
                     { sname: "c" },
                     { sname: "d" },
                     { sname: "e" },
                     { sname: "f" },
                     { sname: "g" },
            ]

        });

        function codeAddres() {

            if ($('#create_order_days').is(true)){
                $("#create_order_yes").removeAttr("disabled");
                $("#create_order_yes").addClass('validinput');

                $("#days_before").attr("disabled", "disabled");
                $('#days_before').val('');
                $("#days_before").removeClass('validinput');
            }
            else{
                $("#create_order_yes").attr("disabled", "disabled");
                $('#create_order_yes').val('');
                $("#create_order_yes").removeClass('validinput');

                $('#days_before').val('');
                $("#days_before").removeAttr("disabled");
                $("#days_before").addClass('validinput');
            }
        }
        
        input = document.getElementById("plan_end_date")
        input.addEventListener("mousewheel", function (evt) { evt.preventDefault(); })
        $("input[type=date]").keypress(function (event) {
            event.preventDefault;
        });
        $("input[type=date]").keydown( function (event) {
            event.preventDefault()            
        }, false);
        var startDate = document.getElementById("cycle_start_date").value;
        document.getElementById("plan_end_date").setAttribute("min", startDate);
        $(document).ready(function(){
            var t = $('#ContactGrid').DataTable();
            var planm_detail = @Html.Raw(JsonConvert.SerializeObject(this.Model));
            //$("#plan_start_dates").val(planm_detail.plan_start_dates).trigger('change');
            // console.log(planm_detail.ref_plan_maintenance_detail);
            var i=1;
            $.each(planm_detail.ref_plan_maintenance_details,function(key,value){
                t.fnAddData([value.maintenance_detail_id,i,value.parameter_id,value.parameter_code,value.parameter_range,'']);
                i=i+1;
                $("#parameter_id option[value=" + value.parameter_id + "]").hide();
            });

            var t1 = $('#ContactGrid1').DataTable();
            var i=1;
            $.each(planm_detail.ref_plan_maintenance_components,function(key,value){
                //console.log(value);
                t1.fnAddData([value.plan_maintenance_component_id,i,value.item_id, value.item_code,
                    value.parameter_id,value.parameter_code,value.quantity,value.uom_id,value.uom_code,'']);
                i=i+1;
            });
            var t2 = $('#ContactGrid2').DataTable();
            var i=1;
            console.log(planm_detail.ref_plan_maintenance_schedules);
            $.each(planm_detail.ref_plan_maintenance_schedules,function(key,value){

                t2.fnAddData([value.plan_maintenance_schedule_id,i,value.order_no,formatDate(value.order_date),formatDate(value.schedule_date),
                    formatDate(value.completion_date),value.status]);

                i=i+1;
            });
            $("#plant").val(planm_detail.plant).trigger('change');
            $("#manufacturer").val(planm_detail.manufacturer).trigger('change');
            $("#model_no").val(planm_detail.model_no).trigger('change');
            $("#manufacturer_part_no").val(planm_detail.manufacturer_part_no).trigger('change');
            $("#manufacturing_serial_number").val(planm_detail.manufacturing_serial_number).trigger('change');
            $("#asset_code_id").val(planm_detail.asset_code_id).trigger('change');
            $("#asset_tag_no").val(planm_detail.asset_tag_no).trigger('change');
        });
        function formatDate (input) {
            var datePart = input.match(/\d+/g),
            year = datePart[0],
            month = datePart[1],
            day = datePart[2];
            return day+'/'+month+'/'+year;
        }
        $(".add").on("click", function (event) {

            var t = $('#ContactGrid').DataTable();

            var rowCount = t.fnGetData().length;
            var parameter_code = $("#parameter_id").val();
            var parameter_desc = $('#parameter_id :selected').text();
            var parameter_range = $("#parameter_range").val();

            //if (parameter_code == '') {
            //    swal("", "Please Enter Parameter", "error");
            //    return false;
            //}
            if (parameter_range == '') {
                swal("", "Please Enter Parameter Range", "error");
                return false;
            }

            if ($("#sr_no").val() == "") {
                t.fnAddData(['0', rowCount + 1, parameter_code, parameter_desc, parameter_range, '']);
            }
            else {
                var cc = $("#sr_no").val();
                cc = parseInt(cc) - 1;
                t.fnUpdate(['0', cc + 1, parameter_code, parameter_desc, parameter_range, ''], cc)
            }
            clearmodel();
            $("#parameter_id option[value=" + parameter_code + "]").hide();
            return true;
        });


        $(".add1").on("click", function (event) {

            var t1 = $('#ContactGrid1').DataTable();

            var rowCount = t1.fnGetData().length;
            var item_id = $("#item_id").val();
            var item_name = $('#item_id option:selected').text();
            var parameter_id = $('#parameter').val();
            var parameter = $('#parameter :selected').text();
            var quantity = $("#quantity").val();
            var uom_id = $("#uom_id").val();
            var uom = $("#uom_id :selected").text();
            //alert( $('#parameter').val());
            if (item_id == '') {
                swal("", "Please Enter Item", "error");
                return false;
            }
            //if (parameter_id == '') {
            //    swal("", "Please Enter Parameter", "error");
            //    return false;
            //}
            if (quantity == '') {
                swal("", "Please Enter Quantity", "error");
                return false;
            }
            if (uom_id == '') {
                swal("", "Please Enter UoM", "error");
                return false;
            }

            if ($("#sr_no").val() == "") {
                t1.fnAddData(['0', rowCount + 1, item_id, item_name, parameter_id, parameter, quantity, uom_id, uom, '']);
            }
            else {
                var cc = $("#sr_no").val();
                cc = parseInt(cc) - 1;
                t1.fnUpdate(['0', cc + 1, item_id, item_name, parameter, quantity, uom_id, uom, ''], cc);
            }
            clearmodel();
            //$("#parameter_id option[value=" + parameter_code + "]").hide();
            return true;
        });

        function clearmodel() {
            $("#parameter_id").val('');
            $("#parameter_range").val('');
            $("#sr_no").val('');
            $("#item_id").val('').trigger('change');
            $("#parameter").val('').trigger('change');
            $("#uom_id").val('');
            $("#quantity").val('');

        }
        function clearmodel1() {
            $("#item_id").val('').trigger('change');
            $("#quantity").val('');
            $("#parameter").val('').trigger('change');
            $("#sr_no").val('');        }
       
        function GetItemUnit(id) {
            if (id != '') {
                $.ajax({
                    type: 'GET',
                    url: "@Url.Action("GetUnitofItem", "Generic")",
                    data: { id: id },
                    success: function (ITEM) {
                        $('#uom_id').val(ITEM.item);
                    },
                    error: function (emp) {
                        $('#uom_id').val('');
                    }
                });
            }
            else {
                $('#uom_id').val('');
            }
        }

        window.onload = codeAddress;
        $('#create_order_days').change(function () {
            if ($('#create_order_days').is(':checked')) {
                $("#days_before").attr("disabled", "disabled");
                $('#days_before').val('');
                $("#days_before").removeClass('validinput');

                $('#create_order_yes').val('');
                $("#create_order_yes").removeAttr("disabled");
                $("#create_order_yes").addClass('validinput');
            }
            else {
                $('#days_before').val('');
                $("#days_before").removeAttr("disabled");
                $("#days_before").addClass('validinput');

                $("#create_order_yes").attr("disabled", "disabled");
                $('#create_order_yes').val('');
                //$('#create_order_yes').remove();
                $("#create_order_yes").removeClass('validinput');
            }
        });
        // window.onload = codeAddress;
        function TabletoJeson() {
            //ParameterDetails
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;

            //ComonentDetails
            var t1 = $('#ContactGrid1').DataTable()
            var rowCount1 = t1.fnGetData().length;

            $("#ParameterDetails").empty();
            $("#ComponentDetails").empty();

            //parameter Detais ParameterDetails
            for (var i = 0; i < rowCount; i++) {
                $("#ParameterDetails").append('<input type="hidden" id="maintenance_parameter_id' + i + '" name="maintenance_parameter_id" value=' + t.fnGetData(i)[0] + ' >');
                $("#ParameterDetails").append('<input type="hidden" id="parameter_sr_no' + i + '" name="parameter_sr_no" value=' + t.fnGetData(i)[1] + ' >');
                $("#ParameterDetails").append('<input type="hidden" id="parameter_code_id' + i + '" name="parameter_code_id" value=' + t.fnGetData(i)[2] + ' >');
                $("#ParameterDetails").append('<input type="hidden" id="range' + i + '" name="range" value=' + t.fnGetData(i)[4] + ' >');
            }
            //component Details ComponentDetails
            for (var j = 0; j < rowCount1; j++) {
                $("#ComponentDetails").append('<input type="hidden" id="component_detail_id' + j + '" name="component_detail_id" value=' + t1.fnGetData(j)[0] + ' >');
                $("#ComponentDetails").append('<input type="hidden" id="component_sr_no' + j + '" name="component_sr_no" value=' + t1.fnGetData(j)[1] + ' >');
                $("#ComponentDetails").append('<input type="hidden" id="item_id' + j + '" name="item_id" value=' + t1.fnGetData(j)[2] + ' >');
                $("#ComponentDetails").append('<input type="hidden" id="uom_id1' + j + '" name="uom_id1" value=' + t1.fnGetData(j)[7] + ' >');
                $("#ComponentDetails").append('<input type="hidden" id="component_parameter' + j + '" name="component_parameter" value=' + t1.fnGetData(j)[4] + ' >');
                $("#ComponentDetails").append('<input type="hidden" id="quantity' + j + '" name="quantity" value=' + t1.fnGetData(j)[6] + ' >');
            }
        }

        function editRow() {
            $('#myModal').modal('show');
            var t = $('#ContactGrid').DataTable()
            var cc = parseInt(arguments[0]) - 1;
            $("#sr_no").val(t.fnGetData(cc)[1]);
            $("#maintenance_detail_id").val(t.fnGetData(cc)[0]);
            $("#parameter_id").val(t.fnGetData(cc)[1]);
            $('#parameter_range').val(t.fnGetData(cc)[4]).trigger('change');

        }

        function GetParameter() {
            var t = $('#ContactGrid').DataTable();
            var rowCount = t.fnGetData().length;
            $("#parameter").html(""); // clear before appending new list
            $("#parameter").append($('<option></option>').val("").html(""));
            for (var i = 0; i < rowCount; i++) {
                var pm = t.fnGetData(i)[3];
                var pm_id = t.fnGetData(i)[2];
                $("#parameter").append($('<option></option>').val(pm_id).html(pm));
            }
        }

        function editRow1() {
            $('#myModal1').modal('show');
            var t1 = $('#ContactGrid1').DataTable()
            var cc = parseInt(arguments[0]) - 1;
            $("#sr_no").val(t1.fnGetData(cc)[1]);
            $("#plan_maintenance_component_id").val(t1.fnGetData(cc)[0]);
            $("#item_id").val(t1.fnGetData(cc)[2]).trigger('change');
            $('#parameter').val(t1.fnGetData(cc)[4]).trigger('change');
            $('#quantity').val(t1.fnGetData(cc)[6]);
        }

        function deleteRow() {
            var t = $('#ContactGrid').DataTable();
            var len = t.fnGetData().length;


            //var t = $('#ContactGrid').DataTable()
            //var len = t.fnGetData.length;
            var pos ;
            for (var l = 0; l <= len; l++) {
                if (t.fnGetData(l) != null) {
                    if (t.fnGetData(l)[1] == arguments[0]) {
                        pos = l;
                    }
                }
            }

            var id = t.fnGetData(pos)[0];
            var deleteids = $("#deleteids").val();

            swal({
                title: "Are you sure?",

                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: true

            },
          function (isConfirm) {
              if (isConfirm) {

                  $("#deleteids").val(deleteids + "~" + id);
                  t.fnDeleteRow(pos);
              }
          });
        }

        $("#parameter_id").change(function () {
            var id = $(this).val();
            $.ajax({
                type: 'GET',
                url: "@Url.Action("GetListParameter", "ParameterList")",
                data: { id: id },
                success: function (cycle) {
                    $("#parameter_range").val(cycle.parameter_range);
                }
            })
        })

        function deleteRow1() {
            var t = $('#ContactGrid1').DataTable()
            var len = t.fnGetData.length;
            var pos;
            for (var l = 0; l <= len; l++) {
                if (t.fnGetData(l) != null) {
                    if (t.fnGetData(l)[1] == arguments[0]) {
                        pos = l;
                    }
                }
            }

            var id = t.fnGetData(pos)[0];

            var deleteids = $("#deleteids1").val();

            swal({
                title: "Are you sure?",

                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: true

            },
          function (isConfirm) {
              if (isConfirm) {

                  $("#deleteids1").val(deleteids + "~" + id);
                  t.fnDeleteRow(pos);

              }
          });
        }

        function GetUnit(id) {
            if (id != '') {
                $.ajax({
                    type: 'GET',
                    url: "@Url.Action("GetMachineList", "PlanMaintenance")",
                    data: { id: id },
                    success: function (ITEM) {
                        console.log(ITEM);
                        $("#plant").val(ITEM.plant);
                        $("#manufacturer").val(ITEM.manufacturer);
                        $("#model_no").val(ITEM.model_no);
                        $("#manufacturer_part_no").val(ITEM.manufacturer_part_no);
                        $("#manufacturing_serial_number").val(ITEM.manufacturing_serial_number);
                        $("#asset_code_id").val(ITEM.asset_code_id);
                        $("#asset_tag_no").val(ITEM.asset_tag_no);
                    },
                    error: function (emp) {

                        $('#plant').val('');
                        $('#manufacturer').val('');
                        $('#model_no').val('');
                        $('#manufacturer_part_no').val('');
                        $('#manufacturing_serial_number').val('');
                        $('#asset_code_id').val('');
                        $('#asset_tag_no').val('');
                    }
                });
            }
            else {
                $('#plant').val('');
                $('#manufacturer').val('');
                $('#model_no').val('');
                $('#manufacturer_part_no').val('');
                $('#manufacturing_serial_number').val('');
                $('#asset_code_id').val('');
                $('#asset_tag_no').val('');
            }
        }

    </script>
}