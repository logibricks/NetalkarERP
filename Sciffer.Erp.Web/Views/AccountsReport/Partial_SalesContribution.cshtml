@using Sciffer.Erp.Domain.ViewModel


@{(Html.EJ().Grid<accounts_report_vm>("Editing")
.Datasource(ds => ds.URL(Url.Action("GetAccountsData", "AccountsReport") + "?entity=" + ViewBag.entity + "&from_date=" + ViewBag.from_date + "&to_date=" + ViewBag.to_date + "&customer_category_id=" + ViewBag.customer_category_id + "&priority_id=" + ViewBag.priority_id + "&currency_id=" + ViewBag.currency_id + "&plant_id=" + ViewBag.plant_id + "&business_unit_id=" + ViewBag.business_unit_id).Adaptor(AdaptorType.UrlAdaptor)).AllowPaging().PageSettings(a => a.PageSize(20))
.AllowFiltering()
.FilterSettings(X => X.FilterType(FilterType.Excel))
.ShowColumnChooser()
.AllowSorting()
.AllowScrolling()
.Mappers(map => map.ExportToExcelAction(Url.Action("ExportToExcel", "AccountsReport", new { ctrlname = "SalesContribution" })))
                                                                                                                            .ScrollSettings(scroll => { scroll.Width("100%"); })

.ToolbarSettings(toolbar =>
{
toolbar.ShowToolbar().ToolbarItems(items =>
{
items.AddTool(ToolBarItems.Search);
items.AddTool(ToolBarItems.ExcelExport);
items.AddTool(ToolBarItems.PrintGrid);
});
})

.ShowSummary()

.SummaryRow(row =>
{
    row.Title("Total").SummaryColumns(col =>
    {
        col.SummaryType(SummaryType.Sum).DisplayColumn("sales_value").DataMember("sales_value").Format("{0:n2}").Add();
        col.SummaryType(SummaryType.Sum).DisplayColumn("quantity").DataMember("quantity").Format("{0:n2}").Add();
    }).Add();
})
    .Columns(col =>
    {

        col.Field("customer_name").Width("10%").HeaderText("Bill To Party Description").Add();
        col.Field("so_number").Width("10%").HeaderText("So Number").Add();
        col.Field("so_date").Width("10%").HeaderText("So Date").Visible(false).Add();
        col.Field("category").Width("10%").HeaderText("Document Category").Visible(false).Add();
        col.Field("si_number").Width("10%").HeaderText("Document No").Visible(false).Add();
        col.Field("si_date").Width("10%").HeaderText("Posting Date").Visible(false).Add();
        col.Field("currency_name").Width("10%").HeaderText("Currency").Visible(false).Add();
        col.Field("plant_name").Width("10%").HeaderText("Plant").Visible(false).Add();
        col.Field("item_code").Width("10%").HeaderText("Item Code").Visible(false).Add();
        col.Field("item_name").Width("10%").HeaderText("Item Description").Visible(false).Add();
        col.Field("quantity").Width("10%").HeaderText("Qty").TextAlign(TextAlign.Right).Format("{0:n2}").Visible(false).Add();
        col.Field("unit_price").Width("10%").HeaderText("Unit Price").TextAlign(TextAlign.Right).Format("{0:n2}").Visible(false).Add();
        col.Field("discount").Width("10%").HeaderText("Discount").TextAlign(TextAlign.Right).Format("{0:n2}").Visible(false).Add();
        col.Field("effective_unit_price").Width("10%").TextAlign(TextAlign.Right).Format("{0:n2}").HeaderText("Effective Unit Price").Visible(false).Add();
        col.Field("item_basic_value").Width("10%").TextAlign(TextAlign.Right).Format("{0:n2}").HeaderText("Cost").Visible(false).Add();
        col.Field("contribution").Width("10%").TextAlign(TextAlign.Right).Format("{0:n2}").HeaderText("Contribution").Visible(false).Add();
        col.Field("sales_value").Width("10%").TextAlign(TextAlign.Right).Format("{0:n2}").HeaderText("Sales Value").Visible(false).Add();
        col.Field("total_cost").Width("10%").TextAlign(TextAlign.Right).Format("{0:n2}").HeaderText("Total Cost").Visible(false).Add();
        col.Field("total_contribution").Width("10%").TextAlign(TextAlign.Right).Format("{0:n2}").HeaderText("Total Contribution").Visible(false).Add();

    })
       .ClientSideEvents(eve => { eve.ToolbarClick("OnToolbarClicka"); })
                                                                                                                                                                                                        ).Render();}
@Html.EJ().ScriptManager()


