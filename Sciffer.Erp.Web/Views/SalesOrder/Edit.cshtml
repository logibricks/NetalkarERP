@model Sciffer.Erp.Domain.ViewModel.sal_so_vm
@using Newtonsoft.Json
@{
    ViewBag.Title = "Edit";
}
@using (Html.BeginForm("Edit", "SalesOrder", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()


    <div class="form-horizontal" style="margin-top:10px;">
        <div id="so_detail" hidden></div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(a => a.so_id)
        @Html.HiddenFor(a => a.quotation_id)
        <div class="form-group">
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.sales_category_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-4 col-sm-4 col-xs-12">
                            @Html.DropDownList("sales_category_id", (System.Web.Mvc.SelectList)ViewBag.categorylist, new { @class = "form-control validinput category removedisabled", @disabled = "disabled", @required = true })
                            @Html.ValidationMessageFor(model => model.sales_category_id, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.so_number, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12 hidden" })
                        <div class="col-md-4 col-sm-4 col-xs-12">
                            @Html.EditorFor(model => model.so_number, new { htmlAttributes = new { @class = "form-control num validinput removedisabled", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.so_number, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.so_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.so_date, new { htmlAttributes = new { @class = "form-control validinput postingdate postingdocumentdate removedisabled", @disabled = "disabled", @required = true } })
                            @Html.ValidationMessageFor(model => model.so_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.buyer_id, "Bill to party *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("buyer_id", (System.Web.Mvc.SelectList)ViewBag.customerlist, "", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true, @onchange = "buyerchange(this.value);" })
                            @Html.ValidationMessageFor(model => model.buyer_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.consignee_id, "Ship to Party *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("consignee_id", (System.Web.Mvc.SelectList)ViewBag.customerlist, "", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true, @onchange = "consigneechange(this.value);" })
                            @Html.ValidationMessageFor(model => model.consignee_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.supply_state_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("supply_state_id", (System.Web.Mvc.SelectList)ViewBag.billingstatelist, "", new { @class = "form-control validinput removedisabled", @required = true })
                            @Html.ValidationMessageFor(model => model.supply_state_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.delivery_state_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("delivery_state_id", (System.Web.Mvc.SelectList)ViewBag.billingstatelist, "", new { @class = "form-control validinput removedisabled", @required = true })
                            @Html.ValidationMessageFor(model => model.delivery_state_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.sal_net_value, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-5 col-sm-5 col-xs-12">
                            @Html.EditorFor(model => model.sal_net_value, new { htmlAttributes = new { @class = "form-control right removedisabled", @required = true, @type = "number", @disabled = "disable" } })
                            @Html.ValidationMessageFor(model => model.sal_net_value, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3 col-sm-3 col-xs-12">
                            @Html.DropDownList("net_value_currency_id", (System.Web.Mvc.SelectList)ViewBag.Currencylist, new { @class = "form-control postingcurrency removedisabled", @disabled = "disable" })
                            @Html.ValidationMessageFor(model => model.net_value_currency_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.sal_gross_value, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-5 col-sm-5 col-xs-12">
                            @Html.EditorFor(model => model.sal_gross_value, new { htmlAttributes = new { @class = "form-control right removedisabled", @required = true, @type = "number", @disabled = "disable" } })
                            @Html.ValidationMessageFor(model => model.sal_gross_value, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3 col-sm-3 col-xs-12">
                            @Html.DropDownList("gross_value_currency_id", (System.Web.Mvc.SelectList)ViewBag.Currencylist, new { @class = "form-control removedisabled", @disabled = "disable" })
                            @Html.ValidationMessageFor(model => model.gross_value_currency_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-body" role="tabpanel" data-example-id="togglable-tabs">
            <ul id="myTab" class="nav nav-tabs bar_tabs" role="tablist">
                <li class="active"><a data-toggle="tab" href="#sectionA">Sales</a></li>
                <li><a data-toggle="tab" href="#sectionB">Line Item</a></li>
                <li><a data-toggle="tab" href="#sectionC">Customer</a></li>
                <li><a data-toggle="tab" href="#sectionD">Accounting</a></li>
                <li><a data-toggle="tab" href="#sectionE">Information</a></li>
            </ul>
            <div class="tab-content">
                <div id="sectionA" class="tab-pane fade in active" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.business_unit_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("business_unit_id", (System.Web.Mvc.SelectList)ViewBag.businesslist, "---Select---", new { @class = "form-control validinput ", @required = true })
                                    @Html.ValidationMessageFor(model => model.business_unit_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.plant_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("plant_id", (System.Web.Mvc.SelectList)ViewBag.plantlist, "---Select---", new { @class = "form-control validinput removedisabled", @disabled = "disabled", @required = true, @onchange = "GetStorageLocation(this.value)" })
                                    @Html.ValidationMessageFor(model => model.plant_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.freight_terms_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("freight_terms_id", (System.Web.Mvc.SelectList)ViewBag.freightlist, "---Select---", new { @class = "form-control validinput", @required = true })
                                    @Html.ValidationMessageFor(model => model.freight_terms_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.territory_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("territory_id", (System.Web.Mvc.SelectList)ViewBag.territorylist, "---Select---", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.territory_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.sales_rm_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("sales_rm_id", (System.Web.Mvc.SelectList)ViewBag.salesexlist, "---Select---", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.sales_rm_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.delivery_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.delivery_date, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.delivery_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.customer_po_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.customer_po_date, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.customer_po_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.customer_po_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.customer_po_no, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.customer_po_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.doc_currency_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("doc_currency_id", (System.Web.Mvc.SelectList)ViewBag.Currencylist, new { @class = "form-control validinput removedisabled", @disabled = "disable" })
                                    @Html.ValidationMessageFor(model => model.doc_currency_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.form_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("form_id", (System.Web.Mvc.SelectList)ViewBag.formlist, "---Select---", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.form_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div id="sectionB" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">

                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    <button type="button" class="btn btn-primary" style="float:right" data-toggle="modal" data-target="#myModal"><span class="glyphicon glyphicon-plus"></span>Add Item</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="table-responsive">
                            <table class="table table-responsive table-bordered table-striped" id="ContactGrid">
                                <thead>
                                    <tr>
                                        <th hidden><label>ID</label></th>
                                        <th><label>Sr. No.</label></th>
                                        <th hidden><label>Item ID</label></th>
                                        <th hidden><label>Item Code</label></th>
                                        <th><label>Item</label></th>
                                        <th hidden><label>SAC/HSN ID</label></th>
                                        <th><label>Sac/HSN Code</label></th>
                                        <th><label>Delivery Date</label></th>
                                        <th><label>Quantity</label></th>
                                        <th hidden><label>UOM ID</label></th>
                                        <th><label>UoM</label></th>
                                        <th hidden><label>Unit Price</label></th>
                                        <th hidden><label>Discount</label></th>
                                        <th><label>Eff. Price</label></th>
                                        <th><label>Sales Value</label></th>
                                        <th><label>Taxable Rate</label></th>
                                        <th><label>Taxable Value</label></th>
                                        <th hidden><label>Tax ID</label></th>
                                        <th hidden><label>storage location id</label></th>
                                        <th hidden>Sloc</th>
                                        <th><label>Tax Code</label></th>
                                        <th><label>Machine Charges</label></th>
                                        <th hidden><label>Quotation Detail ID</label></th>
                                        <th hidden><label>Drawing No</label></th>
                                        <th hidden><label>Material Cost</label></th>
                                        <th><label>Action</label></th>
                                    </tr>
                                </thead>

                            </table>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">

                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="table-responsive">
                                <table class="table table-responsive table-bordered table-striped" id="TaxGrid"></table>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sectionC" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_address, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.billing_address, new { htmlAttributes = new { @class = "form-control ddlform removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.billing_address, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.shipping_address, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.shipping_address, new { htmlAttributes = new { @class = "form-control ddlform removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.shipping_address, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_city, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.billing_city, new { htmlAttributes = new { @class = "form-control ddlform removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.billing_city, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.shipping_city, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.shipping_city, new { htmlAttributes = new { @class = "form-control ddlform removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.shipping_city, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_pincode, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.billing_pincode, new { htmlAttributes = new { @class = "form-control ddlform removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.billing_pincode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.shipping_pincode, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.shipping_pincode, new { htmlAttributes = new { @class = "form-control ddlform removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.shipping_pincode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_country_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("billing_country_id", (System.Web.Mvc.SelectList)ViewBag.corlist, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.billing_country_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.shipping_country_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("shipping_country_id", (System.Web.Mvc.SelectList)ViewBag.corlist, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.shipping_country_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_state_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("billing_state_id", (System.Web.Mvc.SelectList)ViewBag.billingstatelist, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.billing_state_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.shipping_state_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("shipping_state_id", (System.Web.Mvc.SelectList)ViewBag.corrstatelist, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.shipping_state_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_email_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.billing_email_id, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.billing_email_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.shipping_email_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.shipping_email_id, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.shipping_email_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.pan_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.pan_no, new { htmlAttributes = new { @class = "form-control validinput removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.pan_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.shipping_pan_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.shipping_pan_no, new { htmlAttributes = new { @class = "form-control validinput removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.shipping_pan_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.gst_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.gst_no, new { htmlAttributes = new { @class = "form-control validinput removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.gst_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.shipping_gst_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.shipping_gst_no, new { htmlAttributes = new { @class = "form-control validinput removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.shipping_gst_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sectionD" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">


                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.payment_cycle_type_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("payment_cycle_type_id", (System.Web.Mvc.SelectList)ViewBag.paymentcycletype, "---Select---", new { @class = "form-control ", @onchange = "FillPaymentCycle()" })
                                    @Html.ValidationMessageFor(model => model.payment_cycle_type_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.payment_cycle_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("payment_cycle_id", (System.Web.Mvc.SelectList)ViewBag.paymentcyclelist, "---Select---", new { @class = "form-control " })
                                    @Html.ValidationMessageFor(model => model.payment_cycle_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.payment_terms_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("payment_terms_id", (System.Web.Mvc.SelectList)ViewBag.paymenttermslist, "---Select---", new { @class = "form-control " })
                                    @Html.ValidationMessageFor(model => model.payment_terms_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.avail_credit_limit, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.avail_credit_limit, new { htmlAttributes = new { @class = "form-control ddlform" } })
                                    @Html.ValidationMessageFor(model => model.avail_credit_limit, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.credit_avail_after_order, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.credit_avail_after_order, new { htmlAttributes = new { @class = "form-control ddlform removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.credit_avail_after_order, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.tds_code_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("tds_code_id", (System.Web.Mvc.SelectList)ViewBag.tds_list, "---Select---", new { @class = "form-control ", @onchange = "TDSChange()" })
                                    @Html.ValidationMessageFor(model => model.tds_code_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.gst_tds_code_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("gst_tds_code_id", (System.Web.Mvc.SelectList)ViewBag.GST_TDS_Code, "---Select---", new { @class = "form-control " })
                                    @Html.ValidationMessageFor(model => model.gst_tds_code_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div id="sectionE" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.internal_remarks, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.internal_remarks, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.internal_remarks, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.remarks, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.remarks, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.remarks, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <input type="hidden" id="productdetail" name="productdetail" />
                        <input type="hidden" id="attributedetail" name="attributedetail" />
                        <input type="hidden" id="formdetail" name="formdetail" />
                        <input type="hidden" id="deleteids" name="deleteids" />
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.FileUpload, "Attachment", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    <input type="file" class="form-control" id="FileUpload" name="FileUpload" accept="application/pdf, image/*" />
                                    @Html.ValidationMessageFor(model => model.FileUpload, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg12 col-sm-12">
                <div class="form-group">
                    <div class="col-md-4 col-sm-4 col-xs-5">
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
                    </div>
                    @*<div class="col-md-2 col-sm-2 col-xs-2">
                        <input type="button" value="Cancel PO" class="btn btn-danger" data-toggle="modal" data-target="#myCanModal" style="margin-left:25px" id="cancel_pi" />
                    </div>*@
                    <div class="col-md-4 col-sm-4 col-xs-5">
                        <input type="button" value="Close SO" class="btn btn-warning" style="float:center"  id="close_po" />
                    </div>
                    <div class="col-md-4 col-sm-4 col-xs-5">
                        <input type="submit" value="Update" id="create" data-id="@Model.so_id" data-controller="SalesOrder" class="btn btn-success" onclick="TabletoJeson();" style="float:right" />
               </div>
                </div>
            </div>
        </div>
        @*<div class="row">
            <div class="col-lg12 col-sm-12">
                <div class="form-group">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <input type="submit" value="Update" id="create" data-id="@Model.so_id" data-controller="SalesOrder" class="btn btn-success" onclick="TabletoJeson();" style="float:right" />
                    </div>
                </div>
            </div>
        </div>*@
    </div>
}
<!-- Modal -->
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="clearmodel();">&times;</button>
                <h4 class="modal-title">Items Detail</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Item <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("ITEM_ID", (System.Web.Mvc.SelectList)ViewBag.itemlist, "", new { @class = "form-control", @onchange = "GetUnit(this.value);" })
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            SAC/HSN Code <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("sac_hsn_id", Enumerable.Empty<SelectListItem>(), "---Select---", new { @class = "form-control col-md-7 col-xs-12", @disabled = "disabled" })
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Storage Location <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("storage_location_id", Enumerable.Empty<SelectListItem>(), "---Select---", new { @class = "form-control col-md-7 col-xs-12" })
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Delivery Date <span class="required">*</span>
                        </label>
                        <div class="col-md-7">

                            <input type="date" class="form-control col-md-7 col-xs-12" id="dte">
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Quantity <span class="required">*</span>
                        </label>
                        <div class="col-md-4">
                            <input type="number" class="form-control col-md-7 col-xs-12" id="quantity" onchange="calculation()">
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownList("UOM", (System.Web.Mvc.SelectList)ViewBag.unitlist, "---Select---", new { @class = "form-control col-md-7 col-xs-12", @disabled = "disabled" })
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Unit Price <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control col-md-7 col-xs-12" id="unitprice" onchange="calculation()">
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Discount (%) <span class="required"></span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control col-md-7 col-xs-12" id="discount" onchange="calculation()">
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Effective Unit Price <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control col-md-7 col-xs-12" id="effectiveprice" readonly="readonly">
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Sales Value <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control col-md-7 col-xs-12" id="salesvalue" readonly="readonly">
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Taxable Rate <span class="required"></span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control col-md-7 col-xs-12" id="assessablerate" onchange="asscalculation()">
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Taxable Value <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control col-md-7 col-xs-12" id="assessablevalue" readonly="readonly">
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Tax Code <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("taxcode", (System.Web.Mvc.SelectList)ViewBag.taxlist, "", new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Machine Charges <span class="required"></span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control col-md-7 col-xs-12" id="machine_charges">
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Drawing No <span class="required"></span>
                        </label>
                        <div class="col-md-7">
                            <input type="text" class="form-control col-md-7 col-xs-12" id="drawing_no">
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Material Cost Per Unit <span class="required"></span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control col-md-7 col-xs-12" id="material_cost_per_unit">
                        </div>
                    </div>
                </div>
                <br />
                <div class="modal-footer">
                    <input type="hidden" id="srno" />
                    <input type="hidden" id="quotation_detail_id" />
                    <input type="hidden" id="so_detail_id" />
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="clearmodel();">Close</button>
                    <button type="button" class="add btn btn-primary">Add Item</button>
                </div>
            </div>

        </div>
    </div>
</div>



@*<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
</div>*@
<script src="~/Scripts/requirevalidation.js"></script>
<script src="~/Scripts/RemoveUnexpectedFile.js"></script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            $("#so_detail").empty();
            $("#buyer_id").select2({
                placeholder: "Select Bill to party",
                allowClear: true
            });
            $("#consignee_id").select2({
                placeholder: "Select Ship to party",
                allowClear: true
            });
            $("#business_unit_id").select2({
                placeholder: "Select Business Unit",
                allowClear: true
            });
            $("#plant_id").select2({
                placeholder: "Select Plant",
                allowClear: true
            });
            $("#taxcode").select2({
                placeholder: "Select Tax",
                allowClear: true
            });
            $("#ITEM_ID").select2({
                placeholder: "Select Item",
                allowClear: true
            });
            $("#payment_terms_id").select2({
                placeholder: "Select Payment Terms",
                allowClear: true
            });
            //$("#storage_location_id").select2({
            //    placeholder: "Select SLoc",
            //    allowClear: true
            //});
            $("#supply_state_id").select2({
                placeholder: "Select Place of Supply",
                allowClear: true
            });
            $("#delivery_state_id").select2({
                placeholder: "Select Place of Delivery",
                allowClear: true
            });
            $('#tds_applicable').checkboxpicker();
            $('#tds_applicable').change(function(){
                if ($(this).prop('checked')) {
                    $('#tds_no').addClass('validinput');
                }
                else {
                    $('#tds_no').removeClass('validinput');
                    $('#validtds_no').remove();
                }
            });
            var t = $('#ContactGrid').DataTable();
            var quotation_detail = @Html.Raw(JsonConvert.SerializeObject(this.Model));
            var i=1;
            var str="";
            var str1="";
            var tot = 0;
            $('#sal_net_value').val(parseFloat(quotation_detail.sal_net_value).toFixed(2));
            $.each(quotation_detail.sal_so_detail_report_vm, function(key, value) {
                var input = value.delivery_date;
                var output = input.substring(0, 10);
                t.fnAddData([value.so_detail_id, i,value.item_id, value.item_code,value.item_code + "/" + value.item_name,value.sac_hsn_id,value.sac_hsn_name, output, value.quantity.toFixed(2),value.uom_id, value.uom_name, value.unit_price.toFixed(2), value.discount.toFixed(2), value.effective_unit_price.toFixed(2), value.sales_value.toFixed(2), value.assessable_rate.toFixed(2), value.assessable_value.toFixed(2), value.tax_id, value.storage_location_id,value.storage_location_name,value.tax_code,value.machine_charges.toFixed(2),value.quotation_detail_id,value.drawing_no,value.material_cost_per_unit.toFixed(2),''
                ]);

                i++;
            });
            TDSChange();
            $.each(quotation_detail.sal_so_form, function(key, value) {
                $("#form_id").val(value.form_id);
            });
        });

    $(".add").on("click", function (event) {
        var t = $('#ContactGrid').DataTable()
        var rowCount = t.fnGetData().length;
        var item_name = $("#ITEM_ID").find("option:selected").text();
        var item_code = $("#ITEM_ID").val();
        var delevery_date = $("#dte").val();
        var qty = $("#quantity").val();
        var unit_id = $("#UOM").val();
        var unit_name = $("#UOM").find("option:selected").text();
        var unit_price = $("#unitprice").val();
        var discount = $("#discount").val();
        var effectiveprice = $("#effectiveprice").val();
        var salesvalue = $("#salesvalue").val();
        var assessablerate = $("#assessablerate").val();
        var assessablevalue = $("#assessablevalue").val();
        var taxcode = $("#taxcode").val();
        var tax_name = $("#taxcode option:selected").text();
        var tax_code = $("#taxcode").val();
        var machine_charges = $("#machine_charges").val();
        var storage_location_id = $("#storage_location_id").val();
        var storage_location_name = $("#storage_location_id option:selected").text();
        var qid=$("#quotation_detail_id").val();
        var so_detail_id=$("#so_detail_id").val();
        var drawing_no= $('#drawing_no').val();
        var material_cost_per_unit =$('#material_cost_per_unit').val();
        var hsn_id =$("#sac_hsn_id").val();
        var hsn_code =$("#sac_hsn_id").find("option:selected").text();
        if (item_code == '')
        {
            swal("","Please Select Item Name.","error");
            return false;
        }
        if(hsn_id=='')
        {
            swal("", "Please Select SAC/HSN Code.", "error");
            return false;
        }
        if(hsn_id==0)
        {
            swal("", "Please Select SAC/HSN Code.", "error");
            return false;
        }
        if (storage_location_id == '') {
            swal("", "Please select Storage Location.", "error");
            return false;
        }
        if (delevery_date == '')
        {
            swal("", "Please Select Delivery Date.", "error");
            return false;
        }
        if (qty == '') {
            swal("", "Please Enter Quantity.", "error");
            return false;
        }
        if (qty == 0) {
            swal("", "Quantity should be greater than zero.", "error");
            return false;
        }
        if (unit_id == '') {
            swal("", "Please select Unit.", "error");
            return false;
        }
        if (unit_price == '') {
            swal("", "Please enter unit price.", "error");
            return false;
        }
        if (assessablerate == '')
        {
            swal("", "Taxable rate is required.", "error");
            return false;
        }
        if (assessablerate == 0) {
            swal("", "Taxable rate is required.", "error");
            return false;
        }
        if (taxcode == '') {
            swal("", "Please select tax code.", "error");
            return false;
        }
        if (discount == '')
        {
            discount = 0;
        }

        if(material_cost_per_unit=="")
        {
            material_cost_per_unit=0;
        }
        if ($("#srno").val() == "")
        {
            t.fnAddData([so_detail_id, rowCount + 1,item_code,item_code, item_name,hsn_id,hsn_code, delevery_date, parseFloat(qty).toFixed(2),unit_id, unit_name, parseFloat(unit_price).toFixed(2), parseFloat(discount).toFixed(2), parseFloat(effectiveprice).toFixed(2), parseFloat(salesvalue).toFixed(2), parseFloat(assessablerate).toFixed(2), parseFloat(assessablevalue).toFixed(2), tax_code,storage_location_id,storage_location_name,tax_name,parseFloat(machine_charges).toFixed(2),qid,drawing_no,parseFloat(material_cost_per_unit).toFixed(2), ''
            ]);
        }
        else
        {
            var cc = parseInt($("#srno").val());
            cc = parseInt(cc)-1;

            t.fnUpdate([so_detail_id, cc+1, item_code,item_code, item_name,hsn_id,hsn_code, delevery_date, parseFloat(qty).toFixed(2), unit_id, unit_name, parseFloat(unit_price).toFixed(2), parseFloat(discount).toFixed(2), parseFloat(effectiveprice).toFixed(2), parseFloat(salesvalue).toFixed(2), parseFloat(assessablerate).toFixed(2), parseFloat(assessablevalue).toFixed(2),tax_code,storage_location_id,storage_location_name,tax_name,parseFloat(machine_charges).toFixed(2),qid,drawing_no,parseFloat(material_cost_per_unit).toFixed(2), ''], cc)
        }

        clearmodel();
        TDSChange();
        return true;
    });
    function clearmodel()
    {
        $("#ITEM_ID").select2("val", "");
        $("#quantity").val('');
        $("#UOM").val('');
        $("#unitprice").val('');
        $("#discount").val('');
        $("#effectiveprice").val('');
        $("#salesvalue").val('');
        $("#assessablerate").val('');
        $("#assessablevalue").val('');
        $("#taxcode").select2("val", "");
        $("#srno").val('');
        $('#dte').val('');
      //  $("#storage_location_id").select2("val", "");
        $("#quotation_detail_id").val('');
        $("#so_detail_id").val('');
        document.getElementById("ITEM_ID").disabled = false;
        $('#drawing_no').val("");
        $('#material_cost_per_unit').val("");
    }

    function calculation() {
        var quantity = $("#quantity").val();
        var unitprice = $("#unitprice").val();
        var discount = $("#discount").val();
        var assessable = $("#assessablerate").val();
       // alert(discount);
        var effectiveprice = 0;
        if (quantity=="")
        {
            quantity = 0;
        }
        if (unitprice=="")
        {
            unitprice = 0;
        }
        if (discount=="")
        {
            effectiveprice = unitprice;
        }
        else
        {
            effectiveprice = unitprice - (unitprice * discount / 100);
        }
        $("#effectiveprice").val(effectiveprice);
        $("#assessablerate").val(effectiveprice);
        $("#salesvalue").val(effectiveprice * quantity);
        //if (assessable=="")
        //{
        //    $("#assessablerate").val(effectiveprice);
        //}
        var assessable1=$("#assessablerate").val();
        $("#assessablevalue").val(assessable1 * quantity);
    }
    function asscalculation()
    {
        var quantity = $("#quantity").val();
        var assessable1 = $("#assessablerate").val();
        $("#assessablevalue").val(assessable1 * quantity);
    }
    $('#ContactGrid').DataTable({
        "bPaginate": false,
        "ordering": false,
        "bfooter": false,
        "info": false,
        "bLengthChange": false,
        "bAutoWidth": false,
        "bFilter": false,
        "bSort": false,
        aoColumns: [
                 { sname: "a", bVisible: false },
                 { sname: "b", sWidth: "6%" },
                 { sname: "c", bVisible: false },
                 { sname: "d", bVisible: false  },
                 { sname: "e"},
                 { sname: "f", bVisible: false },
                 { sname: "g"},
                 { sname: "h", sWidth: "12%" },
                 { sname: "i", sWidth: "8%","sClass": "right" },
                 { sname: "j", bVisible: false},
                 { sname: "k", sWidth: "6%" },
                 { sname: "l", sWidth: "8%","sClass": "right" , bVisible: false},
                 { sname: "m", bVisible: false},
                 { sname: "n", sWidth: "8%" ,"sClass": "right"},
                 { sname: "o", sWidth: "8%","sClass": "right" },
                 { sname: "p", bVisible: true,"sClass": "right"},
                 { sname: "q", bVisible: true,"sClass": "right"},
                 { sname: "r", bVisible: false},
                 { sname: "s", bVisible: false},
                 { sname: "t", bVisible: false},
                 { sname: "u", bVisible: true},
                 { sname: "v", bVisible: true },
                 { sname: "w",bVisible: false},
                  { sname: "x", bVisible: false},
                 { sname: "y",bVisible: false,"sClass": "right"},
                 {
                     sname: "z", sWidth: "7%",
                     bSortable: false,
                     mRender: function (data, type, full) {
                         return '<img class="edit" src="../images/writing_file.png" height="20px" width="25px" alt="Edit" /><img class="delete" src="../images/remove.png" height="20px" width="25px" alt="Delete"  />';
                     }
                 }]

    });
    function recalculate_row_numbers() {
        var t = $('#ContactGrid').DataTable()
        table_rows = t.fnGetNodes();
        $.each(table_rows, function (index) {
            $("td:first", this).html(index + 1);
            var nn = index + 1;
            $("td:last", this).html('<img class="edit" src="../../Images/writing_file.png" height="20px" width="25px" alt="Edit" /><img class="edit" src="../../Images/remove.png" height="20px" width="25px" alt="Delete" ');
        });
    }
    $('#ContactGrid').on('click', '.edit', function () {
        var t = $('#ContactGrid').DataTable();
        var id = $(this).parent('td').parent('tr').index();
        $('#myModal').modal('show');

        $("#srno").val(t.fnGetData(id)[1]);
        $("#so_detail_id").val(t.fnGetData(id)[0]);
        $("#ITEM_ID").select2("val", t.fnGetData(id)[2]);
        $('#dte').val(t.fnGetData(id)[7]);
        $('#quantity').val(t.fnGetData(id)[8]);
        $('#UOM').val(t.fnGetData(id)[9]);
        $('#unitprice').val(t.fnGetData(id)[11]);
        $('#discount').val(t.fnGetData(id)[12]);
        $('#effectiveprice').val(t.fnGetData(id)[13]);
        $('#salesvalue').val(t.fnGetData(id)[14]);
        $('#assessablerate').val(t.fnGetData(id)[15]);
        $('#assessablevalue').val(t.fnGetData(id)[16]);
        $("#taxcode").select2("val", t.fnGetData(id)[17]);
        $("#storage_location_id").val(t.fnGetData(id)[18]);
        $("#machine_charges").val(t.fnGetData(id)[21]);
        $("#quotation_detail_id").val(t.fnGetData(id)[22]);
        $('#drawing_no').val(t.fnGetData(id)[23]);
        $('#material_cost_per_unit').val(t.fnGetData(id)[24]);
        document.getElementById("ITEM_ID").disabled = true;
    });

    $('#ContactGrid').on('click', '.delete', function () {
        var t = $('#ContactGrid').DataTable();
        var id = $(this).parent('td').parent('tr').index();
        var deleteids = t.fnGetData(id)[1];
        var del = $("#deleteids").val();
        swal({
            title: "Are you sure?",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Yes, delete it!",
            closeOnConfirm: true
        },
 function (isConfirm) {
     if (isConfirm) {
         if (del != '') {
             $("#deleteids").val(del + "" + deleteids + "~");
         }
         else {
             $("#deleteids").val(deleteids + "~");
         }

         t.fnDeleteRow(id);
         TDSChange();
         var len = t.fnGetData().length;
         var i = 1;
         var row = 0;
         if (len > 0) {
             $('#ContactGrid tbody tr').each(function () {
                 t.fnUpdate(i, row, 1);
                 i++;
                 row++;
             });
         }
     }
 });
    });



 function GetUnit(id)
    {
       // var id = $("#ITEM_ID").val();
        if (id != '')
        {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetUserDescriptionForItem", "Generic")',
                data: { id: id },
                success: function (ITEM) {
                    console.log(ITEM);
                    $('#UOM').val(ITEM.UOM_ID);
                    $("#sac_hsn_id").html(""); // clear before appending new list
                    if(ITEM.sac_id!=0)
                    {
                        $("#sac_hsn_id").append($('<option></option>').val(ITEM.sac_id).html(ITEM.sac_name));
                        $("#sac_id").val(ITEM.sac_id);
                        $("#sac_name").val(ITEM.sac_name);
                    }
                    else
                    {
                        $("#sac_hsn_id").append($('<option></option>').val(0).html("---Select---"));
                    }
                },
                error: function (emp) {
                    $('#UOM').val('');
                    $("#sac_hsn_id").html(""); // clear before appending new list
                    $("#sac_hsn_id").append($('<option></option>').val(0).html("---Select---"));
                }
            });
        }
        else
        {
            $('#UOM').val('');
            $("#sac_hsn_id").html(""); // clear before appending new list
            $("#sac_hsn_id").append($('<option></option>').val(0).html("---Select---"));
        }

    }
    function getnetTotal() {
        var t = $('#ContactGrid').DataTable();
        var rowCount = t.fnGetData().length;
        var total = 0;
        for (i = 0; i < rowCount; i++) {
            total = total + parseFloat(t.fnGetData(i)[14]);
        }
        $("#sal_net_value").val(parseFloat(total).toFixed(2));
        $("#sal_gross_value").val(parseFloat(total).toFixed(2));
    }
    function FillPaymentCycle() {
        var Payment_Cycle = $('#payment_cycle_type_id').val();
        if (Payment_Cycle = "")
        {
            Payment_Cycle = 0;
        }
        $.ajax({
            url: '@Url.Action("FillPaymentCycle", "Generic")',
            type: "GET",
            dataType: "JSON",
            data: { Payment_Type_id: Payment_Cycle },
            success: function (Payment_Cycle) {

                $("#payment_cycle_id").html(""); // clear before appending new list
                $("#payment_cycle_id").append($('<option></option>').val(0).html("---Select---"));
                $.each(Payment_Cycle, function (i, cycle) {
                    $("#payment_cycle_id").append(
                        $('<option></option>').val(cycle.PAYMENT_CYCLE_ID).html(cycle.PAYMENT_CYCLE_NAME));
                });
            }
        });
    }

    function TabletoJeson()
    {
        var t = $('#ContactGrid').DataTable()
        var rowCount = t.fnGetData().length;
        var str;
        var str1;

        var str2;
        var str3;
        $("#so_detail").empty();
        for (i = 0; i < rowCount; i++) {
            $("#so_detail").append('<input type="hidden" id="so_detail_id' + i + '" name="so_detail_id" value=' + t.fnGetData(i)[0] + ' >');
            $("#so_detail").append('<input type="hidden" id="item_id' + i + '" name="item_id" value=' + t.fnGetData(i)[2] + ' >');
            $("#so_detail").append('<input type="hidden" id="sac_hsn_id1' + i + '" name="sac_hsn_id1" value=' + t.fnGetData(i)[5] + ' >');
            $("#so_detail").append('<input type="hidden" id="delivery_date1' + i + '" name="delivery_date1" value=' + t.fnGetData(i)[7] + ' >');
            $("#so_detail").append('<input type="hidden" id="quantity' + i + '" name="quantity" value=' + t.fnGetData(i)[8] + ' >');
            $("#so_detail").append('<input type="hidden" id="uom_id' + i + '" name="uom_id" value=' + t.fnGetData(i)[9] + ' >');
            $("#so_detail").append('<input type="hidden" id="unit_price' + i + '" name="unit_price" value=' + t.fnGetData(i)[11] + ' >');
            $("#so_detail").append('<input type="hidden" id="discount' + i + '" name="discount" value=' + t.fnGetData(i)[12] + ' >');
            $("#so_detail").append('<input type="hidden" id="effective_unit_price' + i + '" name="effective_unit_price" value=' + t.fnGetData(i)[13] + ' >');
            $("#so_detail").append('<input type="hidden" id="sales_value' + i + '" name="sales_value" value=' + t.fnGetData(i)[14] + ' >');
            $("#so_detail").append('<input type="hidden" id="assessable_rate' + i + '" name="assessable_rate" value=' + t.fnGetData(i)[15] + ' >');
            $("#so_detail").append('<input type="hidden" id="assessable_value' + i + '" name="assessable_value" value=' + t.fnGetData(i)[16] + ' >');
            $("#so_detail").append('<input type="hidden" id="tax_id' + i + '" name="tax_id" value=' + t.fnGetData(i)[17] + ' >');
            $("#so_detail").append('<input type="hidden" id="sloc_id' + i + '" name="sloc_id" value=' + t.fnGetData(i)[18] + ' >');
            $("#so_detail").append('<input type="hidden" id="machine_charges' + i + '" name="machine_charges" value=' + t.fnGetData(i)[21] + ' >');
            $("#so_detail").append('<input type="hidden" id="quotation_detail_id' + i + '" name="quotation_detail_id" value=' + t.fnGetData(i)[22] + ' >');
            $("#so_detail").append('<input type="hidden" id="drawing_no' + i + '" name="drawing_no" value=' + t.fnGetData(i)[23] + ' >');
            $("#so_detail").append('<input type="hidden" id="material_cost_per_unit' + i + '" name="material_cost_per_unit" value=' + t.fnGetData(i)[24] + ' >');
        }
    }

    </script>



    <script type="text/javascript">


        function GetStorageLocation(id) {
            if (id == "") {
                id = 0;
            }
            $.ajax({
                url: '@Url.Action("GetStorageLocation", "Generic")',
                type: "GET",
                dataType: "JSON",
                data: { id: id },
                success: function (id) {
                    $("#storage_location_id").html(""); // clear before appending new list
                   // $("#storage_location_id").append($('<option></option>').val("").html("---Select---"));
                    $.each(id, function (i, cycle) {
                        if(i==0)
                        {
                            $("#storage_location_id").append(
                           $('<option></option>').val(cycle.storage_location_id).html(cycle.storage_location_name));
                        }

                    });
                }
            });
        }
        GetStorageLocation($('#plant_id').val());
        $("#doc_currency_id").change(function () {
            $("#net_value_currency_id").val(this.value);
            $("#gross_value_currency_id").val(this.value);
        });
        function TDSChange() {
            var tds_code_id =$("#tds_code_id").val();
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            if (tds_code_id != "") {
                tds_code_id = tds_code_id;
            }
            else
            {
                tds_code_id=0;
            }
            var str;
            var str1;
            var str2;
            var str3;
            var tot = 0;
            for (i = 0; i < rowCount; i++) {
                str1 = t.fnGetData(i)[17] + "~";
                str1 = str1 + t.fnGetData(i)[16] + "~";
                str1 = str1 + t.fnGetData(i)[14];
                if (i == 0) {
                    str = str1 + ",";
                }
                else {
                    str = str + str1 + ",";

                }
                tot = tot + parseFloat(t.fnGetData(i)[14]);
            }
            getnetTotal();
            GetTaxDetail(str.slice(0, -1), tot, $("#so_date").val(), tds_code_id);
        }
        function GetTaxDetail(taxdetail, amount, dt,tds_code_id) {
            $.ajax({
                url: '@Url.Action("GetTaxCalculation", "Generic")',
                type: "GET",
                dataType: "JSON",
                data: {entity:"calculatetax", st: taxdetail, amt: amount, dt: dt ,tds_code_id:tds_code_id },
                success: function (Payment_Cycle) {
                    $('#TaxGrid tbody').html('');
                    $.each(Payment_Cycle, function (i, cycle) {
                        $('#TaxGrid').append('<tbody>');

                        $('#TaxGrid').append('<tr><td>' + cycle.tax_name + '</td><td align="right">' + parseFloat(cycle.tax_value).toFixed(2) + '</td></tr>')
                        $('#TaxGrid').append('</tbody>');
                        $("#sal_gross_value").val(parseFloat(cycle.tax_value).toFixed(2));
                    });
                }
            });
        }

        $("#close_po").click(function(){
            swal({
                title: "Enter Remarks!",
                //text: "Write something interesting:",
                type: "input",
                showCancelButton: true,
                closeOnConfirm: false,
                inputPlaceholder: "Write Remarks"
            }, function (inputValue) {
                if (inputValue === false) return false;
                if (inputValue === "") {
                    swal.showInputError("You need to write Remarks!");
                    return false
                }
                //swal("Nice!", "You wrote: " + inputValue, "success");
                $.ajax({
                    url: '@Url.Action("CloseConfirmed", "SalesOrder")',
                    type: "POST",
                    dataType: "JSON",
                    async:false,
                    data: { id: $("#so_id").val(),remarks:inputValue},
                    success: function (id) {
                        console.log();
                        if(id=="Closed")
                        {
                            swal({
                                title: "Closed",
                                text: "Your PO " + $("#so_number").val() + " has been closed.",
                                type: "success",
                                timer: 15000,
                                showCancelButton: false,
                                closeOnConfirm: false,
                                showLoaderOnConfirm: false
                            
                            }, function () {

                                location.href = '@Url.Action("Index", "SalesOrder")'

                            });
                            //  swal("Error", id, "error");
                        }
                        else
                        {
                            swal("Error", id, "error");
                        }

                    }
                });
            });
            //function (isConfirm) {
            //    if (isConfirm) {
          
            //    }
            //});
        });
    </script>
}



