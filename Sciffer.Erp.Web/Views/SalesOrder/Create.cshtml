@model Sciffer.Erp.Domain.ViewModel.sal_so_vm

@{
    ViewBag.Title = "Create";
}
@using (Html.BeginForm("Create", "SalesOrder", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()


    <div class="form-horizontal" style="margin-top:10px;">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div id="so_detail" hidden></div>
        <div class="form-group">
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.quotation_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("quotation_id", (System.Web.Mvc.SelectList)ViewBag.QuotationList, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.quotation_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        <input type="button" value="Select Sales Quotation" name="salesbutton" id="salesbutton" class="btn btn-primary" />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.sales_category_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("sales_category_id", (System.Web.Mvc.SelectList)ViewBag.categorylist, new { @class = "form-control category validinput setPlant", @required = true })
                            @Html.ValidationMessageFor(model => model.sales_category_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.so_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.EditorFor(model => model.so_date, new { htmlAttributes = new { @class = "form-control postingdate postingdocumentdate validinput", @required = true } })
                            @Html.ValidationMessageFor(model => model.so_date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.buyer_id, "Bill to party *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("buyer_id", (System.Web.Mvc.SelectList)ViewBag.customerlist, "", new { @class = "form-control validinput", @required = true, @onchange = "buyerchange(this.value);" })
                            @Html.ValidationMessageFor(model => model.buyer_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.consignee_id, "Ship to Party *", htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("consignee_id", (System.Web.Mvc.SelectList)ViewBag.customerlist, "", new { @class = "form-control validinput", @required = true, @onchange = "consigneechange(this.value);" })
                            @Html.ValidationMessageFor(model => model.consignee_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.supply_state_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("supply_state_id", (System.Web.Mvc.SelectList)ViewBag.billingstatelist, "", new { @class = "form-control validinput removedisabled", @required = true })
                            @Html.ValidationMessageFor(model => model.supply_state_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.delivery_state_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownList("delivery_state_id", (System.Web.Mvc.SelectList)ViewBag.billingstatelist, "", new { @class = "form-control validinput removedisabled", @required = true })
                            @Html.ValidationMessageFor(model => model.delivery_state_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.sal_net_value, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-5 col-sm-5 col-xs-12">
                            @Html.EditorFor(model => model.sal_net_value, new { htmlAttributes = new { @class = "form-control right removedisabled", @required = true, @type = "number", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.sal_net_value, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3 col-sm-3 col-xs-12">
                            @Html.DropDownList("net_value_currency_id", (System.Web.Mvc.SelectList)ViewBag.Currencylist, new { @class = "form-control postingcurrency removedisabled", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.net_value_currency_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.sal_gross_value, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                        <div class="col-md-5 col-sm-5 col-xs-12">
                            @Html.EditorFor(model => model.sal_gross_value, new { htmlAttributes = new { @class = "form-control right removedisabled", @required = true, @type = "number", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.sal_gross_value, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3 col-sm-3 col-xs-12">
                            @Html.DropDownList("gross_value_currency_id", (System.Web.Mvc.SelectList)ViewBag.Currencylist, new { @class = "form-control removedisabled", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.gross_value_currency_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-body" role="tabpanel" data-example-id="togglable-tabs">
            <ul id="myTab" class="nav nav-tabs bar_tabs" role="tablist">
                <li class="active"><a data-toggle="tab" href="#sectionA">Sales</a></li>
                <li><a data-toggle="tab" href="#sectionB">Line Item</a></li>
                <li><a data-toggle="tab" href="#sectionC">Customer</a></li>
                <li><a data-toggle="tab" href="#sectionD">Accounting</a></li>
                <li><a data-toggle="tab" href="#sectionE">Information</a></li>
            </ul>
            <div class="tab-content">
                <div id="sectionA" class="tab-pane fade in active" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.business_unit_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("business_unit_id", (System.Web.Mvc.SelectList)ViewBag.businesslist, "---Select---", new { @class = "form-control validinput", @required = true })
                                    @Html.ValidationMessageFor(model => model.business_unit_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.plant_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("plant_id", (System.Web.Mvc.SelectList)ViewBag.plantlist, "---Select---", new { @class = "form-control validinput removedisabled selectedbycategory", @required = true, @onchange = "GetStorageLocation(this.value)", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.plant_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.freight_terms_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("freight_terms_id", (System.Web.Mvc.SelectList)ViewBag.freightlist, "---Select---", new { @class = "form-control validinput", @required = true })
                                    @Html.ValidationMessageFor(model => model.freight_terms_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.territory_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("territory_id", (System.Web.Mvc.SelectList)ViewBag.territorylist, "---Select---", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.territory_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.sales_rm_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("sales_rm_id", (System.Web.Mvc.SelectList)ViewBag.salesexlist, "---Select---", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.sales_rm_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.delivery_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.delivery_date, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.delivery_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.customer_po_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.customer_po_date, new { htmlAttributes = new { @class = "form-control validinput", @required = true } })
                                    @Html.ValidationMessageFor(model => model.customer_po_date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.customer_po_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.customer_po_no, new { htmlAttributes = new { @class = "form-control validinput", @required = true } })
                                    @Html.ValidationMessageFor(model => model.customer_po_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.doc_currency_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("doc_currency_id", (System.Web.Mvc.SelectList)ViewBag.Currencylist, new { @class = "form-control validinput" })
                                    @Html.ValidationMessageFor(model => model.doc_currency_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.form_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("form_id", (System.Web.Mvc.SelectList)ViewBag.formlist, "---Select---", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.form_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div id="sectionB" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">

                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    <button type="button" class="btn btn-primary" style="float:right" onclick="CheckPlant();"><span class="glyphicon glyphicon-plus"></span>Add Item</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="table-responsive">
                            <table class="table table-responsive table-bordered table-striped" id="ContactGrid">
                                <thead>
                                    <tr>
                                        <th hidden><label>ID</label></th>
                                        <th><label>Sr. No.</label></th>
                                        <th hidden><label>Item ID</label></th>
                                        <th><label>Item Code</label></th>
                                        <th><label>Item</label></th>
                                        <th hidden><label>SAC/HSN ID</label></th>
                                        <th><label>Sac/HSN Code</label></th>
                                        <th><label>Delivery Date</label></th>
                                        <th><label>Quantity</label></th>
                                        <th hidden><label>UOM ID</label></th>
                                        <th><label>UoM</label></th>
                                        <th hidden><label>Unit Price</label></th>
                                        <th hidden><label>Discount</label></th>
                                        <th><label>Eff. Price</label></th>
                                        <th><label>Sales Value</label></th>
                                        <th><label>Taxable Rate</label></th>
                                        <th><label>Taxable Value</label></th>
                                        <th hidden><label>Tax ID</label></th>
                                        <th hidden><label>storage location id</label></th>
                                        <th hidden><label>Sloc</label></th>
                                        <th><label>Tax Code</label></th>
                                        <th><label>Machine Charges</label></th>
                                        <th hidden><label>Quotation Detail ID</label></th>
                                        <th hidden><label>Drawing No</label></th>
                                        <th hidden><label>Material Cost</label></th>
                                        <th><label>Action</label></th>
                                    </tr>
                                </thead>

                            </table>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">

                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="table-responsive">
                                <table class="table table-responsive table-bordered table-striped" id="TaxGrid"></table>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sectionC" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_address, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.billing_address, new { htmlAttributes = new { @class = "form-control ddlform removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.billing_address, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.shipping_address, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.shipping_address, new { htmlAttributes = new { @class = "form-control ddlform removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.shipping_address, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_city, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.billing_city, new { htmlAttributes = new { @class = "form-control ddlform removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.billing_city, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.shipping_city, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.shipping_city, new { htmlAttributes = new { @class = "form-control ddlform removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.shipping_city, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_pincode, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.billing_pincode, new { htmlAttributes = new { @class = "form-control ddlform removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.billing_pincode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.shipping_pincode, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.shipping_pincode, new { htmlAttributes = new { @class = "form-control ddlform removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.shipping_pincode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_country_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("billing_country_id", (System.Web.Mvc.SelectList)ViewBag.corlist, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.billing_country_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.shipping_country_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("shipping_country_id", (System.Web.Mvc.SelectList)ViewBag.corlist, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.shipping_country_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_state_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("billing_state_id", (System.Web.Mvc.SelectList)ViewBag.billingstatelist, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.billing_state_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.shipping_state_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("shipping_state_id", (System.Web.Mvc.SelectList)ViewBag.corrstatelist, "---Select---", new { @class = "form-control removedisabled", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.shipping_state_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.billing_email_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.billing_email_id, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.billing_email_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.shipping_email_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.shipping_email_id, new { htmlAttributes = new { @class = "form-control removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.shipping_email_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.pan_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.pan_no, new { htmlAttributes = new { @class = "form-control validinput removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.pan_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.shipping_pan_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.shipping_pan_no, new { htmlAttributes = new { @class = "form-control validinput removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.shipping_pan_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.gst_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.gst_no, new { htmlAttributes = new { @class = "form-control validinput removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.gst_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.shipping_gst_no, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.shipping_gst_no, new { htmlAttributes = new { @class = "form-control validinput removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.shipping_gst_no, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sectionD" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">


                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.payment_cycle_type_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("payment_cycle_type_id", (System.Web.Mvc.SelectList)ViewBag.paymentcycletype, "---Select---", new { @class = "form-control ", @onchange = "FillPaymentCycle()" })
                                    @Html.ValidationMessageFor(model => model.payment_cycle_type_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.payment_cycle_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("payment_cycle_id", (System.Web.Mvc.SelectList)ViewBag.paymentcyclelist, "---Select---", new { @class = "form-control validinput " })
                                    @Html.ValidationMessageFor(model => model.payment_cycle_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.payment_terms_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("payment_terms_id", (System.Web.Mvc.SelectList)ViewBag.paymenttermslist, "---Select---", new { @class = "form-control validinput " })
                                    @Html.ValidationMessageFor(model => model.payment_terms_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.avail_credit_limit, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.avail_credit_limit, new { htmlAttributes = new { @class = "form-control ddlform" } })
                                    @Html.ValidationMessageFor(model => model.avail_credit_limit, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.credit_avail_after_order, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.credit_avail_after_order, new { htmlAttributes = new { @class = "form-control ddlform removedisabled", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.credit_avail_after_order, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.tds_code_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("tds_code_id", (System.Web.Mvc.SelectList)ViewBag.tds_list, "---Select---", new { @class = "form-control ", @onchange = "TDSChange()" })
                                    @Html.ValidationMessageFor(model => model.tds_code_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.gst_tds_code_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("gst_tds_code_id", (System.Web.Mvc.SelectList)ViewBag.GST_TDS_Code, "---Select---", new { @class = "form-control " })
                                    @Html.ValidationMessageFor(model => model.gst_tds_code_id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sectionE" class="tab-pane fade" style="margin-top:10px;">
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.internal_remarks, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.internal_remarks, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.internal_remarks, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.remarks, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.EditorFor(model => model.remarks, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.remarks, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <input type="hidden" id="productdetail" name="productdetail" />
                        <input type="hidden" id="formdetail" name="formdetail" />
                        <input type="hidden" id="deleteids" name="deleteids" />
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.FileUpload, "Attachment", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    <input type="file" class="form-control" id="FileUpload" name="FileUpload" accept="application/pdf, image/*" />
                                    @Html.ValidationMessageFor(model => model.FileUpload, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg12 col-sm-12">
                <div class="form-group">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <input type="submit" value="Create" id="create" data-controller="SalesOrder" class="btn btn-success" onclick="TabletoJeson();" style="float:right" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div class="modal fade" id="myModal1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content" style="align-content:center;width:900px">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Sales Quotation</h4>
            </div>
            <div class="modal-body" style="max-height:500px;overflow-y:auto">
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label class="control-label col-md-3">
                                Customer Name
                            </label>
                            <div class="col-md-7">
                                @Html.DropDownList("customer_id", (System.Web.Mvc.SelectList)ViewBag.customerlist, "---Select---", new { @class = "form-control col-md-7 col-xs-12", @onchange = "GetSalesOrder(this.value)", @style = "width: 100%;" })
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label class="control-label col-md-3">
                                Quotation Number
                            </label>
                            <div class="col-md-7">
                                @Html.DropDownList("soquotation_id", Enumerable.Empty<SelectListItem>(), "", new { @class = "form-control col-md-7 col-xs-12", @onchange = "onSelect11(this.value)", @style = "width: 100%;" })
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <div class="table-responsive">
                            <table class="table table-responsive table-bordered table-striped" id="salequotation">
                                <thead>
                                    <tr>
                                        <th hidden><label>ID</label></th>
                                        <th hidden><label>Sr. No.</label></th>
                                        <th hidden><label>Item Code</label></th>
                                        <th><label>Item</label></th>
                                        <th><label>SAC/HSN ID</label></th>
                                        <th><label>Sac/HSN Code</label></th>
                                        <th><label>Delivery Date</label></th>
                                        <th><label>Quantity</label></th>
                                        <th hidden><label>UOM ID</label></th>
                                        <th><label>UOM</label></th>
                                        <th><label>Unit Price</label></th>
                                        <th hidden><label>Discount</label></th>
                                        <th hidden><label>Eff. Price</label></th>
                                        <th><label>Sales Value</label></th>
                                        <th hidden><label>Taxable Rate</label></th>
                                        <th hidden><label>Taxable Value</label></th>
                                        <th hidden><label>Tax Code</label></th>
                                        <th><label>Balance Quantity</label></th>
                                        <th hidden><label>Tax Name</label></th>
                                        <th hidden><label>storage location id</label></th>
                                        <th><label>Storage Location</label></th>
                                        <th hidden><label>Quotation Detail ID</label></th>
                                        <th hidden><label>Drawing No</label></th>
                                        <th hidden><label>Material Cost</label></th>
                                        <th><label>SO Quantity</label></th>
                                        <th hidden>SO_Quantity</th>
                                        <th><input type="checkbox" name="select_all" value="1" id="example-select-all"></th>
                                    </tr>
                                </thead>

                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="addSALES btn btn-primary" disabled="disabled">Add</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Item Details</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Item <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("ITEM_ID", (System.Web.Mvc.SelectList)ViewBag.itemlist, "", new { @class = "form-control", @onchange = "GetUnit(this.value);" })
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            SAC/HSN Code <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("sac_hsn_id", Enumerable.Empty<SelectListItem>(), "---Select---", new { @class = "form-control col-md-7 col-xs-12", @disabled = "disabled" })
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Sloc <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("storage_location_id", Enumerable.Empty<SelectListItem>(), "", new { @class = "form-control col-md-7 col-xs-12" })
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Delivery Date <span class="required">*</span>
                        </label>
                        <div class="col-md-7">

                            <input type="date" class="form-control col-md-7 col-xs-12" id="dte">
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Quantity <span class="required">*</span>
                        </label>
                        <div class="col-md-4">
                            <input type="number" class="form-control col-md-7 col-xs-12" id="quantity" onchange="calculation()">
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownList("UOM", (System.Web.Mvc.SelectList)ViewBag.unitlist, "---Select---", new { @class = "form-control col-md-7 col-xs-12 ", @disabled = "disabled" })
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Unit Price <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control col-md-7 col-xs-12" id="unitprice" onchange="calculation()">
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Discount (%) <span class="required"></span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control col-md-7 col-xs-12" id="discount" onchange="calculation()">
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Effective Unit Price <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control col-md-7 col-xs-12" id="effectiveprice" readonly="readonly">
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Sales Value <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control col-md-7 col-xs-12" id="salesvalue" readonly="readonly">
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Taxable Rate <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control col-md-7 col-xs-12" id="assessablerate" onchange="asscalculation()">
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Taxable Value <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control col-md-7 col-xs-12" id="assessablevalue" readonly="readonly">
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Tax Code <span class="required">*</span>
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownList("taxcode", (System.Web.Mvc.SelectList)ViewBag.taxlist, "", new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <br/>
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Machine Charges <span class="required"></span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control col-md-7 col-xs-12" id="machine_charges">
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Drawing No <span class="required"></span>
                        </label>
                        <div class="col-md-7">
                            <input type="text" class="form-control col-md-7 col-xs-12" id="drawing_no">
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="first-name">
                            Material Cost Per Unit <span class="required"></span>
                        </label>
                        <div class="col-md-7">
                            <input type="number" class="form-control col-md-7 col-xs-12" id="material_cost_per_unit">
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="modal-footer">
                <input type="hidden" id="srno" />
                <input type="hidden" id="quotationdetailid" />
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="clearmodel();">Close</button>
                <button type="button" class="add btn btn-primary">Add Item</button>
            </div>
        </div>

    </div>
</div>


<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
</div>
<script src="~/Scripts/requirevalidation.js"></script>
<script src="~/Scripts/RemoveUnexpectedFile.js"></script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <script type="text/javascript">
        $(document).ready(function () {

            $( "#so_detail" ).empty();
            var error=@Html.Raw(Json.Encode(ViewBag.error));
            if(error !="")
            {
                sweetAlert("",error,"error");
            }
            $("#buyer_id").select2({
                placeholder: "Select Bill to party",
                allowClear: true
            });
            $("#consignee_id").select2({
                placeholder: "Select Ship to party",
                allowClear: true
            });
            $("#business_unit_id").select2({
                placeholder: "Select Business Unit",
                allowClear: true
            });
            $("#plant_id").select2({
                placeholder: "Select Plant",
                allowClear: true
            });
            $("#taxcode").select2({
                placeholder: "Select Tax",
                allowClear: true
            });
            $("#ITEM_ID").select2({
                placeholder: "Select Item",
                allowClear: true
            });
            $("#payment_terms_id").select2({
                placeholder: "Select Payment Terms",
                allowClear: true
            });
            //$("#storage_location_id").select2({
            //    placeholder: "Select SLoc",
            //    allowClear: true
            //});
            $("#customer_id").select2({
                placeholder: "Select Customer",
                allowClear: true
            });
            $("#soquotation_id").select2({
                placeholder: "Select Quotation number",
                allowClear: true
            });
            $("#supply_state_id").select2({
                placeholder: "Select Place of Supply",
                allowClear: true
            });
            $("#delivery_state_id").select2({
                placeholder: "Select Place of Delivery",
                allowClear: true
            });
            function GetDocumentCategory(id) {
                if (id == "") {
                    id = 0;
                }
                $.ajax({
                    url: '@Url.Action("GetCategoryListByPlant", "Generic")',
                    type: "GET",
                    dataType: "JSON",
                    data: { id: 65,plant_id:id },
                    success: function (id) {
                        $("#sales_category_id").html(""); // clear before appending new list
                        $.each(id, function (i, cycle) {
                            $("#sales_category_id").append(
                                $('<option></option>').val(cycle.document_numbring_id).html(cycle.category));
                        });
                    }
                });
                $('#plant_state_id').val(id);
            }
            $('#tds_applicable').checkboxpicker();
            $('#tds_applicable').change(function(){
                if ($(this).prop('checked')) {
                    $('#tds_no').addClass('validinput');
                }
                else {
                    $('#tds_no').removeClass('validinput');
                    $('#validtds_no').remove();
                }
            });

            document.getElementById('so_date').valueAsDate = new Date();
        });
        function buyerchange(id) {
            if (id != "") {
                $("#consignee_id").val(id).trigger("change");
                GetBuyerDetails(id);
                GetConsigneeDetails(id);
            }
        };
        function consigneechange(id) {
            if (id != "") {
                GetConsigneeDetails(id);
            }
        };

        $('#salequotation').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            columnDefs: [{
                orderable: false,
                className: 'select-checkbox',
                targets: 15
            }],
            aoColumns: [
                     { sname: "a", bVisible: false },
                     { sname: "b", bVisible: false },
                     { sname: "c", bVisible: false },
                     { sname: "d" },
                     { sname: "e" },
                     { sname: "f" },
                     { sname: "g", sWidth: "11%" },
                     { sname: "h", sWidth: "8%","sClass": "right" },
                     { sname: "i", bVisible: false },
                     { sname: "j", sWidth: "8%" },
                     { sname: "k", sWidth: "8%","sClass": "right" },
                     { sname: "l", bVisible: false,"sClass": "right" },
                     { sname: "m", bVisible: false ,"sClass": "right"},
                     { sname: "n", sWidth: "11%","sClass": "right" },
                     { sname: "o", bVisible: false ,"sClass": "right"},
                     { sname: "p", bVisible: false ,"sClass": "right"},
                     { sname: "q", bVisible: false },
                     { sname: "r", sWidth: "11%" ,"sClass": "right"},
                     { sname: "s", bVisible: false },
                     { sname: "t", bVisible: false },
                     { sname: "u", bVisible: true },
                     { sname: "v", bVisible: false },
                     { sname: "w", bVisible: false },
                     { sname: "x", bVisible: false },
                     { sname: "y", sWidth: "11%", },
                     { sname: "z", sWidth: "11%",bVisible: false },
                     {
                         sname: "aa", sWidth: "2%",
                         mRender: function (data, type, row) {
                             return '<input type="checkbox" data-index='+row[1]+' class="check" name="id[]" value="' + $('<div/>').text(data).html() + '" id=chk' + row[1] + '>';
                         }
                     }

            ]

        });
        $("#salesbutton").on("click", function (event) {
            var t = $('#salequotation').DataTable();
            t.fnClearTable();
            $("#soquotation_id").val('').trigger("change");
            $('#myModal1').modal('show');
            $('#example-select-all').attr('checked', false);
        })


        function GetSalesOrder(id) {
            $("#soquotation_id").val("").trigger("change");
            if (id != '') {
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetQuotationNumber", "SalesOrder")',
                    data: { id: id },
                    success: function (ITEM) {
                        $("#soquotation_id").html("");
                        $("#soquotation_id").append($("<option/>").val(0).text(""));
                        $.each(ITEM.item, function () {
                            $("#soquotation_id").append($("<option/>").val(this.QUOTATION_ID).text(this.quotation_No_Date));
                        });
                    },
                    error: function (emp) {
                        $('#soquotation_id').val('').trigger("change");
                    }
                });
            }
            else {
                $('#soquotation_id').val('').trigger("change");
            }
        }
        $(".add").on("click", function (event) {
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            var item_name = $("#ITEM_ID").find("option:selected").text();
            var item_code = $("#ITEM_ID").val();
            var delevery_date = $("#dte").val();
            var qty = $("#quantity").val();
            var unit_id = $("#UOM").val();
            var unit_name = $("#UOM").find("option:selected").text();
            var unit_price = $("#unitprice").val();
            var discount = $("#discount").val();
            var effectiveprice = $("#effectiveprice").val();
            var salesvalue = $("#salesvalue").val();
            var assessablerate = $("#assessablerate").val();
            var assessablevalue = $("#assessablevalue").val();
            var taxcode = $("#taxcode").val();
            var tax_name = $("#taxcode option:selected").text();
            var tax_code = $("#taxcode").val(); 
            var storage_location_id = $("#storage_location_id").val();
            var storage_location_name = $("#storage_location_id option:selected").text();
            var quotation_detail_id = $("#quotationdetailid").val();
            var drawing_no= $('#drawing_no').val();
            var material_cost_per_unit =$('#material_cost_per_unit').val();
            var hsn_id =$("#sac_hsn_id").val();
            var hsn_code = $("#sac_hsn_id").find("option:selected").text();
            if ($("#machine_charges").val()=='') {
                var machine_charges = 0.00
            }
            else {
                var machine_charges = $("#machine_charges").val();
            }
            if (item_code == '')
            {
                swal("","Please Select Item Name.","error");
                return false;
            }
            if(hsn_id=='')
            {
                swal("", "Please Select SAC/HSN Code.", "error");
                return false;
            }
            if(hsn_id==0)
            {
                swal("", "Please Select SAC/HSN Code.", "error");
                return false;
            }
            if (storage_location_id == '') {
                swal("", "Please select Storage Location.", "error");
                return false;
            }
            if (delevery_date == '')
            {
                swal("", "Please Select Delivery Date.", "error");
                return false;
            }
            if (qty == '') {
                swal("", "Please Enter Quantity.", "error");
                return false;
            }
            if (qty == 0) {
                swal("", "Quantity should be greater than zero.", "error");
                return false;
            }
            if (unit_id == '') {
                swal("", "Please select Unit.", "error");
                return false;
            }
            if (unit_price == '') {
                swal("", "Please enter unit price.", "error");
                return false;
            }
            if (assessablerate == '') {
                swal("", "Assessable rate is required.", "error");
                return false;
            }
            if (assessablerate == 0) {
                swal("", "Assessable rate is required.", "error");
                return false;
            }
            if (taxcode == '') {
                swal("", "Please select tax code.", "error");
                return false;
            }
            if (discount == '')
            {
                discount = 0;
            }

            if(material_cost_per_unit=="")
            {
                material_cost_per_unit=0;
            }
            if ($("#srno").val() == "")
            {
                t.fnAddData(['', rowCount + 1, item_code, item_code, item_name,hsn_id,hsn_code, delevery_date, parseFloat(qty).toFixed(2), unit_id, unit_name, parseFloat(unit_price).toFixed(2), parseFloat(discount).toFixed(2), parseFloat(effectiveprice).toFixed(2), parseFloat(qty * effectiveprice).toFixed(2), parseFloat(assessablerate).toFixed(2), parseFloat(assessablevalue).toFixed(2), tax_code, storage_location_id, storage_location_name, tax_name,parseFloat(machine_charges).toFixed(2), quotation_detail_id, drawing_no,parseFloat(material_cost_per_unit).toFixed(2), ''
                ]);
            }
            else
            {
                var cc =parseInt($("#srno").val());
                t.fnUpdate(['', cc + 1, item_code, item_code, item_name,hsn_id,hsn_code, delevery_date, parseFloat(qty).toFixed(2), unit_id, unit_name, parseFloat(unit_price).toFixed(2), parseFloat(discount).toFixed(2), parseFloat(effectiveprice).toFixed(2), parseFloat(qty * effectiveprice).toFixed(2), parseFloat(assessablerate).toFixed(2), parseFloat(assessablevalue).toFixed(2), tax_code, storage_location_id, storage_location_name, tax_name,parseFloat(machine_charges).toFixed(2), quotation_detail_id, drawing_no,parseFloat(material_cost_per_unit).toFixed(2), ''], cc)
            }
            TDSChange();
            clearmodel();
            return true;
        });
        function clearmodel()
        {
            $("#ITEM_ID").val('').trigger('change');
            $("#quantity").val('');
            $("#UOM").val('').trigger('change');
            $("#unitprice").val('');
            $("#discount").val('');
            $("#effectiveprice").val('');
            $("#salesvalue").val('');
            $("#assessablerate").val('');
            $("#assessablevalue").val('');
            $("#taxcode").val('').trigger('change');
            $("#srno").val('');
            $('#dte').val('');
         //   $("#storage_location_id").val('').trigger('change');
            $('#quotationdetailid').val('');
            $('#drawing_no').val("");
            $('#material_cost_per_unit').val("");
            $("#sac_hsn_id").html("");
            $("#sac_hsn_id").append($('<option></option>').val(0).html("---Select---"));
        }
        $('#ContactGrid').on('click', '.delete', function () {
            var t = $('#ContactGrid').DataTable();
            var id = $(this).parent('td').parent('tr').index();
            var deleteids = t.fnGetData(id)[1];
            var del = $("#deleteids").val();
            swal({
                title: "Are you sure?",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: true
            },
     function (isConfirm) {
         if (isConfirm) {
             if (del != '') {
                 $("#deleteids").val(del + "" + deleteids + "~");
             }
             else {
                 $("#deleteids").val(deleteids + "~");
             }

             t.fnDeleteRow(id);
             TDSChange();
             var len = t.fnGetData().length;
             var i = 1;
             var row = 0;
             if (len > 0) {
                 $('#ContactGrid tbody tr').each(function () {
                     t.fnUpdate(i, row, 1);
                     i++;
                     row++;
                 });
             }
         }
     });
        });
        function calculation() {
            var quantity = $("#quantity").val();
            var unitprice = $("#unitprice").val();
            var discount = $("#discount").val();
            var assessable = $("#assessablerate").val();
            // alert(discount);
            var effectiveprice = 0;
            if (quantity=="")
            {
                quantity = 0;
            }
            if (unitprice=="")
            {
                unitprice = 0;
            }
            if (discount=="")
            {
                effectiveprice = unitprice;
            }
            else
            {
                effectiveprice = unitprice - (unitprice * discount / 100);
            }
            var d = effectiveprice;
            $("#effectiveprice").val(d);
            $("#assessablerate").val(d);
            var dd = quantity * d;
            $("#salesvalue").val(dd);
            var assessable1 = $("#assessablerate").val();
            var ddd = assessable1 * quantity;
            $("#assessablevalue").val(ddd);
        }
        function asscalculation()
        {
            var quantity = $("#quantity").val();
            var assessable1 = $("#assessablerate").val();
            var dddd = assessable1 * quantity;
            $("#assessablevalue").val(dddd.toFixed(2));
        }
        $('#ContactGrid').DataTable({
            "bPaginate": false,
            "ordering": false,
            "bfooter": false,
            "info": false,
            "bLengthChange": false,
            "bAutoWidth": false,
            "bFilter": false,
            "bSort": false,
            aoColumns: [
                     { sname: "a", bVisible: false },
                     { sname: "b", sWidth: "5%" },
                     { sname: "c", bVisible: false },
                     { sname: "d", bVisible: false },
                     { sname: "e" },
                     { sname: "f", bVisible: false  },
                     { sname: "g" },
                     { sname: "h","sClass": "right", sWidth: "8%"},
                     { sname: "i","sClass": "right", sWidth: "8%" },
                     { sname: "j", bVisible: false },
                     { sname: "k" , sWidth: "8%"},
                     { sname: "l", sWidth: "8%","sClass": "right",bVisible: false },
                     { sname: "m", sWidth: "8%", "sClass": "right" ,bVisible: false},
                     { sname: "n", sWidth: "8%","sClass": "right" },
                     { sname: "o", sWidth: "8%","sClass": "right"},
                     { sname: "p", bVisible: true,"sClass": "right" },
                     { sname: "q", bVisible: true ,"sClass": "right"},
                     { sname: "r" ,bVisible: false },
                     { sname: "s", bVisible: false },
                     { sname: "t", bVisible: false },
                     { sname: "u", bVisible: true },
                     { sname: "v", bVisible: true },
                     { sname: "w", bVisible: false },
                     { sname: "x", sWidth: "8%" , bVisible: false},
                     { sname: "y", sWidth: "8%" ,"sClass": "right", bVisible: false},
                     {
                         sname: "z", sWidth: "6%",
                         bSortable: false,
                         mRender: function (data, type, full) {
                             return '<img class="edit" src="../images/writing_file.png" height="20px" width="25px" alt="Edit"  /><img class="delete" src="../images/remove.png" height="20px" width="25px" alt="Delete"  />';
                         }
                     }]

        });
        function CheckPlant()
        {
            if($("#plant_id").val()=="")
            {
                sweetAlert("", "Select plant first !", "error");
                return false;
            }
            else
            {
                $('#myModal').modal('show');
                clearmodel();
            }
        }
        function recalculate_row_numbers() {
            var t = $('#ContactGrid').DataTable()
            table_rows = t.fnGetNodes();
            $.each(table_rows, function (index) {
                $("td:first", this).html(index + 1);
                var nn = index + 1;
                $("td:last", this).html('<img class="edit" src="../../Images/writing_file.png" height="20px" width="25px" alt="Edit" /><img class="edit" src="../../Images/remove.png" height="20px" width="25px" alt="Delete" ');
            });
        }
        $('#ContactGrid').on('click', '.edit', function () {
            var t = $('#ContactGrid').DataTable();
            var id = $(this).parent('td').parent('tr').index();
            $('#myModal').modal('show');
            $("#srno").val(id);
            $("#ITEM_ID").val(t.fnGetData(id)[2]).trigger('change');
            $('#dte').val(t.fnGetData(id)[7]);
            $('#quantity').val(t.fnGetData(id)[8]);
            $('#UOM').val(t.fnGetData(id)[9]).trigger('change');
            $('#unitprice').val(t.fnGetData(id)[11]);
            $('#discount').val(t.fnGetData(id)[12]);
            $('#effectiveprice').val(t.fnGetData(id)[13]);
            $('#salesvalue').val(t.fnGetData(id)[14]);
            $('#assessablerate').val(t.fnGetData(id)[15]);
            $('#assessablevalue').val(t.fnGetData(id)[16]);
            $("#taxcode").val(t.fnGetData(id)[17]).trigger('change');
            $("#storage_location_id").val(t.fnGetData(id)[18]);//.trigger('change')
            $('#quotationdetailid').val(t.fnGetData(id)[21]).trigger('change');
            $('#drawing_no').val(t.fnGetData(id)[22]);
            $('#material_cost_per_unit').val(t.fnGetData(id)[23]);
        });
        function GetBuyerDetails(id) {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetBuyerDetails", "Generic")',
                data: { id: id },
               // async:false,
                success: function (emp) {
                    console.log(emp);
                    $('#billing_address').val(emp.billing.BILLING_ADDRESS);
                    $('#billing_city').val(emp.billing.BILLING_CITY);
                    $('#billing_country_id').val(emp.billing.BILLING_COUNTRY_ID);
                    $('#billing_state_id').val(emp.billing.BILLING_STATE_ID);
                    if($("#supply_state_id").val()=="")
                    {
                        $('#supply_state_id').val(emp.billing.BILLING_STATE_ID).trigger("change");
                    }
                    $('#billing_pincode').val(emp.billing.BILLING_PINCODE);
                    $('#billing_email_id').val(emp.billing.EMAIL_ID_PRIMARY);
                    $("#payment_cycle_type_id").val(emp.billing.PAYMENT_CYCLE_TYPE_ID);
                    $("#payment_terms_id").select2("val", emp.billing.PAYMENT_TERMS_ID);
                    $('#payment_cycle_id').val(emp.billing.PAYMENT_CYCLE_ID);
                    // $('#payment_terms_id').val(emp.billing.PAYMENT_TERMS_ID);
                    $('#sales_rm_id').val(emp.billing.SALES_EXEC_ID);
                    $('#freight_terms_id').val(emp.billing.FREIGHT_TERMS_ID);
                    if (emp.billing.TERRITORY_ID == 0) {
                        $('#territory_id').val("");
                    }
                    else {
                        $('#territory_id').val(emp.billing.TERRITORY_ID);
                    }

                    $("#gst_no").val(emp.billing.gst_no);
                    $("#pan_no").val(emp.billing.pan_no);

                    $('#doc_currency_id').val(emp.billing.CREDIT_LIMIT_CURRENCY_ID);
                    $('#net_value_currency_id').val(emp.billing.CREDIT_LIMIT_CURRENCY_ID);
                    $('#gross_value_currency_id').val(emp.billing.CREDIT_LIMIT_CURRENCY_ID);
                    $('#tds_code_id').val(emp.billing.tds_id);
                    if(emp.billing.gst_tds_id!=0)
                    {
                        $('#gst_tds_code_id').val(emp.billing.gst_tds_id);
                    }
                },
                error: function (emp) {
                    $('#tds_code_id').val('');
                    $('#gst_tds_code_id').val('');
                    $('#supply_state_id').val('').trigger("change");
                    $('#billing_address').val('');
                    $('#billing_city').val('');
                    $('#billing_country_id').val('');
                    $('#billing_state_id').val('');
                    $('#billing_pincode').val('');
                    $('#billing_email_id').val('');
                    $('#payment_cycle_id').val('');
                    $('#payment_terms_id').val('');
                    $('#sales_rm_id').val('');
                    $('#freight_terms_id').val('');
                    $('#territory_id').val('');
                    $("#payment_cycle_type_id").val('');
                    $("#gst_no").val('');
                    $("#pan_no").val('');
                    $("#service_tax_no").val('');
                    $("#ecc_no").val('');
                    $("#cst_tin_no").val('');
                    $("#vat_tin_no").val('');
                    $('#commisionerate').val('');
                    $('#range').val('');
                    $('#division').val('');
                }
            });
        }
        function GetConsigneeDetails(id) {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetBuyerDetails", "Generic")',
                data: { id: id },
               // async:false,
                success: function (emp) {
                    $('#shipping_address').val(emp.billing.BILLING_ADDRESS);
                    $('#shipping_city').val(emp.billing.BILLING_CITY);
                    $('#shipping_country_id').val(emp.billing.BILLING_COUNTRY_ID);
                    $('#shipping_state_id').val(emp.billing.BILLING_STATE_ID);
                    $("#shipping_gst_no").val(emp.billing.gst_no);
                    $("#shipping_pan_no").val(emp.billing.pan_no);
                    $('#shipping_email_id').val(emp.billing.EMAIL_ID_PRIMARY);
                    if($("#delivery_state_id").val()=="")
                    {
                        $('#delivery_state_id').val(emp.billing.BILLING_STATE_ID).trigger("change");
                    }

                    $('#shipping_pincode').val(emp.billing.BILLING_PINCODE);

                },
                error: function (emp) {
                    $("#shipping_gst_no").val('');
                    $("#shipping_pan_no").val('');
                    $('#shipping_email_id').val('');
                    $('#shipping_address').val('');
                    $('#shipping_city').val('');
                    $('#shipping_country_id').val('');
                    $('#shipping_state_id').val('');
                    $('#shipping_pincode').val('');
                    $('#delivery_state_id').val('').trigger("change");
                }
            });
        }
    function GetUnit(id)
    {
       // var id = $("#ITEM_ID").val();
        if (id != '')
        {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetUserDescriptionForItem", "Generic")',
                data: { id: id },
                success: function (ITEM) {
                    console.log(ITEM);
                    $('#UOM').val(ITEM.UOM_ID);
                    $("#sac_hsn_id").html(""); // clear before appending new list
                    if(ITEM.sac_id!=0)
                    {
                        $("#sac_hsn_id").append($('<option></option>').val(ITEM.sac_id).html(ITEM.sac_name));
                        $("#sac_id").val(ITEM.sac_id);
                        $("#sac_name").val(ITEM.sac_name);
                    }
                    else
                    {
                        $("#sac_hsn_id").append($('<option></option>').val(0).html("---Select---"));
                    }
                },
                error: function (emp) {
                    $('#UOM').val('');
                    $("#sac_hsn_id").html(""); // clear before appending new list
                    $("#sac_hsn_id").append($('<option></option>').val(0).html("---Select---"));
                }
            });
        }
        else
        {
            $('#UOM').val('');
            $("#sac_hsn_id").html(""); // clear before appending new list
            $("#sac_hsn_id").append($('<option></option>').val(0).html("---Select---"));
        }

    }

        function TDSChange() {
            var tds_code_id =$("#tds_code_id").val();
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            if (tds_code_id != "") {
                tds_code_id = tds_code_id;
            }
            else
            {
                tds_code_id=0;
            }
            if(tds_code_id==null)
            {
                tds_code_id=0;
            }
            var str;
            var str1;
            var str2;
            var str3;
            var tot = 0;
            for (i = 0; i < rowCount; i++) {
                str1 = t.fnGetData(i)[17] + "~";
                str1 = str1 + t.fnGetData(i)[16] + "~";
                str1 = str1 + t.fnGetData(i)[14];
                if (i == 0) {
                    str = str1 + ",";
                }
                else {
                    str = str + str1 + ",";

                }
                tot = tot + parseFloat(t.fnGetData(i)[14]);
            }
            getnetTotal();
            GetTaxDetail(str.slice(0, -1), tot, $("#so_date").val(), tds_code_id);
        }
        function GetTaxDetail(taxdetail, amount, dt,tds_code_id) {
            $.ajax({
                url: '@Url.Action("GetTaxCalculation", "Generic")',
                type: "GET",
                dataType: "JSON",
                data: {entity:"calculatetax", st: taxdetail, amt: amount, dt: dt, tds_code_id: tds_code_id },
                success: function (Payment_Cycle) {
                    $('#TaxGrid tbody').html('');
                    $.each(Payment_Cycle, function (i, cycle) {
                        $('#TaxGrid').append('<tbody>');
                        $('#TaxGrid').append('<tr><td>' + cycle.tax_name + '</td><td align="right">' + parseFloat(cycle.tax_value).toFixed(2) + '</td></tr>')
                        $('#TaxGrid').append('</tbody>');
                        $("#sal_gross_value").val(parseFloat(cycle.tax_value).toFixed(2));
                    });
                }
            });
        }
        function getnetTotal() {
            var t = $('#ContactGrid').DataTable();
            var rowCount = t.fnGetData().length;
            var total = 0;
            for (i = 0; i < rowCount; i++) {
                total = total + parseFloat(t.fnGetData(i)[14]);
            }
            $("#sal_net_value").val(parseFloat(total).toFixed(2));
            $("#sal_gross_value").val(parseFloat(total).toFixed(2));
        }
        function FillPaymentCycle() {
            var Payment_Cycle = $('#payment_cycle_type_id').val();
            if (Payment_Cycle = "")
            {
                Payment_Cycle = 0;
            }
            if(Payment_Cycle!=0){
                $.ajax({
                    url: '@Url.Action("FillPaymentCycle", "Generic")',
                    type: "GET",
                    dataType: "JSON",
                    data: { Payment_Type_id: Payment_Cycle },
                    success: function (Payment_Cycle) {

                        $("#payment_cycle_id").html(""); // clear before appending new list
                        $("#payment_cycle_id").append($('<option></option>').val(0).html("---Select---"));
                        $.each(Payment_Cycle, function (i, cycle) {
                            $("#payment_cycle_id").append(
                                $('<option></option>').val(cycle.PAYMENT_CYCLE_ID).html(cycle.PAYMENT_CYCLE_NAME));
                        });
                    }
                });
            }
        }

        function TabletoJeson()
        {
            var t = $('#ContactGrid').DataTable()
            var rowCount = t.fnGetData().length;
            var str;
            var str1;

            var str2;
            var str3;
            $( "#so_detail" ).empty();
            for (i = 0; i < rowCount; i++)
            {
                $("#so_detail").append('<input type="hidden" id="so_detail_id' + i + '" name="so_detail_id" value=' + t.fnGetData(i)[0] + ' >');
                $("#so_detail").append('<input type="hidden" id="item_id' + i + '" name="item_id" value=' + t.fnGetData(i)[2] + ' >');
                $("#so_detail").append('<input type="hidden" id="sac_hsn_id1' + i + '" name="sac_hsn_id1" value=' + t.fnGetData(i)[5] + ' >');
                $("#so_detail").append('<input type="hidden" id="delivery_date1' + i + '" name="delivery_date1" value=' + t.fnGetData(i)[7] + ' >');
                $("#so_detail").append('<input type="hidden" id="quantity' + i + '" name="quantity" value=' + t.fnGetData(i)[8] + ' >');
                $("#so_detail").append('<input type="hidden" id="uom_id' + i + '" name="uom_id" value=' + t.fnGetData(i)[9] + ' >');
                $("#so_detail").append('<input type="hidden" id="unit_price' + i + '" name="unit_price" value=' + t.fnGetData(i)[11] + ' >');
                $("#so_detail").append('<input type="hidden" id="discount' + i + '" name="discount" value=' + t.fnGetData(i)[12] + ' >');
                $("#so_detail").append('<input type="hidden" id="effective_unit_price' + i + '" name="effective_unit_price" value=' + t.fnGetData(i)[13] + ' >');
                $("#so_detail").append('<input type="hidden" id="sales_value' + i + '" name="sales_value" value=' + t.fnGetData(i)[14] + ' >');
                $("#so_detail").append('<input type="hidden" id="assessable_rate' + i + '" name="assessable_rate" value=' + t.fnGetData(i)[15] + ' >');
                $("#so_detail").append('<input type="hidden" id="assessable_value' + i + '" name="assessable_value" value=' + t.fnGetData(i)[16] + ' >');
                $("#so_detail").append('<input type="hidden" id="tax_id' + i + '" name="tax_id" value=' + t.fnGetData(i)[17] + ' >');
                $("#so_detail").append('<input type="hidden" id="sloc_id' + i + '" name="sloc_id" value=' + t.fnGetData(i)[18] + ' >');
                $("#so_detail").append('<input type="hidden" id="machine_charges' + i + '" name="machine_charges" value=' + t.fnGetData(i)[21] + ' >');
                $("#so_detail").append('<input type="hidden" id="quotation_detail_id' + i + '" name="quotation_detail_id" value=' + t.fnGetData(i)[22] + ' >');
                $("#so_detail").append('<input type="hidden" id="drawing_no' + i + '" name="drawing_no" value=' + t.fnGetData(i)[23] + ' >');
                $("#so_detail").append('<input type="hidden" id="material_cost_per_unit' + i + '" name="material_cost_per_unit" value=' + t.fnGetData(i)[24] + ' >');
            }
        }

    </script>

    <script type="text/javascript">
        function GetStorageLocation(id) {
            if (id == "") {
                id = 0;
            }
            $.ajax({
                url: '@Url.Action("GetStorageLocation", "Generic")',
                type: "GET",
                dataType: "JSON",
                data: { id: id },
                success: function (id) {
                    $("#storage_location_id").html(""); // clear before appending new list
                    //$("#storage_location_id").append($('<option></option>').val("").html("---Select---"));
                    $.each(id, function (i, cycle) {
                        if(i==0)
                        {
                            $("#storage_location_id").append(
                                                      $('<option></option>').val(cycle.storage_location_id).html(cycle.storage_location_name));
                        }

                    });
                }
            });
        }
        function onSelect11(args) {
            var id = "";
            //var matches = args.value.split("~");
            id = args;
            GetQuotationProduct(id);
        }
        $('#example-select-all').on('click', function () {
            if ($(this).hasClass('allChecked')) {
                $('input[type="checkbox"]', '#salequotation').prop('checked', false);
            } else {
                $('input[type="checkbox"]', '#salequotation').prop('checked', true);
            }
            $(this).toggleClass('allChecked');
        });
        $(document).on('change', 'input[type="checkbox"]', function () {
            if ($('.check').is(':checked')) {
                $('.addSALES ').removeAttr('disabled');
            }
            else {
                $('.addSALES ').attr('disabled', true);
            }
        });
        $('#salesbutton').click(function () {
            $('.addSALES ').attr('disabled', true);
            $('#example-select-all').attr('checked', false);
        });

        function GetQuotationProduct(soid) {
            var t = $('#salequotation').DataTable();
            t.fnClearTable();
            if (soid == "") {
                soid = 0;
            }
            var rowCount = t.fnGetData().length;
            var i = 1;
            $.ajax({
                url: '@Url.Action("GetQuotationProductDetail", "SalesOrder")',
                type: "GET",
                dataType: "JSON",
                data: { code: soid },
                success: function (soid) {
                    $.each(soid, function (i, cycle) {
                        console.log(cycle);
                        t.fnAddData([cycle.quotation_detail_id, i, cycle.item_id, cycle.item_code + "-" + cycle.item_name,cycle.sac_hsn_id,cycle.sac_hsn_name, JSONDate(cycle.delivery_date), parseFloat(cycle.quantity).toFixed(2), cycle.uom_id, cycle.uom_name, parseFloat(cycle.unit_price).toFixed(2), parseFloat(cycle.discount).toFixed(2), parseFloat(cycle.effective_unit_price).toFixed(2), parseFloat(cycle.sales_value).toFixed(2), parseFloat(cycle.assessable_rate).toFixed(2), parseFloat(cycle.assessable_value).toFixed(2), cycle.tax_id, parseFloat(cycle.balance_quantity).toFixed(2), cycle.tax_name, cycle.sloc_id, cycle.sloc_name, cycle.quotation_detail_id, cycle.drawing_no, parseFloat(cycle.material_cost_per_unit).toFixed(2), '<input type="number" id="txt' + i + '" data-index='+i+' class="form-control so_quantity" />','', ''
                        ]);
                        i = i + 1;
                    });
                }
            });
        }
        function JSONDate(dateStr) {
            var m, day;
            jsonDate = dateStr;
            var d = new Date(parseInt(jsonDate.substr(6)));
            m = d.getMonth() + 1;
            if (m < 10)
                m = '0' + m
            if (d.getDate() < 10)
                day = '0' + d.getDate()
            else
                day = d.getDate();
            return (d.getFullYear() + '-' + m + '-' + day);
        }
        $("#doc_currency_id").change(function () {
            $("#net_value_currency_id").val(this.value);
            $("#gross_value_currency_id").val(this.value);
        });
        var checkedarray = [];
        $(".addSALES").on("click", function (event) {
            var matches = $("#soquotation_id").val().split("~");
            $("#quotation_id").val($("#soquotation_id").val());
            var tt = $("#soquotation_id").val();
            var s = $('#salequotation').DataTable()
            var t = $('#ContactGrid').DataTable()
            t.fnClearTable();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetQuotationForSO", "SalesOrder")',
                data: { id: tt },
                success: function (soid) {
                    $("#business_unit_id").val(soid.BUSINESS_UNIT_ID).trigger("change");
                    $("#freight_terms_id").val(soid.FREIGHT_TERMS_ID);
                    $("#plant_id").val(soid.PLANT_ID).trigger("change");
                    GetStorageLocation(soid.PLANT_ID);
                    GetDocumentCategory(soid.PLANT_ID);
                    $("#SALES_RM_ID").val(soid.SALES_RM_ID);
                    $("#territory_id").val(soid.TERRITORY_ID);
                    $("#billing_address").val(soid.BILLING_ADDRESS);
                    $("#billing_city").val(soid.BILLING_CITY);
                    $("#billing_country_id").val(soid.BILLING_COUNTRY_ID);
                    $("#billing_state_id").val(soid.BILLING_STATE_ID);
                    $("#billing_email_id").val(soid.BILLING_EMAIL_ID);
                    $("#billing_pincode").val(soid.BILLING_PINCODE);
                    $("#shipping_address").val(soid.SHIPPING_ADDRESS);
                    $("#shipping_city").val(soid.SHIPPING_CITY);
                    $("#shipping_country_id").val(soid.SHIPPING_COUNTRY_ID);
                    $("#shipping_state_id").val(soid.BILLING_STATE_ID);
                    $("#shipping_pincode").val(soid.SHIPPING_PINCODE);
                    $("#gross_value_currency_id").val(soid.GROSS_VALUE_CURRENCY_ID);
                    $("#net_value_currency_id").val(soid.NET_VALUE_CURRENCY_ID);
                    $("#payment_cycle_type_id").val(soid.PAYMENT_CYCLE_TYPE_ID);
                    $("#payment_cycle_id").val(soid.PAYMENT_CYCLE_ID);
                    $("#payment_terms_id").val(soid.PAYMENT_TERMS_ID).trigger("change");
                    $("#pan_no").val(soid.pan_no);
                    $("#gst_no").val(soid.gst_no);
                    $("#vat_tin_no").val(soid.vat_tin_no);
                    $("#ecc_no").val(soid.ecc_no);
                    $("#service_tax_no").val(soid.service_tax_no);
                    $("#cst_tin_no").val(soid.cst_tin_no);
                    if(soid.FORM_ID!=0)
                    {
                        $("#form_id").val(soid.FORM_ID);
                    }
                    $("#doc_currency_id").val(soid.doc_currency_id);
                    $('#commisionerate').val(soid.commisionerate);
                    $('#range').val(soid.range);
                    $('#division').val(soid.division);
                    $("#supply_state_id").val(soid.supply_state_id).trigger("change");
                    $("#delivery_state_id").val(soid.delivery_state_id).trigger("change");
                    $("#buyer_id").val(soid.BUYER_ID).trigger("change");
                    $("#consignee_id").val(soid.CONSIGNEE_ID).trigger("change");
                },
                error: function (emp) {
                }
            });
            var i = 0;
            var checkGreater = 0;
            var checkEmpty = 0;
            var serial_no = 1;
            var isFalse = false;
            for (var k = 0; k <= checkedarray.length - 1; k++){
                i = checkedarray[k];
                var txt = s.fnGetData(i)[25];
                if (txt == '') {
                    swal("", "SO Quantity cannot be left blank!", "error");
                    return isFalse;
                }
                if (txt == '0') {
                    swal("", "SO Quantity cannot be zero!", "error");
                    return isFalse;
                }
                if (txt == '0.00') {
                    swal("", "SO Quantity cannot be zero!", "error");
                    return isFalse;
                }
                if ((txt.indexOf('-'))!=-1) {
                    swal("", "SO Quantity cannot be negative!", "error");
                    return isFalse;
                }
                if (parseFloat(txt) > s.fnGetData(i)[17]) {
                    swal("", "SO Quantity cannot be greater than Balance Quantity!", "error");
                    return isFalse;
                }
            }


            for (var k = 0; k <= checkedarray.length - 1; k++) {
                i = checkedarray[k];
                var txt = s.fnGetData(i)[25];
                try {
                    t.fnAddData(['', serial_no, s.fnGetData(i)[2], s.fnGetData(i)[2], s.fnGetData(i)[3], s.fnGetData(i)[4], s.fnGetData(i)[5], s.fnGetData(i)[6],
                        parseFloat(txt).toFixed(2), s.fnGetData(i)[8], s.fnGetData(i)[9], parseFloat(s.fnGetData(i)[10]).toFixed(2),
                        parseFloat(s.fnGetData(i)[11]).toFixed(2), parseFloat(s.fnGetData(i)[12]).toFixed(2),
                        parseFloat(parseFloat(txt) * parseFloat(s.fnGetData(i)[12])).toFixed(2), parseFloat(s.fnGetData(i)[14]).toFixed(2),
                        parseFloat(parseFloat(txt) * parseFloat(s.fnGetData(i)[14])).toFixed(2), s.fnGetData(i)[16],
                        s.fnGetData(i)[19], s.fnGetData(i)[20], s.fnGetData(i)[18], s.fnGetData(i)[21], s.fnGetData(i)[22],
                        parseFloat(s.fnGetData(i)[23]).toFixed(2), ''
                    ]);
                    serial_no = serial_no +1;
                }
                catch (err) {
                    checkedarray.length = 0;
                    alert(err.message);
                }
                isFalse = true;
            }

            if(isFalse==true){
                TDSChange();
                $('#myModal1').modal('hide');
                checkedarray.length = 0;
            }
        });


        $('#example-select-all').on('click', function () {
            checkedarray.length = 0;
            var t = $('#salequotation').DataTable();
            var trlen = t.fnGetData().length;
            if ($(this).is(':checked')) {
                if (trlen > 0) {
                    for (var j = 0; j <= trlen - 1; j++) {
                        checkedarray.push(j);
                    }
                }
            }
            else {
                checkedarray.length = 0;
            }
        });
        $(document).on('click', '.check', function () {
            //var index = $(this).parent('td').parent('tr').index();
            var index = $(this).attr('data-index');
            if ($(this).is(':checked')) {
                checkedarray.push(index);
            }
            else {
                var checkedIndex = checkedarray.indexOf(parseInt(index));
                checkedarray.splice(checkedIndex, 1);
            }
        });

        $(document).on('change', '.so_quantity', function () {
            var index = $(this).attr('data-index');
            var _so_quantity = $(this).val();
            if(_so_quantity!=''){
                _so_quantity= parseFloat(_so_quantity).toFixed(2);
            }
            var t = $('#salequotation').DataTable();
            t.fnUpdate(_so_quantity, parseInt(index), 25);
        });
    </script>

}



