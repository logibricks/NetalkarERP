@using Sciffer.Erp.Domain.ViewModel
@{
    ViewBag.Title = "Index";
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
<br /><br /><br />
<div>
    @Html.EJ().Dialog("ErrorList").Title("ErrorList").ShowOnInit(false)
    @(Html.EJ().Grid<ref_mfg_bom_VM>("Searching")
          .Datasource(ds => ds.URL(Url.Action("GetIndexData", "Generic", new { @ctrl_name = "BOM" }))
         .EnableCaching()
        .CachingPageSize(4)
        .TimeTillExpiration(120000)
        .Adaptor(AdaptorType.UrlAdaptor))
        .EditSettings(edit => { edit.AllowAdding().AllowDeleting().AllowEditing().EditMode(EditMode.InlineFormTemplate); })
        .ToolbarSettings(toolBar => toolBar.ShowToolbar().ToolbarItems(items =>
        {
            items.AddTool(ToolBarItems.Add);
            items.AddTool(ToolBarItems.Edit);
            items.AddTool(ToolBarItems.ExcelExport);
            items.AddTool(ToolBarItems.PrintGrid);
        }))
         .PageSettings(p => { p.PageSize(10); })
        .Mappers(map => map.ExportToExcelAction(Url.Action("ExportToExcel", "Generic", new { ctrlname = "BOM" })))
        .AllowSorting()
        .AllowPaging().PageSettings(a => a.PageSize(20))
        .IsResponsive()
        .AllowFiltering()
        .ShowColumnChooser()
        .AllowReordering()
        .AllowScrolling()
        .ScrollSettings(col => { col.Width("100%"); })
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .Columns(col =>
        {
            col.Field("mfg_bom_id").Width("15%").HeaderText("ID").IsPrimaryKey(true).Visible(false).Add();
            col.Field("mfg_bom_no").Width("15%").HeaderText("BOM No").Visible(true).Add();
            col.Field("mfg_bom_name").Width("15%").HeaderText("BOM Name").Add();
            col.Field("out_item_name").Width("15%").HeaderText("Item Name").Add();
            col.Field("create_ts").Width("15%").HeaderText("Created On").Add();
            col.Field("version").Width("15%").HeaderText("Version").Add();


            //
            //col.Field("out_item_id").Width("15%").HeaderText("Item ID").Add();
            //
            // col.Field("mfg_bom_qty").Width("15%").HeaderText("Quantity").Add();
            // col.Field("remarks").Width("15%").HeaderText("Remark").Add();
            // col.Field("category_id").Width("15%").HeaderText("category Id").Visible(true).Add();
            // col.Field("category_name").Width("15%").HeaderText("Category Name").Add();
            // col.Field("drawing_no").Width("15%").HeaderText("Drawing No").Add();
            //
            //

        }).ClientSideEvents(eve => { eve.ActionComplete("complete").EndAdd("EndProcess").EndDelete("EndProcess").EndEdit("EndProcess"); })
    )
</div>
<style>
    .e-editedrow {
        display: none;
    }

    .e-editcell {
        display: none;
    }
</style>
<script>
    var flag = true;
    function complete(args)
    {

        if (args.requestType == "beginedit")
        {
            location.href = "@Url.Action("Edit", "BOM")?id=" + args.rowData.mfg_bom_id;
        }
        if (args.requestType == "add") {
            location.href = "@Url.Action("Create", "BOM")";
        }
    }
    function EndProcess() {
        var gridObj = $("#Searching").ejGrid("instance");
        //console.log(gridObj);
        gridObj.refreshContent();
    }

    $(document).ready(function () {
        var num = '@Html.ViewBag.num';
        if (num != '') {
            if (num != undefined) {
                sweetAlert("", num + " Saved successfully.", "success");
            }
        }
    });

</script>