@using Sciffer.Erp.Domain.ViewModel
@{
    ViewBag.Title = "Index";
}
<br /><br /><br />
<div>
    @(Html.EJ().Grid<ref_plant_notification_vm>("Searching")
        .Datasource(ds => { ds.Json((IEnumerable<object>)ViewBag.DataSource).RemoveURL(Url.Action("Delete", "PlantNotification")).Adaptor(AdaptorType.RemoteSaveAdaptor); })
        .EditSettings(edit => { edit.AllowAdding().AllowDeleting().AllowEditing().EditMode(EditMode.InlineFormTemplate).ShowDeleteConfirmDialog(true); })
        .EnableAltRow().AllowPaging().PageSettings(a => a.PageSize(20))
        .PageSettings(p => { p.PageSize(12); })
        .ToolbarSettings(toolBar => toolBar.ShowToolbar().ToolbarItems(items =>
        {
            items.AddTool(ToolBarItems.Add);
            items.AddTool(ToolBarItems.Edit);
            items.AddTool(ToolBarItems.ExcelExport);
            items.AddTool(ToolBarItems.PrintGrid);
        }))
        .Mappers(map => map.ExportToExcelAction(Url.Action("ExportToExcel", "Generic", new { ctrlname = "PlantNotification" })))
        .AllowSorting()
       .AllowPaging().PageSettings(a => a.PageSize(20)).PageSettings(a => a.PageSize(20))
        .IsResponsive()
        .AllowFiltering()
        .ShowColumnChooser()
        .AllowReordering()
        .AllowScrolling()
        .ScrollSettings(col => { col.Width("100%").Height("Auto"); })
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .Columns(col =>
        {
            col.Field("plant_notification_id").HeaderText("ID").IsPrimaryKey(true).Width(80).Visible(false).Add();
            col.Field("category_name").HeaderText("Notification Category").Add();
            col.Field("doc_number").HeaderText("Number").Add();
            col.Field("notification_type").HeaderText("Notification Type").Add();
            col.Field("notification_date").HeaderText("Notification Date").Format("{0:dd/MM/yyyy}").Add();
            // col.Field("machine_code").HeaderText("Machine Code").Add();
            col.Field("notification_for").HeaderText("Notification For").Add();
            // col.Field("plant_name").HeaderText("Plant Name").Add();

        }).ClientSideEvents(eve =>
        {
            eve.ActionBegin("actionBegin");
            eve.RightClick("rightClick");
        })
    )
</div>
<style>
    .e-editedrow {
        display: none;
    }

    .e-editcell {
        display: none;
    }
</style>

<script type="text/javascript">

    function actionBegin(args) {
        if (args.requestType == "beginedit") {
            location.href = "@Url.Action("Edit", "PlantNotification")?id=" + args.rowData.plant_notification_id;
        }
        if (args.requestType == "add") {
            location.href = "@Url.Action("Create", "PlantNotification")";
        }
    }
    function rightClick(args) {
        location.href = "@Url.Action("Details", "PlantNotification")?id=" + args.rowData.plant_notification_id;
    }

     $(document).ready(function () {
         var saved = '@ViewBag.doc';
         if (saved != '') {
             if (saved != 0) {
                 sweetAlert("", saved + " Saved Successfully", "success");
            }
        }
    });
</script>
