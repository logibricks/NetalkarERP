@model Sciffer.Erp.Domain.ViewModel.create_stock_sheet_vm
@{
    ViewBag.Title = "Create";
}
@using (Html.BeginForm("Create", "CreateStockSheet", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
<div class="form-horizontal" style="margin-top:10px;">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        <div class="row">
            <div class="col-lg-6 col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.category_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                    <div class="col-md-8 col-sm-8 col-xs-12">
                        @Html.DropDownList("category_id", (System.Web.Mvc.SelectList)ViewBag.CategoryList, "Select Category", new { @class = "form-control validinput setPlant", @required = true, })
                        @Html.ValidationMessageFor(model => model.category_id, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6 col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.document_date, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                    <div class="col-md-8 col-sm-8 col-xs-12">
                        @Html.EditorFor(model => model.document_date, new { htmlAttributes = new { @class = "form-control validinput", @required = true } })
                        @Html.ValidationMessageFor(model => model.document_date, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-6 col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.plant_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                <div class="col-md-8 col-sm-8 col-xs-12">
                    @Html.DropDownList("plant_id", (System.Web.Mvc.SelectList)ViewBag.plant, "Select Plant", new { @class = "form-control validinput selectedbycategory", @required = true, @onchange = "GetStorageLocation(this.value)" })
                    @Html.ValidationMessageFor(model => model.plant_id, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-lg-6 col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.sloc_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                <div class="col-md-8 col-sm-8 col-xs-12">
                    @Html.DropDownList("sloc_id", Enumerable.Empty<SelectListItem>
                        (), "Select Storage", new { @class = "form-control validinput", @required = true })
                        @Html.ValidationMessageFor(model => model.sloc_id, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-6 col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.bucket_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12" })
                <div class="col-md-8 col-sm-8 col-xs-12">
                    @Html.DropDownList("bucket_id", (System.Web.Mvc.SelectList)ViewBag.bucket, "Select Bucket", new { @class = "form-control validinput", @required = true, })
                    @Html.ValidationMessageFor(model => model.bucket_id, "", new { @class = "text-danger" })
                </div>

            </div>
        </div>
        <div class="col-lg-6 col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.ref_1, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12 " })
                <div class="col-md-8 col-sm-8 col-xs-12">
                    @Html.EditorFor(model => model.ref_1, new { htmlAttributes = new { @class = "form-control " } })
                    @Html.ValidationMessageFor(model => model.ref_1, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-6 col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.item_category_id, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4 col-xs-12 " })
                <div class="col-md-8 col-sm-8 col-xs-12">
                    @Html.DropDownList("item_category_id", (System.Web.Mvc.SelectList)ViewBag.item_category_list, "Select Item Category", new { @class = "form-control validinput", @required = true, })
                    @Html.ValidationMessageFor(model => model.item_category_id, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" data-controller="CreateStockSheet" class="btn btn-success" id="create" name="Create" style="float:right" />
        </div>
    </div>
</div>
}


<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/RemoveUnexpectedFile.js"></script>
<script src="~/Scripts/requirevalidation.js"></script>
<link href="~/Content/select2.min.css" rel="stylesheet" />

<script type="text/javascript">
    $(document).ready(function () {
        document.getElementById("document_date").valueAsDate = new Date();
        var error= @Html.Raw(Json.Encode(ViewBag.error));
        console.log(error);
        if(error !="")
        {
            sweetAlert("",error,"error");
        }
        $("#plant_id").select2({
            placeholder: "Select Plant",
            allowClear: true
        });
        $("#sloc_id").select2({
            placeholder: "Select Storage",
            allowClear: true
        });
        $("#bucket_id").select2({
            placeholder: "Select Bucket",
            allowClear: true
        });
        $("#category_id").select2({
            placeholder: "Select Category",
            allowClear: true
        });
        $("#status_id").select2({
            placeholder: "Select Status",
            allowClear: true
        });
    });

    function GetStorageLocation(id) {
        if (id == "") {
            id = 0;
        }
        $.ajax({
            url: '@Url.Action("GetStorageLocation", "Generic")',
            type: "GET",
            dataType: "JSON",
            data: { id: id },
            success: function (id) {
                $("#sloc_id").html(""); // clear before appending new list
                $("#sloc_id").append($('<option></option>').val("").html("---Select---"));
                $.each(id, function (i, cycle) {
                    $("#sloc_id").append(
                        $('<option></option>').val(cycle.storage_location_id).html(cycle.storage_location_name));
                });
            }
        });
    }

</script>

}
