
@using Sciffer.Erp.Domain.ViewModel
@{
    ViewBag.Title = "ToolLifeMaster";
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
<br /><br /><br />
<div>
    @Html.EJ().Dialog("ErrorList").Title("ErrorList").ShowOnInit(false)
    @(Html.EJ().Grid<ref_tool_life_VM>("Grid")
       .Datasource(ds => ds.Json((IEnumerable<object>)ViewBag.Datasource).RemoveURL(Url.Action("InlineDelete", "ToolLifeMaster")).InsertURL(Url.Action("InlineInsert", "ToolLifeMaster")).UpdateURL(Url.Action("InlineInsert", "ToolLifeMaster"))
                       .Adaptor(AdaptorType.RemoteSaveAdaptor).Offline(false))
        .EditSettings(edit => { edit.AllowAdding().AllowDeleting().AllowEditing().EditMode(EditMode.InlineFormTemplate).InlineFormTemplateID("#template").ShowDeleteConfirmDialog(true); })
        .EnableAltRow().AllowPaging()
        .PageSettings(p => { p.PageSize(10); })
        .EnableAltRow()

        .ToolbarSettings(toolbar =>
        {
            toolbar.ShowToolbar().ToolbarItems(items =>
            {
                items.AddTool(ToolBarItems.Add);
                items.AddTool(ToolBarItems.Edit);
                items.AddTool(ToolBarItems.Update);
                items.AddTool(ToolBarItems.Cancel);
                items.AddTool(ToolBarItems.PrintGrid);
            });
        })
        .Mappers(map => map.ExportToExcelAction(Url.Action("ExportToExcel", "Generic", new { ctrlname = "ToolLifeMaster" }))
        .ExportToPdfAction(Url.Action("ExportToPdf", "Generic", new { ctrlname = "ToolLifeMaster" })).ExportToWordAction(Url.Action("ExportToWord", "Generic", new { ctrlname = "ToolLifeMaster" })))
        .AllowSorting()
        .AllowPaging()
        .IsResponsive()
        .AllowFiltering()
        .ShowColumnChooser()
        .AllowReordering()
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .Columns(col =>
        {
            col.Field("tool_life_id").HeaderText("ID").IsPrimaryKey(true).ShowInColumnChooser(false).Width(80).Visible(false).Add();

            col.Field("tool_id").HeaderText("Tool Id").Visible(false).ValidationRules(val => val.AddRule("required", true)).Add();
            col.Field("tool_name").HeaderText("Tool name").Add();

            col.Field("tool_renew_type_id").HeaderText("Tool Type Id").Visible(false).ValidationRules(val => val.AddRule("required", true)).Add();
            col.Field("tool_renew_type_name").HeaderText("Tool renew type name").Add();

            col.Field("machine_id").HeaderText("Machine Id").Visible(false).ValidationRules(val => val.AddRule("required", true)).Add();
            col.Field("machine_name").HeaderText("Machine Name").Add();

            col.Field("ITEM_ID").HeaderText("Item Id").Visible(false).ValidationRules(val => val.AddRule("required", true)).Add();
            col.Field("ITEM_NAME").HeaderText("Item Name").Add();
            col.Field("life_no_of_items").HeaderText("Life Number of Items").ValidationRules(val => val.AddRule("required", true)).Add();
            col.Field("per_unit_life_consumption").HeaderText("Per Unit Life Consumption").Add();

        })
        .ClientSideEvents(eve => { eve.ActionComplete("complete").EndAdd("EndProcess").EndDelete("EndProcess").EndEdit("EndProcess"); })
    )
</div>

<script id="template" type="text/template">

    <div>
        <div class="row">
            <div class="col-lg-6 col-md-6 col-xs-12">
                <input type="hidden" id="tool_life_id" name="tool_life_id" value="{{: tool_life_id}}" class="form-control" />
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-lg-2 col-md-2 col-xs-12" style="text-align: right;">
                Tool Name *
            </div>
            <div class="col-lg-4 col-md-4 col-xs-12">
                @Html.DropDownList("tool_id", (System.Web.Mvc.SelectList)ViewBag.tool_list, "--Select--", htmlAttributes: new { @class = "form-control " })
            </div>

            <div class="col-lg-2 col-md-2 col-xs-12" style="text-align: right;">
                Tool Renew Type Name *
            </div>
            <div class="col-lg-4 col-md-4 col-xs-12">
                @Html.DropDownList("tool_renew_type_id", (System.Web.Mvc.SelectList)ViewBag.tool_type_list, "--Select--", htmlAttributes: new { @class = "form-control " })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-lg-2 col-md-2 col-xs-12" style="text-align: right;">
                Item Name *
            </div>
            <div class="col-lg-4 col-md-4 col-xs-12">
                @Html.DropDownList("ITEM_ID", (System.Web.Mvc.SelectList)ViewBag.item_list, "--Select--", htmlAttributes: new { @class = "form-control " })
            </div>

            <div class="col-lg-2 col-md-2 col-xs-12" style="text-align: right;">
                Machine Name *
            </div>
            <div class="col-lg-4 col-md-4 col-xs-12">
                @Html.DropDownList("machine_id", (System.Web.Mvc.SelectList)ViewBag.machine_list, "--Select--", htmlAttributes: new { @class = "form-control " })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-lg-2 col-md-2 col-xs-12" style="text-align: right;">
                Number of items *
            </div>
            <div class="col-lg-4 col-md-4 col-xs-12">
                <input type="number" id="life_no_of_items" name="life_no_of_items" value="{{: life_no_of_items}}" class="form-control" />
            </div>
            <div class="col-lg-2 col-md-2 col-xs-12" style="text-align: right;">
                Per unit life consumption
            </div>
            <div class="col-lg-4 col-md-4 col-xs-12">
                <input type="text" id="per_unit_life_consumption" name="per_unit_life_consumption" value="{{: per_unit_life_consumption}}" class="form-control" />
            </div>
        </div>
        <br />
    </div>
</script>



<script type="text/javascript">

    var flag = true;
    function complete(args) {
        if (args.requestType == "add") {

            $("#tool_id").select2({
                placeholder: "Select Tool",
                allowClear: true
            });

            $("#tool_renew_type_id").select2({
                placeholder: "Select Tool Renew Type",
                allowClear: true
            });
            $("#ITEM_ID").select2({
                placeholder: "Select Item",
                allowClear: true
            });

            $("#machine_id").select2({
                placeholder: "Select Machine",
                allowClear: true
            });

            document.getElementById('per_unit_life_consumption').setAttribute('disabled', 'disabled');
        }

        if (args.requestType == "beginedit") {
            document.getElementById('per_unit_life_consumption').setAttribute('disabled', 'disabled');
            $("#tool_id").val(args.rowData.tool_id);
            $("#tool_renew_type_id").val(args.rowData.tool_renew_type_id);
            $("#ITEM_ID").val(args.rowData.ITEM_ID);
            $("#machine_id").val(args.rowData.machine_id);

            $("#tool_id").select2({
                placeholder: "Select Tool",
                allowClear: true
            });

            $("#tool_renew_type_id").select2({
                placeholder: "Select Tool Renew Type",
                allowClear: true
            });
            $("#ITEM_ID").select2({
                placeholder: "Select Item",
                allowClear: true
            });

            $("#machine_id").select2({
                placeholder: "Select Machine",
                allowClear: true
            });
        }
        if (args.requestType == "save") {
            if (args.data.text == 'duplicate') {
                sweetAlert("", "Tool type already exists!", "error");
                if (args.model.dataSource.dataSource.json[0].tool_life_id == null) {
                    args.model.dataSource.dataSource.json = args.model.dataSource.dataSource.json.splice(1, args.model.dataSource.dataSource.json.length);
                }
            }
            var gridObj = $("#Grid").ejGrid("instance");
            gridObj.refreshContent();
        }
    }

    function EndProcess() {
        var gridObj = $("#Grid").ejGrid("instance");
        gridObj.refreshContent();
    }
</script>

